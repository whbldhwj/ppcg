// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module C_drain_IO_L1_out_he (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n,
        fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout,
        fifo_C_drain_local_in_V_empty_n,
        fifo_C_drain_local_in_V_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [63:0] fifo_C_drain_out_V_V_din;
input   fifo_C_drain_out_V_V_full_n;
output   fifo_C_drain_out_V_V_write;
input  [31:0] fifo_C_drain_local_in_V_dout;
input   fifo_C_drain_local_in_V_empty_n;
output   fifo_C_drain_local_in_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_drain_out_V_V_write;
reg fifo_C_drain_local_in_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] c0_fu_136_p2;
reg   [1:0] c0_reg_175;
wire    ap_CS_fsm_state2;
reg   [0:0] inter_trans_en_0_loa_2_reg_180;
wire   [0:0] icmp_ln664_fu_130_p2;
wire   [1:0] c1_fu_148_p2;
reg   [1:0] c1_reg_188;
wire    ap_CS_fsm_state3;
reg   [0:0] inter_trans_en_0_loa_reg_193;
wire   [0:0] icmp_ln665_fu_142_p2;
wire   [0:0] xor_ln678_fu_154_p2;
wire    ap_CS_fsm_state4;
wire    grp_C_drain_IO_L1_out_in_fu_106_ap_ready;
wire    grp_C_drain_IO_L1_out_in_fu_106_ap_done;
reg   [0:0] arb_1_reg_83;
wire    grp_C_drain_IO_L1_out_in_1_fu_113_ap_ready;
wire    grp_C_drain_IO_L1_out_in_1_fu_113_ap_done;
reg    ap_block_state4_on_subcall_done;
reg   [0:0] local_C_ping_0_V_address0;
reg    local_C_ping_0_V_ce0;
wire   [63:0] local_C_ping_0_V_q0;
reg    local_C_ping_0_V_ce1;
reg    local_C_ping_0_V_we1;
reg   [0:0] local_C_pong_0_V_address0;
reg    local_C_pong_0_V_ce0;
wire   [63:0] local_C_pong_0_V_q0;
reg    local_C_pong_0_V_ce1;
reg    local_C_pong_0_V_we1;
wire    grp_C_drain_IO_L1_out_in_fu_106_ap_start;
wire    grp_C_drain_IO_L1_out_in_fu_106_ap_idle;
wire   [0:0] grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_address0;
wire    grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_ce0;
reg   [63:0] grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_q0;
wire   [0:0] grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_address1;
wire    grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_ce1;
wire    grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_we1;
wire   [63:0] grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_d1;
wire    grp_C_drain_IO_L1_out_in_fu_106_fifo_C_drain_local_in_V_read;
wire    grp_C_drain_IO_L1_out_in_1_fu_113_ap_start;
wire    grp_C_drain_IO_L1_out_in_1_fu_113_ap_idle;
wire   [0:0] grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_address0;
wire    grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_ce0;
reg   [63:0] grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_q0;
wire   [63:0] grp_C_drain_IO_L1_out_in_1_fu_113_fifo_C_drain_out_V_V_din;
wire    grp_C_drain_IO_L1_out_in_1_fu_113_fifo_C_drain_out_V_V_write;
reg    grp_C_drain_IO_L1_out_in_1_fu_113_en;
reg   [1:0] c0_prev_reg_72;
reg    ap_block_state1;
wire   [0:0] ap_phi_mux_arb_1_phi_fu_87_p4;
reg   [1:0] c1_prev_reg_95;
reg    grp_C_drain_IO_L1_out_in_fu_106_ap_start_reg;
reg    grp_C_drain_IO_L1_out_in_1_fu_113_ap_start_reg;
wire    ap_CS_fsm_state5;
reg   [0:0] inter_trans_en_0_fu_60;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 grp_C_drain_IO_L1_out_in_fu_106_ap_start_reg = 1'b0;
#0 grp_C_drain_IO_L1_out_in_1_fu_113_ap_start_reg = 1'b0;
end

C_drain_IO_L1_outjbC #(
    .DataWidth( 64 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
local_C_ping_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_ping_0_V_address0),
    .ce0(local_C_ping_0_V_ce0),
    .q0(local_C_ping_0_V_q0),
    .address1(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_address1),
    .ce1(local_C_ping_0_V_ce1),
    .we1(local_C_ping_0_V_we1),
    .d1(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_d1)
);

C_drain_IO_L1_outjbC #(
    .DataWidth( 64 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
local_C_pong_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_pong_0_V_address0),
    .ce0(local_C_pong_0_V_ce0),
    .q0(local_C_pong_0_V_q0),
    .address1(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_address1),
    .ce1(local_C_pong_0_V_ce1),
    .we1(local_C_pong_0_V_we1),
    .d1(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_d1)
);

C_drain_IO_L1_out_in grp_C_drain_IO_L1_out_in_fu_106(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_C_drain_IO_L1_out_in_fu_106_ap_start),
    .ap_done(grp_C_drain_IO_L1_out_in_fu_106_ap_done),
    .ap_idle(grp_C_drain_IO_L1_out_in_fu_106_ap_idle),
    .ap_ready(grp_C_drain_IO_L1_out_in_fu_106_ap_ready),
    .local_C_0_V_address0(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_address0),
    .local_C_0_V_ce0(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_ce0),
    .local_C_0_V_q0(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_q0),
    .local_C_0_V_address1(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_address1),
    .local_C_0_V_ce1(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_ce1),
    .local_C_0_V_we1(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_we1),
    .local_C_0_V_d1(grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_d1),
    .fifo_C_drain_local_in_V_dout(fifo_C_drain_local_in_V_dout),
    .fifo_C_drain_local_in_V_empty_n(fifo_C_drain_local_in_V_empty_n),
    .fifo_C_drain_local_in_V_read(grp_C_drain_IO_L1_out_in_fu_106_fifo_C_drain_local_in_V_read)
);

C_drain_IO_L1_out_in_1 grp_C_drain_IO_L1_out_in_1_fu_113(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_C_drain_IO_L1_out_in_1_fu_113_ap_start),
    .ap_done(grp_C_drain_IO_L1_out_in_1_fu_113_ap_done),
    .ap_idle(grp_C_drain_IO_L1_out_in_1_fu_113_ap_idle),
    .ap_ready(grp_C_drain_IO_L1_out_in_1_fu_113_ap_ready),
    .local_C_0_V_address0(grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_address0),
    .local_C_0_V_ce0(grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_ce0),
    .local_C_0_V_q0(grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_q0),
    .fifo_C_drain_out_V_V_din(grp_C_drain_IO_L1_out_in_1_fu_113_fifo_C_drain_out_V_V_din),
    .fifo_C_drain_out_V_V_full_n(fifo_C_drain_out_V_V_full_n),
    .fifo_C_drain_out_V_V_write(grp_C_drain_IO_L1_out_in_1_fu_113_fifo_C_drain_out_V_V_write),
    .en(grp_C_drain_IO_L1_out_in_1_fu_113_en)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_C_drain_IO_L1_out_in_1_fu_113_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_C_drain_IO_L1_out_in_1_fu_113_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln665_fu_142_p2 == 1'd0) & (ap_phi_mux_arb_1_phi_fu_87_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((ap_phi_mux_arb_1_phi_fu_87_p4 == 1'd0) & (icmp_ln665_fu_142_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln664_fu_130_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
            grp_C_drain_IO_L1_out_in_1_fu_113_ap_start_reg <= 1'b1;
        end else if ((grp_C_drain_IO_L1_out_in_1_fu_113_ap_ready == 1'b1)) begin
            grp_C_drain_IO_L1_out_in_1_fu_113_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_C_drain_IO_L1_out_in_fu_106_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln665_fu_142_p2 == 1'd0) & (ap_phi_mux_arb_1_phi_fu_87_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((ap_phi_mux_arb_1_phi_fu_87_p4 == 1'd0) & (icmp_ln665_fu_142_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_C_drain_IO_L1_out_in_fu_106_ap_start_reg <= 1'b1;
        end else if ((grp_C_drain_IO_L1_out_in_fu_106_ap_ready == 1'b1)) begin
            grp_C_drain_IO_L1_out_in_fu_106_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln664_fu_130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        arb_1_reg_83 <= 1'd0;
    end else if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
        arb_1_reg_83 <= xor_ln678_fu_154_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln665_fu_142_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c0_prev_reg_72 <= c0_reg_175;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c0_prev_reg_72 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln664_fu_130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c1_prev_reg_95 <= 2'd0;
    end else if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
        c1_prev_reg_95 <= c1_reg_188;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
        inter_trans_en_0_fu_60 <= 1'd1;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inter_trans_en_0_fu_60 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        c0_reg_175 <= c0_fu_136_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c1_reg_188 <= c1_fu_148_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln664_fu_130_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        inter_trans_en_0_loa_2_reg_180 <= inter_trans_en_0_fu_60;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln665_fu_142_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        inter_trans_en_0_loa_reg_193 <= inter_trans_en_0_fu_60;
    end
end

always @ (*) begin
    if (((grp_C_drain_IO_L1_out_in_1_fu_113_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_C_drain_IO_L1_out_in_1_fu_113_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((arb_1_reg_83 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((arb_1_reg_83 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        fifo_C_drain_local_in_V_read = grp_C_drain_IO_L1_out_in_fu_106_fifo_C_drain_local_in_V_read;
    end else begin
        fifo_C_drain_local_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((arb_1_reg_83 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((arb_1_reg_83 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        fifo_C_drain_out_V_V_write = grp_C_drain_IO_L1_out_in_1_fu_113_fifo_C_drain_out_V_V_write;
    end else begin
        fifo_C_drain_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((arb_1_reg_83 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((arb_1_reg_83 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_C_drain_IO_L1_out_in_1_fu_113_en = inter_trans_en_0_loa_reg_193;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_C_drain_IO_L1_out_in_1_fu_113_en = inter_trans_en_0_loa_2_reg_180;
    end else begin
        grp_C_drain_IO_L1_out_in_1_fu_113_en = 'bx;
    end
end

always @ (*) begin
    if (((arb_1_reg_83 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_q0 = local_C_ping_0_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state5) | ((arb_1_reg_83 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_q0 = local_C_pong_0_V_q0;
    end else begin
        grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if ((arb_1_reg_83 == 1'd1)) begin
            grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_q0 = local_C_pong_0_V_q0;
        end else if ((arb_1_reg_83 == 1'd0)) begin
            grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_q0 = local_C_ping_0_V_q0;
        end else begin
            grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_q0 = 'bx;
        end
    end else begin
        grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if ((arb_1_reg_83 == 1'd1)) begin
            local_C_ping_0_V_address0 = grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_address0;
        end else if ((arb_1_reg_83 == 1'd0)) begin
            local_C_ping_0_V_address0 = grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_address0;
        end else begin
            local_C_ping_0_V_address0 = 'bx;
        end
    end else begin
        local_C_ping_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if ((arb_1_reg_83 == 1'd1)) begin
            local_C_ping_0_V_ce0 = grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_ce0;
        end else if ((arb_1_reg_83 == 1'd0)) begin
            local_C_ping_0_V_ce0 = grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_ce0;
        end else begin
            local_C_ping_0_V_ce0 = 1'b0;
        end
    end else begin
        local_C_ping_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arb_1_reg_83 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        local_C_ping_0_V_ce1 = grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_ce1;
    end else begin
        local_C_ping_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arb_1_reg_83 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        local_C_ping_0_V_we1 = grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_we1;
    end else begin
        local_C_ping_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((arb_1_reg_83 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        local_C_pong_0_V_address0 = grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_address0;
    end else if (((arb_1_reg_83 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        local_C_pong_0_V_address0 = grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_address0;
    end else begin
        local_C_pong_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((arb_1_reg_83 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        local_C_pong_0_V_ce0 = grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_ce0;
    end else if (((arb_1_reg_83 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        local_C_pong_0_V_ce0 = grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_ce0;
    end else begin
        local_C_pong_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arb_1_reg_83 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        local_C_pong_0_V_ce1 = grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_ce1;
    end else begin
        local_C_pong_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arb_1_reg_83 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        local_C_pong_0_V_we1 = grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_we1;
    end else begin
        local_C_pong_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln664_fu_130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln665_fu_142_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_C_drain_IO_L1_out_in_1_fu_113_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = (((arb_1_reg_83 == 1'd1) & (grp_C_drain_IO_L1_out_in_1_fu_113_ap_done == 1'b0)) | ((arb_1_reg_83 == 1'd0) & (grp_C_drain_IO_L1_out_in_1_fu_113_ap_done == 1'b0)) | ((arb_1_reg_83 == 1'd1) & (grp_C_drain_IO_L1_out_in_fu_106_ap_done == 1'b0)) | ((arb_1_reg_83 == 1'd0) & (grp_C_drain_IO_L1_out_in_fu_106_ap_done == 1'b0)));
end

assign ap_phi_mux_arb_1_phi_fu_87_p4 = arb_1_reg_83;

assign c0_fu_136_p2 = (c0_prev_reg_72 + 2'd1);

assign c1_fu_148_p2 = (c1_prev_reg_95 + 2'd1);

assign fifo_C_drain_out_V_V_din = grp_C_drain_IO_L1_out_in_1_fu_113_fifo_C_drain_out_V_V_din;

assign grp_C_drain_IO_L1_out_in_1_fu_113_ap_start = grp_C_drain_IO_L1_out_in_1_fu_113_ap_start_reg;

assign grp_C_drain_IO_L1_out_in_fu_106_ap_start = grp_C_drain_IO_L1_out_in_fu_106_ap_start_reg;

assign icmp_ln664_fu_130_p2 = ((c0_prev_reg_72 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln665_fu_142_p2 = ((c1_prev_reg_95 == 2'd2) ? 1'b1 : 1'b0);

assign xor_ln678_fu_154_p2 = (arb_1_reg_83 ^ 1'd1);

endmodule //C_drain_IO_L1_out_he
