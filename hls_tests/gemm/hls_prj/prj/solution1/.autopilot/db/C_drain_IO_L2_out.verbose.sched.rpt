

================================================================
== Vivado HLS Report for 'C_drain_IO_L2_out'
================================================================
* Date:           Sun Mar 22 14:27:20 2020

* Version:        2019.2 (Build 2698951 on Thu Oct 24 19:15:34 MDT 2019)
* Project:        prj
* Solution:       solution1
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 5.00 ns | 3.519 ns |   0.62 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       34|       34| 0.170 us | 0.170 us |   34|   34|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       32|       32|         2|          1|          1|    32|    yes   |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.60>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %fifo_C_drain_out_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str322, i32 0, i32 0, [1 x i8]* @p_str323, [1 x i8]* @p_str324, [1 x i8]* @p_str325, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str326, [1 x i8]* @p_str327)"   --->   Operation 5 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %fifo_C_drain_in_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str315, i32 0, i32 0, [1 x i8]* @p_str316, [1 x i8]* @p_str317, [1 x i8]* @p_str318, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str319, [1 x i8]* @p_str320)"   --->   Operation 6 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %fifo_C_drain_local_in_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str308, i32 0, i32 0, [1 x i8]* @p_str309, [1 x i8]* @p_str310, [1 x i8]* @p_str311, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str312, [1 x i8]* @p_str313)"   --->   Operation 7 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.60ns)   --->   "br label %.preheader" [src/kernel_xilinx.cpp:738]   --->   Operation 8 'br' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 1.88>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten63 = phi i6 [ 0, %0 ], [ %add_ln738, %hls_label_24_end ]" [src/kernel_xilinx.cpp:738]   --->   Operation 9 'phi' 'indvar_flatten63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten33 = phi i6 [ 0, %0 ], [ %select_ln739, %hls_label_24_end ]" [src/kernel_xilinx.cpp:739]   --->   Operation 10 'phi' 'indvar_flatten33' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%indvar_flatten11 = phi i5 [ 0, %0 ], [ %select_ln742_2, %hls_label_24_end ]" [src/kernel_xilinx.cpp:742]   --->   Operation 11 'phi' 'indvar_flatten11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%c3_0 = phi i2 [ 0, %0 ], [ %select_ln742_1, %hls_label_24_end ]" [src/kernel_xilinx.cpp:742]   --->   Operation 12 'phi' 'c3_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i4 [ 0, %0 ], [ %select_ln744, %hls_label_24_end ]" [src/kernel_xilinx.cpp:744]   --->   Operation 13 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.61ns)   --->   "%icmp_ln738 = icmp eq i6 %indvar_flatten63, -32" [src/kernel_xilinx.cpp:738]   --->   Operation 14 'icmp' 'icmp_ln738' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (0.43ns)   --->   "%add_ln738 = add i6 %indvar_flatten63, 1" [src/kernel_xilinx.cpp:738]   --->   Operation 15 'add' 'add_ln738' <Predicate = true> <Delay = 0.43> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "br i1 %icmp_ln738, label %3, label %hls_label_24_begin" [src/kernel_xilinx.cpp:738]   --->   Operation 16 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.61ns)   --->   "%icmp_ln739 = icmp eq i6 %indvar_flatten33, 16" [src/kernel_xilinx.cpp:739]   --->   Operation 17 'icmp' 'icmp_ln739' <Predicate = (!icmp_ln738)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.12ns)   --->   "%xor_ln739 = xor i1 %icmp_ln739, true" [src/kernel_xilinx.cpp:739]   --->   Operation 18 'xor' 'xor_ln739' <Predicate = (!icmp_ln738)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.34ns)   --->   "%icmp_ln750 = icmp eq i2 %c3_0, 1" [src/kernel_xilinx.cpp:750]   --->   Operation 19 'icmp' 'icmp_ln750' <Predicate = (!icmp_ln738)> <Delay = 0.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node select_ln750)   --->   "%and_ln739 = and i1 %icmp_ln750, %xor_ln739" [src/kernel_xilinx.cpp:739]   --->   Operation 20 'and' 'and_ln739' <Predicate = (!icmp_ln738)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.65ns)   --->   "%icmp_ln744 = icmp eq i4 %indvar_flatten, 4" [src/kernel_xilinx.cpp:744]   --->   Operation 21 'icmp' 'icmp_ln744' <Predicate = (!icmp_ln738)> <Delay = 0.65> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node and_ln742_1)   --->   "%and_ln739_1 = and i1 %icmp_ln744, %xor_ln739" [src/kernel_xilinx.cpp:739]   --->   Operation 22 'and' 'and_ln739_1' <Predicate = (!icmp_ln738)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.63ns)   --->   "%icmp_ln742 = icmp eq i5 %indvar_flatten11, 8" [src/kernel_xilinx.cpp:742]   --->   Operation 23 'icmp' 'icmp_ln742' <Predicate = (!icmp_ln738)> <Delay = 0.63> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.12ns)   --->   "%and_ln739_2 = and i1 %icmp_ln742, %xor_ln739" [src/kernel_xilinx.cpp:739]   --->   Operation 24 'and' 'and_ln739_2' <Predicate = (!icmp_ln738)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.12ns)   --->   "%or_ln742 = or i1 %and_ln739_2, %icmp_ln739" [src/kernel_xilinx.cpp:742]   --->   Operation 25 'or' 'or_ln742' <Predicate = (!icmp_ln738)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.27ns)   --->   "%select_ln742 = select i1 %or_ln742, i2 0, i2 %c3_0" [src/kernel_xilinx.cpp:742]   --->   Operation 26 'select' 'select_ln742' <Predicate = (!icmp_ln738)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node or_ln742_1)   --->   "%xor_ln742 = xor i1 %icmp_ln742, true" [src/kernel_xilinx.cpp:742]   --->   Operation 27 'xor' 'xor_ln742' <Predicate = (!icmp_ln738)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln742_1 = or i1 %icmp_ln739, %xor_ln742" [src/kernel_xilinx.cpp:742]   --->   Operation 28 'or' 'or_ln742_1' <Predicate = (!icmp_ln738)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node select_ln750)   --->   "%and_ln742 = and i1 %and_ln739, %or_ln742_1" [src/kernel_xilinx.cpp:742]   --->   Operation 29 'and' 'and_ln742' <Predicate = (!icmp_ln738)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln742_1 = and i1 %and_ln739_1, %or_ln742_1" [src/kernel_xilinx.cpp:742]   --->   Operation 30 'and' 'and_ln742_1' <Predicate = (!icmp_ln738)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.23ns)   --->   "%c3 = add i2 %select_ln742, 1" [src/kernel_xilinx.cpp:742]   --->   Operation 31 'add' 'c3' <Predicate = (!icmp_ln738)> <Delay = 0.23> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.34ns)   --->   "%icmp_ln750_1 = icmp eq i2 %select_ln742, 0" [src/kernel_xilinx.cpp:750]   --->   Operation 32 'icmp' 'icmp_ln750_1' <Predicate = (!icmp_ln738)> <Delay = 0.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.27ns) (out node of the LUT)   --->   "%select_ln750 = select i1 %and_ln742_1, i1 %icmp_ln750_1, i1 %and_ln742" [src/kernel_xilinx.cpp:750]   --->   Operation 33 'select' 'select_ln750' <Predicate = (!icmp_ln738)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.27ns)   --->   "%select_ln742_1 = select i1 %and_ln742_1, i2 %c3, i2 %select_ln742" [src/kernel_xilinx.cpp:742]   --->   Operation 34 'select' 'select_ln742_1' <Predicate = (!icmp_ln738)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "br i1 %select_ln750, label %1, label %2" [src/kernel_xilinx.cpp:750]   --->   Operation 35 'br' <Predicate = (!icmp_ln738)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.33ns)   --->   "%add_ln744 = add i4 %indvar_flatten, 1" [src/kernel_xilinx.cpp:744]   --->   Operation 36 'add' 'add_ln744' <Predicate = (!icmp_ln738)> <Delay = 0.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node select_ln744)   --->   "%or_ln744 = or i1 %and_ln742_1, %and_ln739_2" [src/kernel_xilinx.cpp:744]   --->   Operation 37 'or' 'or_ln744' <Predicate = (!icmp_ln738)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node select_ln744)   --->   "%or_ln744_1 = or i1 %or_ln744, %icmp_ln739" [src/kernel_xilinx.cpp:744]   --->   Operation 38 'or' 'or_ln744_1' <Predicate = (!icmp_ln738)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.35ns) (out node of the LUT)   --->   "%select_ln744 = select i1 %or_ln744_1, i4 1, i4 %add_ln744" [src/kernel_xilinx.cpp:744]   --->   Operation 39 'select' 'select_ln744' <Predicate = (!icmp_ln738)> <Delay = 0.35> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.34ns)   --->   "%add_ln742_1 = add i5 %indvar_flatten11, 1" [src/kernel_xilinx.cpp:742]   --->   Operation 40 'add' 'add_ln742_1' <Predicate = (!icmp_ln738)> <Delay = 0.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.27ns)   --->   "%select_ln742_2 = select i1 %or_ln742, i5 1, i5 %add_ln742_1" [src/kernel_xilinx.cpp:742]   --->   Operation 41 'select' 'select_ln742_2' <Predicate = (!icmp_ln738)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.43ns)   --->   "%add_ln739 = add i6 %indvar_flatten33, 1" [src/kernel_xilinx.cpp:739]   --->   Operation 42 'add' 'add_ln739' <Predicate = (!icmp_ln738)> <Delay = 0.43> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.29ns)   --->   "%select_ln739 = select i1 %icmp_ln739, i6 1, i6 %add_ln739" [src/kernel_xilinx.cpp:739]   --->   Operation 43 'select' 'select_ln739' <Predicate = (!icmp_ln738)> <Delay = 0.29> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.51>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%empty_92 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)"   --->   Operation 44 'speclooptripcount' 'empty_92' <Predicate = (!icmp_ln738)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str27)" [src/kernel_xilinx.cpp:746]   --->   Operation 45 'specregionbegin' 'tmp' <Predicate = (!icmp_ln738)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [src/kernel_xilinx.cpp:747]   --->   Operation 46 'specpipeline' <Predicate = (!icmp_ln738)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (1.45ns)   --->   "%tmp_V_6 = call i64 @_ssdm_op_Read.ap_fifo.volatile.i64P(i64* %fifo_C_drain_in_V_V)" [src/kernel_xilinx.cpp:753]   --->   Operation 47 'read' 'tmp_V_6' <Predicate = (!icmp_ln738 & !select_ln750)> <Delay = 1.45> <Core = "FIFO_SRL">   --->   Core 36 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 1.45> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 0> <FIFO>
ST_3 : Operation 48 [1/1] (0.60ns)   --->   "br label %hls_label_24_end"   --->   Operation 48 'br' <Predicate = (!icmp_ln738 & !select_ln750)> <Delay = 0.60>
ST_3 : Operation 49 [1/1] (1.45ns)   --->   "%tmp_V_5 = call i64 @_ssdm_op_Read.ap_fifo.volatile.i64P(i64* %fifo_C_drain_local_in_V_V)" [src/kernel_xilinx.cpp:751]   --->   Operation 49 'read' 'tmp_V_5' <Predicate = (!icmp_ln738 & select_ln750)> <Delay = 1.45> <Core = "FIFO_SRL">   --->   Core 36 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 1.45> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 0> <FIFO>
ST_3 : Operation 50 [1/1] (0.60ns)   --->   "br label %hls_label_24_end" [src/kernel_xilinx.cpp:752]   --->   Operation 50 'br' <Predicate = (!icmp_ln738 & select_ln750)> <Delay = 0.60>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_V = phi i64 [ %tmp_V_5, %1 ], [ %tmp_V_6, %2 ]"   --->   Operation 51 'phi' 'tmp_V' <Predicate = (!icmp_ln738)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (1.45ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i64P(i64* %fifo_C_drain_out_V_V, i64 %tmp_V)" [src/kernel_xilinx.cpp:755]   --->   Operation 52 'write' <Predicate = (!icmp_ln738)> <Delay = 1.45> <Core = "FIFO_SRL">   --->   Core 36 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 1.45> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 0> <FIFO>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str27, i32 %tmp)" [src/kernel_xilinx.cpp:757]   --->   Operation 53 'specregionend' 'empty' <Predicate = (!icmp_ln738)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "br label %.preheader" [src/kernel_xilinx.cpp:746]   --->   Operation 54 'br' <Predicate = (!icmp_ln738)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "ret void" [src/kernel_xilinx.cpp:761]   --->   Operation 55 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten63', src/kernel_xilinx.cpp:738) with incoming values : ('add_ln738', src/kernel_xilinx.cpp:738) [9]  (0.603 ns)

 <State 2>: 1.88ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten33', src/kernel_xilinx.cpp:739) with incoming values : ('select_ln739', src/kernel_xilinx.cpp:739) [10]  (0 ns)
	'icmp' operation ('icmp_ln739', src/kernel_xilinx.cpp:739) [19]  (0.619 ns)
	'xor' operation ('xor_ln739', src/kernel_xilinx.cpp:739) [20]  (0.122 ns)
	'and' operation ('and_ln739_2', src/kernel_xilinx.cpp:739) [26]  (0.122 ns)
	'or' operation ('or_ln742', src/kernel_xilinx.cpp:742) [27]  (0.122 ns)
	'select' operation ('select_ln742', src/kernel_xilinx.cpp:742) [28]  (0.278 ns)
	'icmp' operation ('icmp_ln750_1', src/kernel_xilinx.cpp:750) [34]  (0.343 ns)
	'select' operation ('select_ln750', src/kernel_xilinx.cpp:750) [35]  (0.278 ns)

 <State 3>: 3.52ns
The critical path consists of the following:
	fifo read on port 'fifo_C_drain_in_V_V' (src/kernel_xilinx.cpp:753) [41]  (1.46 ns)
	multiplexor before 'phi' operation ('fifo_data.V') with incoming values : ('tmp.V', src/kernel_xilinx.cpp:753) ('tmp.V', src/kernel_xilinx.cpp:751) [47]  (0.603 ns)
	'phi' operation ('fifo_data.V') with incoming values : ('tmp.V', src/kernel_xilinx.cpp:753) ('tmp.V', src/kernel_xilinx.cpp:751) [47]  (0 ns)
	fifo write on port 'fifo_C_drain_out_V_V' (src/kernel_xilinx.cpp:755) [48]  (1.46 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
