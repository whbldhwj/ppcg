

================================================================
== Vivado HLS Report for 'C_drain_IO_L3_out'
================================================================
* Date:           Sun Mar 22 14:27:21 2020

* Version:        2019.2 (Build 2698951 on Thu Oct 24 19:15:34 MDT 2019)
* Project:        prj
* Solution:       solution1
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 5.00 ns | 4.375 ns |   0.62 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       40|       40| 0.200 us | 0.200 us |   40|   40|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       38|       38|         8|          1|          1|    32|    yes   |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 8, States = { 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 10 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 2 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.45>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %C_V, [6 x i8]* @p_str30, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 32, [7 x i8]* @p_str34, [6 x i8]* @p_str32, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 11 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %fifo_C_drain_local_in_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str322, i32 0, i32 0, [1 x i8]* @p_str323, [1 x i8]* @p_str324, [1 x i8]* @p_str325, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str326, [1 x i8]* @p_str327)"   --->   Operation 12 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %C_V_offset, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str78, i32 0, i32 0, [1 x i8]* @p_str79, [1 x i8]* @p_str80, [1 x i8]* @p_str81, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str82, [11 x i8]* @ScalarProp_str)"   --->   Operation 13 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.45ns)   --->   "%C_V_offset_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %C_V_offset)" [src/kernel_xilinx.cpp:792]   --->   Operation 14 'read' 'C_V_offset_read' <Predicate = true> <Delay = 1.45> <Core = "FIFO_SRL">   --->   Core 36 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 1.45> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 0> <FIFO>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %fifo_C_drain_local_in_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str322, i32 0, i32 0, [1 x i8]* @p_str323, [1 x i8]* @p_str324, [1 x i8]* @p_str325, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str326, [1 x i8]* @p_str327)"   --->   Operation 15 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %C_V, [6 x i8]* @p_str30, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 32, [7 x i8]* @p_str34, [6 x i8]* @p_str32, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 16 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %C_V_offset_read, i32 3, i32 31)" [src/kernel_xilinx.cpp:795->src/kernel_xilinx.cpp:818]   --->   Operation 17 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln795 = zext i29 %tmp to i30" [src/kernel_xilinx.cpp:795->src/kernel_xilinx.cpp:818]   --->   Operation 18 'zext' 'zext_ln795' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.60ns)   --->   "br label %.preheader.i" [src/kernel_xilinx.cpp:795->src/kernel_xilinx.cpp:818]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 2.71>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%indvar_flatten85_i = phi i6 [ 0, %entry ], [ %add_ln795, %hls_label_26 ]" [src/kernel_xilinx.cpp:795->src/kernel_xilinx.cpp:818]   --->   Operation 20 'phi' 'indvar_flatten85_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%c0_0_i = phi i2 [ 0, %entry ], [ %select_ln795, %hls_label_26 ]" [src/kernel_xilinx.cpp:795->src/kernel_xilinx.cpp:818]   --->   Operation 21 'phi' 'c0_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%indvar_flatten47_i = phi i6 [ 0, %entry ], [ %select_ln796_3, %hls_label_26 ]" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 22 'phi' 'indvar_flatten47_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%c1_0_i = phi i2 [ 0, %entry ], [ %select_ln796_2, %hls_label_26 ]" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 23 'phi' 'c1_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%indvar_flatten17_i = phi i5 [ 0, %entry ], [ %select_ln799_4, %hls_label_26 ]" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 24 'phi' 'indvar_flatten17_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%c3_0_i = phi i2 [ 0, %entry ], [ %select_ln799_3, %hls_label_26 ]" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 25 'phi' 'c3_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%indvar_flatten_i = phi i4 [ 0, %entry ], [ %select_ln801_1, %hls_label_26 ]" [src/kernel_xilinx.cpp:801->src/kernel_xilinx.cpp:818]   --->   Operation 26 'phi' 'indvar_flatten_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%c4_0_i = phi i2 [ 0, %entry ], [ %select_ln801, %hls_label_26 ]" [src/kernel_xilinx.cpp:801->src/kernel_xilinx.cpp:818]   --->   Operation 27 'phi' 'c4_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%c5_0_i = phi i2 [ 0, %entry ], [ %c5, %hls_label_26 ]"   --->   Operation 28 'phi' 'c5_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%trunc_ln808 = trunc i2 %c4_0_i to i1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 29 'trunc' 'trunc_ln808' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln808_1 = trunc i2 %c0_0_i to i1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 30 'trunc' 'trunc_ln808_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%or_ln808_1_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %trunc_ln808_1, i1 %trunc_ln808, i1 false)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 31 'bitconcatenate' 'or_ln808_1_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.61ns)   --->   "%icmp_ln795 = icmp eq i6 %indvar_flatten85_i, -32" [src/kernel_xilinx.cpp:795->src/kernel_xilinx.cpp:818]   --->   Operation 32 'icmp' 'icmp_ln795' <Predicate = true> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.43ns)   --->   "%add_ln795 = add i6 1, %indvar_flatten85_i" [src/kernel_xilinx.cpp:795->src/kernel_xilinx.cpp:818]   --->   Operation 33 'add' 'add_ln795' <Predicate = true> <Delay = 0.43> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %icmp_ln795, label %.exit, label %hls_label_26" [src/kernel_xilinx.cpp:795->src/kernel_xilinx.cpp:818]   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.23ns)   --->   "%add_ln795_1 = add i2 1, %c0_0_i" [src/kernel_xilinx.cpp:795->src/kernel_xilinx.cpp:818]   --->   Operation 35 'add' 'add_ln795_1' <Predicate = (!icmp_ln795)> <Delay = 0.23> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.61ns)   --->   "%icmp_ln796 = icmp eq i6 %indvar_flatten47_i, 16" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 36 'icmp' 'icmp_ln796' <Predicate = (!icmp_ln795)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.27ns)   --->   "%select_ln796 = select i1 %icmp_ln796, i2 0, i2 %c1_0_i" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 37 'select' 'select_ln796' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.12ns)   --->   "%xor_ln796 = xor i1 %icmp_ln796, true" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 38 'xor' 'xor_ln796' <Predicate = (!icmp_ln795)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%trunc_ln808_2 = trunc i2 %c1_0_i to i1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 39 'trunc' 'trunc_ln808_2' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%and_ln796 = and i1 %trunc_ln808_2, %xor_ln796" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 40 'and' 'and_ln796' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node select_ln799_2)   --->   "%trunc_ln808_3 = trunc i2 %add_ln795_1 to i1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 41 'trunc' 'trunc_ln808_3' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node select_ln799_2)   --->   "%or_ln808_1_mid_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1 %trunc_ln808_3, i2 0)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 42 'bitconcatenate' 'or_ln808_1_mid_i' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node select_ln799_2)   --->   "%select_ln796_1 = select i1 %icmp_ln796, i3 %or_ln808_1_mid_i, i3 %or_ln808_1_i" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 43 'select' 'select_ln796_1' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.34ns)   --->   "%icmp_ln803 = icmp eq i2 %c5_0_i, -2" [src/kernel_xilinx.cpp:803->src/kernel_xilinx.cpp:818]   --->   Operation 44 'icmp' 'icmp_ln803' <Predicate = (!icmp_ln795)> <Delay = 0.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node and_ln808)   --->   "%and_ln796_1 = and i1 %icmp_ln803, %xor_ln796" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 45 'and' 'and_ln796_1' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.65ns)   --->   "%icmp_ln801 = icmp eq i4 %indvar_flatten_i, 4" [src/kernel_xilinx.cpp:801->src/kernel_xilinx.cpp:818]   --->   Operation 46 'icmp' 'icmp_ln801' <Predicate = (!icmp_ln795)> <Delay = 0.65> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node and_ln799_1)   --->   "%and_ln796_2 = and i1 %icmp_ln801, %xor_ln796" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 47 'and' 'and_ln796_2' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.63ns)   --->   "%icmp_ln799 = icmp eq i5 %indvar_flatten17_i, 8" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 48 'icmp' 'icmp_ln799' <Predicate = (!icmp_ln795)> <Delay = 0.63> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.12ns)   --->   "%and_ln796_3 = and i1 %icmp_ln799, %xor_ln796" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 49 'and' 'and_ln796_3' <Predicate = (!icmp_ln795)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.27ns)   --->   "%select_ln795 = select i1 %icmp_ln796, i2 %add_ln795_1, i2 %c0_0_i" [src/kernel_xilinx.cpp:795->src/kernel_xilinx.cpp:818]   --->   Operation 50 'select' 'select_ln795' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.23ns)   --->   "%add_ln796 = add i2 1, %select_ln796" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 51 'add' 'add_ln796' <Predicate = (!icmp_ln795)> <Delay = 0.23> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.12ns)   --->   "%or_ln799 = or i1 %and_ln796_3, %icmp_ln796" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 52 'or' 'or_ln799' <Predicate = (!icmp_ln795)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.27ns)   --->   "%select_ln799 = select i1 %or_ln799, i2 0, i2 %c3_0_i" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 53 'select' 'select_ln799' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%trunc_ln808_4 = trunc i2 %add_ln796 to i1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 54 'trunc' 'trunc_ln808_4' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%select_ln799_1 = select i1 %and_ln796_3, i1 %trunc_ln808_4, i1 %and_ln796" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 55 'select' 'select_ln799_1' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln808_5 = trunc i2 %select_ln795 to i1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 56 'trunc' 'trunc_ln808_5' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%or_ln808_1_mid3_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1 %trunc_ln808_5, i2 0)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 57 'bitconcatenate' 'or_ln808_1_mid3_i' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.27ns) (out node of the LUT)   --->   "%select_ln799_2 = select i1 %and_ln796_3, i3 %or_ln808_1_mid3_i, i3 %select_ln796_1" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 58 'select' 'select_ln799_2' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node or_ln799_1)   --->   "%xor_ln799 = xor i1 %icmp_ln799, true" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 59 'xor' 'xor_ln799' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln799_1 = or i1 %icmp_ln796, %xor_ln799" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 60 'or' 'or_ln799_1' <Predicate = (!icmp_ln795)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node and_ln808)   --->   "%and_ln799 = and i1 %and_ln796_1, %or_ln799_1" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 61 'and' 'and_ln799' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln799_1 = and i1 %and_ln796_2, %or_ln799_1" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 62 'and' 'and_ln799_1' <Predicate = (!icmp_ln795)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.27ns)   --->   "%select_ln796_2 = select i1 %and_ln796_3, i2 %add_ln796, i2 %select_ln796" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 63 'select' 'select_ln796_2' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.23ns)   --->   "%add_ln799 = add i2 1, %select_ln799" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 64 'add' 'add_ln799' <Predicate = (!icmp_ln795)> <Delay = 0.23> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node or_ln808_1)   --->   "%or_ln808 = or i1 %and_ln799_1, %and_ln796_3" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 65 'or' 'or_ln808' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln808_1 = or i1 %or_ln808, %icmp_ln796" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 66 'or' 'or_ln808_1' <Predicate = (!icmp_ln795)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.27ns)   --->   "%select_ln808 = select i1 %or_ln808_1, i2 0, i2 %c4_0_i" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 67 'select' 'select_ln808' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%trunc_ln808_6 = trunc i2 %add_ln799 to i1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 68 'trunc' 'trunc_ln808_6' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%trunc_ln808_7 = trunc i2 %select_ln796_2 to i1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 69 'trunc' 'trunc_ln808_7' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%select_ln808_1 = select i1 %and_ln799_1, i1 %trunc_ln808_7, i1 %select_ln799_1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 70 'select' 'select_ln808_1' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node add_ln808)   --->   "%select_ln808_2 = select i1 %and_ln799_1, i3 %or_ln808_1_mid3_i, i3 %select_ln799_2" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 71 'select' 'select_ln808_2' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node and_ln808)   --->   "%xor_ln808 = xor i1 %and_ln799_1, true" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 72 'xor' 'xor_ln808' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln808 = and i1 %and_ln799, %xor_ln808" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 73 'and' 'and_ln808' <Predicate = (!icmp_ln795)> <Delay = 0.12> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.27ns)   --->   "%select_ln799_3 = select i1 %and_ln799_1, i2 %add_ln799, i2 %select_ln799" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 74 'select' 'select_ln799_3' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.23ns)   --->   "%add_ln801 = add i2 1, %select_ln808" [src/kernel_xilinx.cpp:801->src/kernel_xilinx.cpp:818]   --->   Operation 75 'add' 'add_ln801' <Predicate = (!icmp_ln795)> <Delay = 0.23> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node select_ln808_3)   --->   "%or_ln808_2 = or i1 %and_ln808, %and_ln799_1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 76 'or' 'or_ln808_2' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node select_ln808_3)   --->   "%or_ln808_3 = or i1 %or_ln808_2, %or_ln799" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 77 'or' 'or_ln808_3' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.27ns) (out node of the LUT)   --->   "%select_ln808_3 = select i1 %or_ln808_3, i2 0, i2 %c5_0_i" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 78 'select' 'select_ln808_3' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node add_ln808)   --->   "%trunc_ln808_8 = trunc i2 %add_ln801 to i1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 79 'trunc' 'trunc_ln808_8' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node add_ln808)   --->   "%or_ln808_1_mid1_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %trunc_ln808_5, i1 %trunc_ln808_8, i1 false)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 80 'bitconcatenate' 'or_ln808_1_mid1_i' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node add_ln808)   --->   "%select_ln808_4 = select i1 %and_ln808, i3 %or_ln808_1_mid1_i, i3 %select_ln808_2" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 81 'select' 'select_ln808_4' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.27ns)   --->   "%select_ln801 = select i1 %and_ln808, i2 %add_ln801, i2 %select_ln808" [src/kernel_xilinx.cpp:801->src/kernel_xilinx.cpp:818]   --->   Operation 82 'select' 'select_ln801' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node add_ln808)   --->   "%zext_ln808 = zext i2 %select_ln808_3 to i3" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 83 'zext' 'zext_ln808' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.27ns) (out node of the LUT)   --->   "%add_ln808 = add i3 %zext_ln808, %select_ln808_4" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 84 'add' 'add_ln808' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%xor_ln799_1 = xor i1 %or_ln799, true" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 85 'xor' 'xor_ln799_1' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%trunc_ln808_9 = trunc i2 %c3_0_i to i1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 86 'trunc' 'trunc_ln808_9' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%and_ln799_2 = and i1 %trunc_ln808_9, %xor_ln799_1" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 87 'and' 'and_ln799_2' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node trunc_ln_i)   --->   "%select_ln808_5 = select i1 %and_ln799_1, i1 %trunc_ln808_6, i1 %and_ln799_2" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 88 'select' 'select_ln808_5' <Predicate = (!icmp_ln795)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (0.27ns) (out node of the LUT)   --->   "%trunc_ln_i = call i5 @_ssdm_op_BitConcatenate.i5.i3.i1.i1(i3 %add_ln808, i1 %select_ln808_1, i1 %select_ln808_5)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 89 'bitconcatenate' 'trunc_ln_i' <Predicate = (!icmp_ln795)> <Delay = 0.27>
ST_2 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node add_ln321)   --->   "%zext_ln321 = zext i5 %trunc_ln_i to i30" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 90 'zext' 'zext_ln321' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.64ns) (out node of the LUT)   --->   "%add_ln321 = add i30 %zext_ln321, %zext_ln795" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 91 'add' 'add_ln321' <Predicate = (!icmp_ln795)> <Delay = 0.64> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.23ns)   --->   "%c5 = add i2 1, %select_ln808_3" [src/kernel_xilinx.cpp:803->src/kernel_xilinx.cpp:818]   --->   Operation 92 'add' 'c5' <Predicate = (!icmp_ln795)> <Delay = 0.23> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.33ns)   --->   "%add_ln801_1 = add i4 1, %indvar_flatten_i" [src/kernel_xilinx.cpp:801->src/kernel_xilinx.cpp:818]   --->   Operation 93 'add' 'add_ln801_1' <Predicate = (!icmp_ln795)> <Delay = 0.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.35ns)   --->   "%select_ln801_1 = select i1 %or_ln808_1, i4 1, i4 %add_ln801_1" [src/kernel_xilinx.cpp:801->src/kernel_xilinx.cpp:818]   --->   Operation 94 'select' 'select_ln801_1' <Predicate = (!icmp_ln795)> <Delay = 0.35> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (0.34ns)   --->   "%add_ln799_1 = add i5 1, %indvar_flatten17_i" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 95 'add' 'add_ln799_1' <Predicate = (!icmp_ln795)> <Delay = 0.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 96 [1/1] (0.27ns)   --->   "%select_ln799_4 = select i1 %or_ln799, i5 1, i5 %add_ln799_1" [src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818]   --->   Operation 96 'select' 'select_ln799_4' <Predicate = (!icmp_ln795)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 97 [1/1] (0.43ns)   --->   "%add_ln796_1 = add i6 1, %indvar_flatten47_i" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 97 'add' 'add_ln796_1' <Predicate = (!icmp_ln795)> <Delay = 0.43> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 98 [1/1] (0.29ns)   --->   "%select_ln796_3 = select i1 %icmp_ln796, i6 1, i6 %add_ln796_1" [src/kernel_xilinx.cpp:796->src/kernel_xilinx.cpp:818]   --->   Operation 98 'select' 'select_ln796_3' <Predicate = (!icmp_ln795)> <Delay = 0.29> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 4.37>
ST_3 : Operation 99 [1/1] (1.45ns)   --->   "%tmp_V = call i64 @_ssdm_op_Read.ap_fifo.volatile.i64P(i64* %fifo_C_drain_local_in_V_V)" [src/kernel_xilinx.cpp:807->src/kernel_xilinx.cpp:818]   --->   Operation 99 'read' 'tmp_V' <Predicate = (!icmp_ln795)> <Delay = 1.45> <Core = "FIFO_SRL">   --->   Core 36 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 1.45> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 0> <FIFO>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln321_1 = zext i30 %add_ln321 to i64" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 100 'zext' 'zext_ln321_1' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%C_V_addr = getelementptr i64* %C_V, i64 %zext_ln321_1" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 101 'getelementptr' 'C_V_addr' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (4.37ns)   --->   "%C_V_addr_i_req = call i1 @_ssdm_op_WriteReq.m_axi.i64P(i64* %C_V_addr, i32 1)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 102 'writereq' 'C_V_addr_i_req' <Predicate = (!icmp_ln795)> <Delay = 4.37> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 4.37>
ST_4 : Operation 103 [1/1] (4.37ns)   --->   "call void @_ssdm_op_Write.m_axi.i64P(i64* %C_V_addr, i64 %tmp_V, i8 -1)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 103 'write' <Predicate = (!icmp_ln795)> <Delay = 4.37> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 4.37>
ST_5 : Operation 104 [5/5] (4.37ns)   --->   "%C_V_addr_i_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %C_V_addr)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 104 'writeresp' 'C_V_addr_i_resp' <Predicate = (!icmp_ln795)> <Delay = 4.37> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 4.37>
ST_6 : Operation 105 [4/5] (4.37ns)   --->   "%C_V_addr_i_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %C_V_addr)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 105 'writeresp' 'C_V_addr_i_resp' <Predicate = (!icmp_ln795)> <Delay = 4.37> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 4.37>
ST_7 : Operation 106 [3/5] (4.37ns)   --->   "%C_V_addr_i_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %C_V_addr)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 106 'writeresp' 'C_V_addr_i_resp' <Predicate = (!icmp_ln795)> <Delay = 4.37> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 4.37>
ST_8 : Operation 107 [2/5] (4.37ns)   --->   "%C_V_addr_i_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %C_V_addr)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 107 'writeresp' 'C_V_addr_i_resp' <Predicate = (!icmp_ln795)> <Delay = 4.37> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 4.37>
ST_9 : Operation 108 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)"   --->   Operation 108 'speclooptripcount' 'empty' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_9 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str29)" [src/kernel_xilinx.cpp:803->src/kernel_xilinx.cpp:818]   --->   Operation 109 'specregionbegin' 'tmp_i' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_9 : Operation 110 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [src/kernel_xilinx.cpp:804->src/kernel_xilinx.cpp:818]   --->   Operation 110 'specpipeline' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_9 : Operation 111 [1/5] (4.37ns)   --->   "%C_V_addr_i_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %C_V_addr)" [src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818]   --->   Operation 111 'writeresp' 'C_V_addr_i_resp' <Predicate = (!icmp_ln795)> <Delay = 4.37> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 112 [1/1] (0.00ns)   --->   "%empty_90 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str29, i32 %tmp_i)" [src/kernel_xilinx.cpp:810->src/kernel_xilinx.cpp:818]   --->   Operation 112 'specregionend' 'empty_90' <Predicate = (!icmp_ln795)> <Delay = 0.00>
ST_9 : Operation 113 [1/1] (0.00ns)   --->   "br label %.preheader.i" [src/kernel_xilinx.cpp:803->src/kernel_xilinx.cpp:818]   --->   Operation 113 'br' <Predicate = (!icmp_ln795)> <Delay = 0.00>

State 10 <SV = 2> <Delay = 0.00>
ST_10 : Operation 114 [1/1] (0.00ns)   --->   "ret void" [src/kernel_xilinx.cpp:818]   --->   Operation 114 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1.46ns
The critical path consists of the following:
	fifo read on port 'C_V_offset' (src/kernel_xilinx.cpp:792) [7]  (1.46 ns)

 <State 2>: 2.72ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten17_i', src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818) with incoming values : ('select_ln799_4', src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818) [18]  (0 ns)
	'icmp' operation ('icmp_ln799', src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818) [44]  (0.637 ns)
	'xor' operation ('xor_ln799', src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818) [55]  (0 ns)
	'or' operation ('or_ln799_1', src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818) [56]  (0.122 ns)
	'and' operation ('and_ln799_1', src/kernel_xilinx.cpp:799->src/kernel_xilinx.cpp:818) [58]  (0.122 ns)
	'or' operation ('or_ln808', src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [61]  (0 ns)
	'or' operation ('or_ln808_1', src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [62]  (0.122 ns)
	'select' operation ('select_ln808', src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [63]  (0.278 ns)
	'add' operation ('add_ln801', src/kernel_xilinx.cpp:801->src/kernel_xilinx.cpp:818) [71]  (0.234 ns)
	'select' operation ('select_ln808_4', src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [77]  (0 ns)
	'add' operation ('add_ln808', src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [83]  (0.278 ns)
	'add' operation ('add_ln321', src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [90]  (0.648 ns)
	blocking operation 0.278 ns on control path)

 <State 3>: 4.38ns
The critical path consists of the following:
	'getelementptr' operation ('C_V_addr', src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [92]  (0 ns)
	bus request on port 'C_V' (src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [93]  (4.38 ns)

 <State 4>: 4.38ns
The critical path consists of the following:
	bus write on port 'C_V' (src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [94]  (4.38 ns)

 <State 5>: 4.38ns
The critical path consists of the following:
	bus access on port 'C_V' (src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [95]  (4.38 ns)

 <State 6>: 4.38ns
The critical path consists of the following:
	bus access on port 'C_V' (src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [95]  (4.38 ns)

 <State 7>: 4.38ns
The critical path consists of the following:
	bus access on port 'C_V' (src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [95]  (4.38 ns)

 <State 8>: 4.38ns
The critical path consists of the following:
	bus access on port 'C_V' (src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [95]  (4.38 ns)

 <State 9>: 4.38ns
The critical path consists of the following:
	bus access on port 'C_V' (src/kernel_xilinx.cpp:808->src/kernel_xilinx.cpp:818) [95]  (4.38 ns)

 <State 10>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
