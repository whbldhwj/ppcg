// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _PE142_HH_
#define _PE142_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "PE139_local_C.h"

namespace ap_rtl {

struct PE142 : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<64> > fifo_A_in_V_V_dout;
    sc_in< sc_logic > fifo_A_in_V_V_empty_n;
    sc_out< sc_logic > fifo_A_in_V_V_read;
    sc_out< sc_lv<64> > fifo_A_out_V_V_din;
    sc_in< sc_logic > fifo_A_out_V_V_full_n;
    sc_out< sc_logic > fifo_A_out_V_V_write;
    sc_in< sc_lv<64> > fifo_B_in_V_V_dout;
    sc_in< sc_logic > fifo_B_in_V_V_empty_n;
    sc_out< sc_logic > fifo_B_in_V_V_read;
    sc_out< sc_lv<64> > fifo_B_out_V_V_din;
    sc_in< sc_logic > fifo_B_out_V_V_full_n;
    sc_out< sc_logic > fifo_B_out_V_V_write;
    sc_out< sc_lv<32> > fifo_C_drain_out_V_din;
    sc_in< sc_logic > fifo_C_drain_out_V_full_n;
    sc_out< sc_logic > fifo_C_drain_out_V_write;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    PE142(sc_module_name name);
    SC_HAS_PROCESS(PE142);

    ~PE142();

    sc_trace_file* mVcdFile;

    PE139_local_C* local_C_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > fifo_A_in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > icmp_ln449_reg_758;
    sc_signal< sc_logic > fifo_A_out_V_V_blk_n;
    sc_signal< sc_logic > fifo_B_in_V_V_blk_n;
    sc_signal< sc_logic > fifo_B_out_V_V_blk_n;
    sc_signal< sc_logic > fifo_C_drain_out_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_lv<1> > select_ln480_3_reg_772;
    sc_signal< sc_lv<1> > select_ln480_3_reg_772_pp1_iter2_reg;
    sc_signal< sc_lv<5> > indvar_flatten46_reg_254;
    sc_signal< sc_lv<2> > c2_0_reg_265;
    sc_signal< sc_lv<5> > indvar_flatten20_reg_276;
    sc_signal< sc_lv<2> > c5_0_reg_287;
    sc_signal< sc_lv<4> > indvar_flatten6_reg_298;
    sc_signal< sc_lv<2> > c61_0_reg_309;
    sc_signal< sc_lv<2> > c72_0_reg_320;
    sc_signal< sc_lv<1> > icmp_ln435_fu_331_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<3> > add_ln435_fu_337_p2;
    sc_signal< sc_lv<3> > add_ln435_reg_735;
    sc_signal< sc_lv<3> > add_ln440_fu_349_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > select_ln446_1_fu_375_p3;
    sc_signal< sc_lv<1> > icmp_ln440_fu_343_p2;
    sc_signal< sc_lv<2> > c7_fu_410_p2;
    sc_signal< sc_lv<1> > icmp_ln449_fu_434_p2;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter3;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln449_reg_758_pp1_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln449_reg_758_pp1_iter2_reg;
    sc_signal< sc_lv<5> > add_ln449_fu_440_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<2> > select_ln449_fu_516_p3;
    sc_signal< sc_lv<1> > select_ln480_3_fu_556_p3;
    sc_signal< sc_lv<1> > select_ln480_3_reg_772_pp1_iter1_reg;
    sc_signal< sc_lv<2> > select_ln452_fu_582_p3;
    sc_signal< sc_lv<2> > select_ln479_fu_608_p3;
    sc_signal< sc_lv<2> > select_ln479_reg_781;
    sc_signal< sc_lv<2> > select_ln479_1_fu_616_p3;
    sc_signal< sc_lv<2> > select_ln479_1_reg_786;
    sc_signal< sc_lv<2> > c7_1_fu_624_p2;
    sc_signal< sc_lv<4> > select_ln454_fu_636_p3;
    sc_signal< sc_lv<5> > select_ln452_1_fu_650_p3;
    sc_signal< sc_lv<32> > p_Repl2_2_fu_661_p1;
    sc_signal< sc_lv<32> > p_Repl2_2_reg_807;
    sc_signal< sc_lv<32> > p_Repl2_3_reg_812;
    sc_signal< sc_lv<32> > p_Repl2_s_fu_675_p1;
    sc_signal< sc_lv<32> > p_Repl2_s_reg_817;
    sc_signal< sc_lv<32> > p_Repl2_1_reg_822;
    sc_signal< sc_lv<2> > local_C_addr_1_reg_827;
    sc_signal< sc_lv<2> > local_C_addr_1_reg_827_pp1_iter2_reg;
    sc_signal< sc_lv<32> > mul_ln479_fu_711_p2;
    sc_signal< sc_lv<32> > mul_ln479_reg_833;
    sc_signal< sc_lv<32> > mul_ln479_1_fu_715_p2;
    sc_signal< sc_lv<32> > mul_ln479_1_reg_838;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state5;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<2> > local_C_address0;
    sc_signal< sc_logic > local_C_ce0;
    sc_signal< sc_logic > local_C_we0;
    sc_signal< sc_lv<32> > local_C_q0;
    sc_signal< sc_logic > local_C_ce1;
    sc_signal< sc_logic > local_C_we1;
    sc_signal< sc_lv<3> > indvar_flatten53_reg_210;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > indvar_flatten_reg_221;
    sc_signal< sc_lv<2> > c6_0_reg_232;
    sc_signal< sc_lv<2> > c7_0_reg_243;
    sc_signal< sc_lv<2> > ap_phi_mux_c61_0_phi_fu_313_p4;
    sc_signal< sc_lv<64> > zext_ln446_1_fu_405_p1;
    sc_signal< sc_lv<64> > zext_ln479_2_fu_706_p1;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<32> > tmp_2_fu_723_p2;
    sc_signal< sc_lv<1> > icmp_ln442_fu_361_p2;
    sc_signal< sc_lv<2> > c6_fu_355_p2;
    sc_signal< sc_lv<2> > select_ln446_fu_367_p3;
    sc_signal< sc_lv<3> > tmp_4_fu_387_p3;
    sc_signal< sc_lv<4> > zext_ln442_fu_383_p1;
    sc_signal< sc_lv<4> > zext_ln446_fu_395_p1;
    sc_signal< sc_lv<4> > add_ln446_fu_399_p2;
    sc_signal< sc_lv<1> > icmp_ln480_fu_416_p2;
    sc_signal< sc_lv<1> > icmp_ln480_1_fu_422_p2;
    sc_signal< sc_lv<1> > icmp_ln452_fu_452_p2;
    sc_signal< sc_lv<1> > icmp_ln480_2_fu_466_p2;
    sc_signal< sc_lv<1> > and_ln480_fu_428_p2;
    sc_signal< sc_lv<1> > xor_ln480_fu_480_p2;
    sc_signal< sc_lv<1> > icmp_ln456_fu_492_p2;
    sc_signal< sc_lv<1> > icmp_ln454_fu_504_p2;
    sc_signal< sc_lv<2> > c2_fu_446_p2;
    sc_signal< sc_lv<2> > select_ln480_fu_458_p3;
    sc_signal< sc_lv<1> > and_ln480_3_fu_510_p2;
    sc_signal< sc_lv<1> > or_ln480_fu_530_p2;
    sc_signal< sc_lv<1> > select_ln480_1_fu_472_p3;
    sc_signal< sc_lv<1> > icmp_ln480_3_fu_544_p2;
    sc_signal< sc_lv<1> > and_ln480_4_fu_550_p2;
    sc_signal< sc_lv<1> > and_ln480_1_fu_486_p2;
    sc_signal< sc_lv<1> > xor_ln480_1_fu_564_p2;
    sc_signal< sc_lv<1> > and_ln480_2_fu_498_p2;
    sc_signal< sc_lv<1> > or_ln480_1_fu_570_p2;
    sc_signal< sc_lv<2> > c5_fu_524_p2;
    sc_signal< sc_lv<2> > select_ln480_2_fu_536_p3;
    sc_signal< sc_lv<1> > and_ln480_5_fu_576_p2;
    sc_signal< sc_lv<1> > or_ln479_fu_596_p2;
    sc_signal< sc_lv<1> > or_ln479_1_fu_602_p2;
    sc_signal< sc_lv<2> > c6_2_fu_590_p2;
    sc_signal< sc_lv<4> > add_ln454_1_fu_630_p2;
    sc_signal< sc_lv<5> > add_ln452_1_fu_644_p2;
    sc_signal< sc_lv<3> > tmp_5_fu_689_p3;
    sc_signal< sc_lv<4> > zext_ln479_1_fu_696_p1;
    sc_signal< sc_lv<4> > zext_ln479_fu_658_p1;
    sc_signal< sc_lv<4> > add_ln479_1_fu_700_p2;
    sc_signal< sc_lv<32> > add_ln479_fu_719_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_pp1_stage0;
    static const sc_lv<6> ap_ST_fsm_state9;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln435_fu_337_p2();
    void thread_add_ln440_fu_349_p2();
    void thread_add_ln446_fu_399_p2();
    void thread_add_ln449_fu_440_p2();
    void thread_add_ln452_1_fu_644_p2();
    void thread_add_ln454_1_fu_630_p2();
    void thread_add_ln479_1_fu_700_p2();
    void thread_add_ln479_fu_719_p2();
    void thread_and_ln480_1_fu_486_p2();
    void thread_and_ln480_2_fu_498_p2();
    void thread_and_ln480_3_fu_510_p2();
    void thread_and_ln480_4_fu_550_p2();
    void thread_and_ln480_5_fu_576_p2();
    void thread_and_ln480_fu_428_p2();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state6_pp1_stage0_iter1();
    void thread_ap_block_state7_pp1_stage0_iter2();
    void thread_ap_block_state8_pp1_stage0_iter3();
    void thread_ap_condition_pp1_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_c61_0_phi_fu_313_p4();
    void thread_ap_ready();
    void thread_c2_fu_446_p2();
    void thread_c5_fu_524_p2();
    void thread_c6_2_fu_590_p2();
    void thread_c6_fu_355_p2();
    void thread_c7_1_fu_624_p2();
    void thread_c7_fu_410_p2();
    void thread_fifo_A_in_V_V_blk_n();
    void thread_fifo_A_in_V_V_read();
    void thread_fifo_A_out_V_V_blk_n();
    void thread_fifo_A_out_V_V_din();
    void thread_fifo_A_out_V_V_write();
    void thread_fifo_B_in_V_V_blk_n();
    void thread_fifo_B_in_V_V_read();
    void thread_fifo_B_out_V_V_blk_n();
    void thread_fifo_B_out_V_V_din();
    void thread_fifo_B_out_V_V_write();
    void thread_fifo_C_drain_out_V_blk_n();
    void thread_fifo_C_drain_out_V_din();
    void thread_fifo_C_drain_out_V_write();
    void thread_icmp_ln435_fu_331_p2();
    void thread_icmp_ln440_fu_343_p2();
    void thread_icmp_ln442_fu_361_p2();
    void thread_icmp_ln449_fu_434_p2();
    void thread_icmp_ln452_fu_452_p2();
    void thread_icmp_ln454_fu_504_p2();
    void thread_icmp_ln456_fu_492_p2();
    void thread_icmp_ln480_1_fu_422_p2();
    void thread_icmp_ln480_2_fu_466_p2();
    void thread_icmp_ln480_3_fu_544_p2();
    void thread_icmp_ln480_fu_416_p2();
    void thread_internal_ap_ready();
    void thread_local_C_address0();
    void thread_local_C_ce0();
    void thread_local_C_ce1();
    void thread_local_C_we0();
    void thread_local_C_we1();
    void thread_mul_ln479_1_fu_715_p2();
    void thread_mul_ln479_fu_711_p2();
    void thread_or_ln479_1_fu_602_p2();
    void thread_or_ln479_fu_596_p2();
    void thread_or_ln480_1_fu_570_p2();
    void thread_or_ln480_fu_530_p2();
    void thread_p_Repl2_2_fu_661_p1();
    void thread_p_Repl2_s_fu_675_p1();
    void thread_real_start();
    void thread_select_ln446_1_fu_375_p3();
    void thread_select_ln446_fu_367_p3();
    void thread_select_ln449_fu_516_p3();
    void thread_select_ln452_1_fu_650_p3();
    void thread_select_ln452_fu_582_p3();
    void thread_select_ln454_fu_636_p3();
    void thread_select_ln479_1_fu_616_p3();
    void thread_select_ln479_fu_608_p3();
    void thread_select_ln480_1_fu_472_p3();
    void thread_select_ln480_2_fu_536_p3();
    void thread_select_ln480_3_fu_556_p3();
    void thread_select_ln480_fu_458_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_2_fu_723_p2();
    void thread_tmp_4_fu_387_p3();
    void thread_tmp_5_fu_689_p3();
    void thread_xor_ln480_1_fu_564_p2();
    void thread_xor_ln480_fu_480_p2();
    void thread_zext_ln442_fu_383_p1();
    void thread_zext_ln446_1_fu_405_p1();
    void thread_zext_ln446_fu_395_p1();
    void thread_zext_ln479_1_fu_696_p1();
    void thread_zext_ln479_2_fu_706_p1();
    void thread_zext_ln479_fu_658_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
