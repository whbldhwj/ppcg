// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "C_drain_IO_L1_out_in_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic C_drain_IO_L1_out_in_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic C_drain_IO_L1_out_in_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> C_drain_IO_L1_out_in_2::ap_ST_fsm_state1 = "1";
const sc_lv<3> C_drain_IO_L1_out_in_2::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> C_drain_IO_L1_out_in_2::ap_ST_fsm_state4 = "100";
const bool C_drain_IO_L1_out_in_2::ap_const_boolean_1 = true;
const sc_lv<32> C_drain_IO_L1_out_in_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> C_drain_IO_L1_out_in_2::ap_const_lv32_1 = "1";
const bool C_drain_IO_L1_out_in_2::ap_const_boolean_0 = false;
const sc_lv<1> C_drain_IO_L1_out_in_2::ap_const_lv1_0 = "0";
const sc_lv<1> C_drain_IO_L1_out_in_2::ap_const_lv1_1 = "1";
const sc_lv<3> C_drain_IO_L1_out_in_2::ap_const_lv3_0 = "000";
const sc_lv<2> C_drain_IO_L1_out_in_2::ap_const_lv2_0 = "00";
const sc_lv<3> C_drain_IO_L1_out_in_2::ap_const_lv3_4 = "100";
const sc_lv<3> C_drain_IO_L1_out_in_2::ap_const_lv3_1 = "1";
const sc_lv<2> C_drain_IO_L1_out_in_2::ap_const_lv2_1 = "1";
const sc_lv<2> C_drain_IO_L1_out_in_2::ap_const_lv2_2 = "10";
const sc_lv<32> C_drain_IO_L1_out_in_2::ap_const_lv32_2 = "10";

C_drain_IO_L1_out_in_2::C_drain_IO_L1_out_in_2(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln610_fu_161_p2);
    sensitive << ( indvar_flatten_reg_110 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( fifo_C_drain_in_V_V_empty_n );
    sensitive << ( fifo_C_drain_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln610_reg_230 );
    sensitive << ( ap_predicate_op31_read_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( fifo_C_drain_in_V_V_empty_n );
    sensitive << ( fifo_C_drain_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln610_reg_230 );
    sensitive << ( ap_predicate_op31_read_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( fifo_C_drain_in_V_V_empty_n );
    sensitive << ( fifo_C_drain_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln610_reg_230 );
    sensitive << ( ap_predicate_op31_read_state3 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( fifo_C_drain_in_V_V_empty_n );
    sensitive << ( fifo_C_drain_out_V_V_full_n );
    sensitive << ( icmp_ln610_reg_230 );
    sensitive << ( ap_predicate_op31_read_state3 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln610_fu_155_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_tmp_V_phi_fu_146_p4);
    sensitive << ( local_C_0_V_q0 );
    sensitive << ( fifo_C_drain_in_V_V_dout );
    sensitive << ( icmp_ln610_reg_230 );
    sensitive << ( select_ln616_1_reg_239 );
    sensitive << ( ap_phi_reg_pp0_iter1_tmp_V_reg_143 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter1_tmp_V_reg_143);

    SC_METHOD(thread_ap_predicate_op31_read_state3);
    sensitive << ( icmp_ln610_reg_230 );
    sensitive << ( select_ln616_1_reg_239 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_c4_fu_167_p2);
    sensitive << ( c4_0_reg_121 );

    SC_METHOD(thread_c5_fu_220_p2);
    sensitive << ( select_ln616_fu_179_p3 );

    SC_METHOD(thread_en_read_read_fu_78_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( en );

    SC_METHOD(thread_fifo_C_drain_in_V_V_blk_n);
    sensitive << ( fifo_C_drain_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln610_reg_230 );
    sensitive << ( select_ln616_1_reg_239 );

    SC_METHOD(thread_fifo_C_drain_in_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op31_read_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_fifo_C_drain_out_V_V_blk_n);
    sensitive << ( fifo_C_drain_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln610_reg_230 );

    SC_METHOD(thread_fifo_C_drain_out_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln610_reg_230 );
    sensitive << ( ap_phi_mux_tmp_V_phi_fu_146_p4 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_fifo_C_drain_out_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln610_reg_230 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln610_fu_155_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_110 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln612_fu_173_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c5_0_reg_132 );
    sensitive << ( icmp_ln610_fu_155_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln616_1_fu_193_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c4_0_reg_121 );
    sensitive << ( icmp_ln610_fu_155_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln616_fu_187_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c4_0_reg_121 );
    sensitive << ( icmp_ln610_fu_155_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_local_C_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln617_fu_215_p1 );

    SC_METHOD(thread_local_C_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_select_ln610_fu_207_p3);
    sensitive << ( c4_0_reg_121 );
    sensitive << ( icmp_ln612_fu_173_p2 );
    sensitive << ( c4_fu_167_p2 );

    SC_METHOD(thread_select_ln616_1_fu_199_p3);
    sensitive << ( icmp_ln612_fu_173_p2 );
    sensitive << ( icmp_ln616_fu_187_p2 );
    sensitive << ( icmp_ln616_1_fu_193_p2 );

    SC_METHOD(thread_select_ln616_fu_179_p3);
    sensitive << ( c5_0_reg_132 );
    sensitive << ( icmp_ln612_fu_173_p2 );

    SC_METHOD(thread_zext_ln617_fu_215_p1);
    sensitive << ( select_ln616_fu_179_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( en_read_read_fu_78_p2 );
    sensitive << ( icmp_ln610_fu_155_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "C_drain_IO_L1_out_in_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, local_C_0_V_address0, "(port)local_C_0_V_address0");
    sc_trace(mVcdFile, local_C_0_V_ce0, "(port)local_C_0_V_ce0");
    sc_trace(mVcdFile, local_C_0_V_q0, "(port)local_C_0_V_q0");
    sc_trace(mVcdFile, fifo_C_drain_in_V_V_dout, "(port)fifo_C_drain_in_V_V_dout");
    sc_trace(mVcdFile, fifo_C_drain_in_V_V_empty_n, "(port)fifo_C_drain_in_V_V_empty_n");
    sc_trace(mVcdFile, fifo_C_drain_in_V_V_read, "(port)fifo_C_drain_in_V_V_read");
    sc_trace(mVcdFile, fifo_C_drain_out_V_V_din, "(port)fifo_C_drain_out_V_V_din");
    sc_trace(mVcdFile, fifo_C_drain_out_V_V_full_n, "(port)fifo_C_drain_out_V_V_full_n");
    sc_trace(mVcdFile, fifo_C_drain_out_V_V_write, "(port)fifo_C_drain_out_V_V_write");
    sc_trace(mVcdFile, en, "(port)en");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, fifo_C_drain_in_V_V_blk_n, "fifo_C_drain_in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln610_reg_230, "icmp_ln610_reg_230");
    sc_trace(mVcdFile, select_ln616_1_reg_239, "select_ln616_1_reg_239");
    sc_trace(mVcdFile, fifo_C_drain_out_V_V_blk_n, "fifo_C_drain_out_V_V_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_110, "indvar_flatten_reg_110");
    sc_trace(mVcdFile, c4_0_reg_121, "c4_0_reg_121");
    sc_trace(mVcdFile, c5_0_reg_132, "c5_0_reg_132");
    sc_trace(mVcdFile, en_read_read_fu_78_p2, "en_read_read_fu_78_p2");
    sc_trace(mVcdFile, icmp_ln610_fu_155_p2, "icmp_ln610_fu_155_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op31_read_state3, "ap_predicate_op31_read_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln610_fu_161_p2, "add_ln610_fu_161_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln616_1_fu_199_p3, "select_ln616_1_fu_199_p3");
    sc_trace(mVcdFile, select_ln610_fu_207_p3, "select_ln610_fu_207_p3");
    sc_trace(mVcdFile, c5_fu_220_p2, "c5_fu_220_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_phi_mux_tmp_V_phi_fu_146_p4, "ap_phi_mux_tmp_V_phi_fu_146_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_V_reg_143, "ap_phi_reg_pp0_iter1_tmp_V_reg_143");
    sc_trace(mVcdFile, zext_ln617_fu_215_p1, "zext_ln617_fu_215_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, icmp_ln612_fu_173_p2, "icmp_ln612_fu_173_p2");
    sc_trace(mVcdFile, icmp_ln616_fu_187_p2, "icmp_ln616_fu_187_p2");
    sc_trace(mVcdFile, icmp_ln616_1_fu_193_p2, "icmp_ln616_1_fu_193_p2");
    sc_trace(mVcdFile, c4_fu_167_p2, "c4_fu_167_p2");
    sc_trace(mVcdFile, select_ln616_fu_179_p3, "select_ln616_fu_179_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

C_drain_IO_L1_out_in_2::~C_drain_IO_L1_out_in_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void C_drain_IO_L1_out_in_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(en_read_read_fu_78_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(en_read_read_fu_78_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(en_read_read_fu_78_p2.read(), ap_const_lv1_1))) {
        c4_0_reg_121 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln610_fu_155_p2.read()))) {
        c4_0_reg_121 = select_ln610_fu_207_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(en_read_read_fu_78_p2.read(), ap_const_lv1_1))) {
        c5_0_reg_132 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln610_fu_155_p2.read()))) {
        c5_0_reg_132 = c5_fu_220_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(en_read_read_fu_78_p2.read(), ap_const_lv1_1))) {
        indvar_flatten_reg_110 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln610_fu_155_p2.read()))) {
        indvar_flatten_reg_110 = add_ln610_fu_161_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln610_reg_230 = icmp_ln610_fu_155_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln610_fu_155_p2.read()))) {
        select_ln616_1_reg_239 = select_ln616_1_fu_199_p3.read();
    }
}

void C_drain_IO_L1_out_in_2::thread_add_ln610_fu_161_p2() {
    add_ln610_fu_161_p2 = (!indvar_flatten_reg_110.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_110.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void C_drain_IO_L1_out_in_2::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void C_drain_IO_L1_out_in_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void C_drain_IO_L1_out_in_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void C_drain_IO_L1_out_in_2::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L1_out_in_2::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_in_V_V_empty_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state3.read())) || 
  (esl_seteq<1,1,1>(icmp_ln610_reg_230.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_out_V_V_full_n.read()))));
}

void C_drain_IO_L1_out_in_2::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_in_V_V_empty_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state3.read())) || 
  (esl_seteq<1,1,1>(icmp_ln610_reg_230.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_out_V_V_full_n.read()))));
}

void C_drain_IO_L1_out_in_2::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_in_V_V_empty_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state3.read())) || 
  (esl_seteq<1,1,1>(icmp_ln610_reg_230.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_out_V_V_full_n.read()))));
}

void C_drain_IO_L1_out_in_2::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L1_out_in_2::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_in_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state3.read())) || (esl_seteq<1,1,1>(icmp_ln610_reg_230.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_out_V_V_full_n.read())));
}

void C_drain_IO_L1_out_in_2::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln610_fu_155_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void C_drain_IO_L1_out_in_2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void C_drain_IO_L1_out_in_2::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void C_drain_IO_L1_out_in_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void C_drain_IO_L1_out_in_2::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void C_drain_IO_L1_out_in_2::thread_ap_phi_mux_tmp_V_phi_fu_146_p4() {
    if (esl_seteq<1,1,1>(icmp_ln610_reg_230.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, select_ln616_1_reg_239.read())) {
            ap_phi_mux_tmp_V_phi_fu_146_p4 = fifo_C_drain_in_V_V_dout.read();
        } else if (esl_seteq<1,1,1>(select_ln616_1_reg_239.read(), ap_const_lv1_1)) {
            ap_phi_mux_tmp_V_phi_fu_146_p4 = local_C_0_V_q0.read();
        } else {
            ap_phi_mux_tmp_V_phi_fu_146_p4 = ap_phi_reg_pp0_iter1_tmp_V_reg_143.read();
        }
    } else {
        ap_phi_mux_tmp_V_phi_fu_146_p4 = ap_phi_reg_pp0_iter1_tmp_V_reg_143.read();
    }
}

void C_drain_IO_L1_out_in_2::thread_ap_phi_reg_pp0_iter1_tmp_V_reg_143() {
    ap_phi_reg_pp0_iter1_tmp_V_reg_143 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void C_drain_IO_L1_out_in_2::thread_ap_predicate_op31_read_state3() {
    ap_predicate_op31_read_state3 = (esl_seteq<1,1,1>(icmp_ln610_reg_230.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, select_ln616_1_reg_239.read()));
}

void C_drain_IO_L1_out_in_2::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void C_drain_IO_L1_out_in_2::thread_c4_fu_167_p2() {
    c4_fu_167_p2 = (!c4_0_reg_121.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(c4_0_reg_121.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void C_drain_IO_L1_out_in_2::thread_c5_fu_220_p2() {
    c5_fu_220_p2 = (!select_ln616_fu_179_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(select_ln616_fu_179_p3.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void C_drain_IO_L1_out_in_2::thread_en_read_read_fu_78_p2() {
    en_read_read_fu_78_p2 =  (sc_lv<1>) (en.read());
}

void C_drain_IO_L1_out_in_2::thread_fifo_C_drain_in_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln610_reg_230.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, select_ln616_1_reg_239.read()))) {
        fifo_C_drain_in_V_V_blk_n = fifo_C_drain_in_V_V_empty_n.read();
    } else {
        fifo_C_drain_in_V_V_blk_n = ap_const_logic_1;
    }
}

void C_drain_IO_L1_out_in_2::thread_fifo_C_drain_in_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op31_read_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_C_drain_in_V_V_read = ap_const_logic_1;
    } else {
        fifo_C_drain_in_V_V_read = ap_const_logic_0;
    }
}

void C_drain_IO_L1_out_in_2::thread_fifo_C_drain_out_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln610_reg_230.read(), ap_const_lv1_0))) {
        fifo_C_drain_out_V_V_blk_n = fifo_C_drain_out_V_V_full_n.read();
    } else {
        fifo_C_drain_out_V_V_blk_n = ap_const_logic_1;
    }
}

void C_drain_IO_L1_out_in_2::thread_fifo_C_drain_out_V_V_din() {
    fifo_C_drain_out_V_V_din = ap_phi_mux_tmp_V_phi_fu_146_p4.read();
}

void C_drain_IO_L1_out_in_2::thread_fifo_C_drain_out_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln610_reg_230.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_C_drain_out_V_V_write = ap_const_logic_1;
    } else {
        fifo_C_drain_out_V_V_write = ap_const_logic_0;
    }
}

void C_drain_IO_L1_out_in_2::thread_icmp_ln610_fu_155_p2() {
    icmp_ln610_fu_155_p2 = (!indvar_flatten_reg_110.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_110.read() == ap_const_lv3_4);
}

void C_drain_IO_L1_out_in_2::thread_icmp_ln612_fu_173_p2() {
    icmp_ln612_fu_173_p2 = (!c5_0_reg_132.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(c5_0_reg_132.read() == ap_const_lv2_2);
}

void C_drain_IO_L1_out_in_2::thread_icmp_ln616_1_fu_193_p2() {
    icmp_ln616_1_fu_193_p2 = (!c4_0_reg_121.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(c4_0_reg_121.read() == ap_const_lv2_1);
}

void C_drain_IO_L1_out_in_2::thread_icmp_ln616_fu_187_p2() {
    icmp_ln616_fu_187_p2 = (!c4_0_reg_121.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(c4_0_reg_121.read() == ap_const_lv2_0);
}

void C_drain_IO_L1_out_in_2::thread_local_C_0_V_address0() {
    local_C_0_V_address0 =  (sc_lv<1>) (zext_ln617_fu_215_p1.read());
}

void C_drain_IO_L1_out_in_2::thread_local_C_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        local_C_0_V_ce0 = ap_const_logic_1;
    } else {
        local_C_0_V_ce0 = ap_const_logic_0;
    }
}

void C_drain_IO_L1_out_in_2::thread_select_ln610_fu_207_p3() {
    select_ln610_fu_207_p3 = (!icmp_ln612_fu_173_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln612_fu_173_p2.read()[0].to_bool())? c4_fu_167_p2.read(): c4_0_reg_121.read());
}

void C_drain_IO_L1_out_in_2::thread_select_ln616_1_fu_199_p3() {
    select_ln616_1_fu_199_p3 = (!icmp_ln612_fu_173_p2.read()[0].is_01())? sc_lv<1>(): ((icmp_ln612_fu_173_p2.read()[0].to_bool())? icmp_ln616_fu_187_p2.read(): icmp_ln616_1_fu_193_p2.read());
}

void C_drain_IO_L1_out_in_2::thread_select_ln616_fu_179_p3() {
    select_ln616_fu_179_p3 = (!icmp_ln612_fu_173_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln612_fu_173_p2.read()[0].to_bool())? ap_const_lv2_0: c5_0_reg_132.read());
}

void C_drain_IO_L1_out_in_2::thread_zext_ln617_fu_215_p1() {
    zext_ln617_fu_215_p1 = esl_zext<64,2>(select_ln616_fu_179_p3.read());
}

void C_drain_IO_L1_out_in_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(en_read_read_fu_78_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, en_read_read_fu_78_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln610_fu_155_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln610_fu_155_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

