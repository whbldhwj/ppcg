// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "C_drain_IO_L3_out.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic C_drain_IO_L3_out::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic C_drain_IO_L3_out::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> C_drain_IO_L3_out::ap_ST_fsm_state1 = "1";
const sc_lv<3> C_drain_IO_L3_out::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> C_drain_IO_L3_out::ap_ST_fsm_state10 = "100";
const sc_lv<32> C_drain_IO_L3_out::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool C_drain_IO_L3_out::ap_const_boolean_1 = true;
const sc_lv<1> C_drain_IO_L3_out::ap_const_lv1_0 = "0";
const sc_lv<3> C_drain_IO_L3_out::ap_const_lv3_0 = "000";
const sc_lv<2> C_drain_IO_L3_out::ap_const_lv2_0 = "00";
const sc_lv<4> C_drain_IO_L3_out::ap_const_lv4_0 = "0000";
const sc_lv<32> C_drain_IO_L3_out::ap_const_lv32_1 = "1";
const bool C_drain_IO_L3_out::ap_const_boolean_0 = false;
const sc_lv<1> C_drain_IO_L3_out::ap_const_lv1_1 = "1";
const sc_lv<6> C_drain_IO_L3_out::ap_const_lv6_0 = "000000";
const sc_lv<5> C_drain_IO_L3_out::ap_const_lv5_0 = "00000";
const sc_lv<8> C_drain_IO_L3_out::ap_const_lv8_FF = "11111111";
const sc_lv<32> C_drain_IO_L3_out::ap_const_lv32_3 = "11";
const sc_lv<32> C_drain_IO_L3_out::ap_const_lv32_1F = "11111";
const sc_lv<6> C_drain_IO_L3_out::ap_const_lv6_20 = "100000";
const sc_lv<6> C_drain_IO_L3_out::ap_const_lv6_1 = "1";
const sc_lv<2> C_drain_IO_L3_out::ap_const_lv2_1 = "1";
const sc_lv<6> C_drain_IO_L3_out::ap_const_lv6_10 = "10000";
const sc_lv<2> C_drain_IO_L3_out::ap_const_lv2_2 = "10";
const sc_lv<4> C_drain_IO_L3_out::ap_const_lv4_4 = "100";
const sc_lv<5> C_drain_IO_L3_out::ap_const_lv5_8 = "1000";
const sc_lv<4> C_drain_IO_L3_out::ap_const_lv4_1 = "1";
const sc_lv<5> C_drain_IO_L3_out::ap_const_lv5_1 = "1";
const sc_lv<32> C_drain_IO_L3_out::ap_const_lv32_2 = "10";

C_drain_IO_L3_out::C_drain_IO_L3_out(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C_V_blk_n_AW);
    sensitive << ( m_axi_C_V_AWREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln795_reg_715 );

    SC_METHOD(thread_C_V_blk_n_B);
    sensitive << ( m_axi_C_V_BVALID );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln795_reg_715_pp0_iter6_reg );

    SC_METHOD(thread_C_V_blk_n_W);
    sensitive << ( m_axi_C_V_WREADY );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln795_reg_715_pp0_iter1_reg );

    SC_METHOD(thread_C_V_offset_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_V_offset_empty_n );

    SC_METHOD(thread_C_V_offset_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_V_offset_empty_n );

    SC_METHOD(thread_add_ln321_fu_647_p2);
    sensitive << ( zext_ln795_reg_710 );
    sensitive << ( zext_ln321_fu_643_p1 );

    SC_METHOD(thread_add_ln795_1_fu_289_p2);
    sensitive << ( ap_phi_mux_c0_0_i_phi_fu_161_p4 );

    SC_METHOD(thread_add_ln795_fu_283_p2);
    sensitive << ( indvar_flatten85_i_reg_146 );

    SC_METHOD(thread_add_ln796_1_fu_686_p2);
    sensitive << ( indvar_flatten47_i_reg_168 );

    SC_METHOD(thread_add_ln796_fu_389_p2);
    sensitive << ( select_ln796_fu_301_p3 );

    SC_METHOD(thread_add_ln799_1_fu_672_p2);
    sensitive << ( indvar_flatten17_i_reg_190 );

    SC_METHOD(thread_add_ln799_fu_473_p2);
    sensitive << ( select_ln799_fu_401_p3 );

    SC_METHOD(thread_add_ln801_1_fu_658_p2);
    sensitive << ( indvar_flatten_i_reg_212 );

    SC_METHOD(thread_add_ln801_fu_543_p2);
    sensitive << ( select_ln808_fu_491_p3 );

    SC_METHOD(thread_add_ln808_fu_603_p2);
    sensitive << ( zext_ln808_fu_599_p1 );
    sensitive << ( select_ln808_4_fu_583_p3 );

    SC_METHOD(thread_and_ln796_1_fu_351_p2);
    sensitive << ( xor_ln796_fu_309_p2 );
    sensitive << ( icmp_ln803_fu_345_p2 );

    SC_METHOD(thread_and_ln796_2_fu_363_p2);
    sensitive << ( xor_ln796_fu_309_p2 );
    sensitive << ( icmp_ln801_fu_357_p2 );

    SC_METHOD(thread_and_ln796_3_fu_375_p2);
    sensitive << ( xor_ln796_fu_309_p2 );
    sensitive << ( icmp_ln799_fu_369_p2 );

    SC_METHOD(thread_and_ln796_fu_319_p2);
    sensitive << ( trunc_ln808_2_fu_315_p1 );
    sensitive << ( xor_ln796_fu_309_p2 );

    SC_METHOD(thread_and_ln799_1_fu_459_p2);
    sensitive << ( or_ln799_1_fu_447_p2 );
    sensitive << ( and_ln796_2_fu_363_p2 );

    SC_METHOD(thread_and_ln799_2_fu_619_p2);
    sensitive << ( trunc_ln808_9_fu_615_p1 );
    sensitive << ( xor_ln799_1_fu_609_p2 );

    SC_METHOD(thread_and_ln799_fu_453_p2);
    sensitive << ( and_ln796_1_fu_351_p2 );
    sensitive << ( or_ln799_1_fu_447_p2 );

    SC_METHOD(thread_and_ln808_fu_529_p2);
    sensitive << ( and_ln799_fu_453_p2 );
    sensitive << ( xor_ln808_fu_523_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( m_axi_C_V_BVALID );
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln795_reg_715 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln795_reg_715_pp0_iter6_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_C_V_BVALID );
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln795_reg_715 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln795_reg_715_pp0_iter6_reg );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_C_V_BVALID );
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln795_reg_715 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln795_reg_715_pp0_iter6_reg );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( C_V_offset_empty_n );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( m_axi_C_V_AWREADY );
    sensitive << ( icmp_ln795_reg_715 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( icmp_ln795_reg_715 );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( m_axi_C_V_WREADY );
    sensitive << ( icmp_ln795_reg_715_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);
    sensitive << ( m_axi_C_V_BVALID );
    sensitive << ( icmp_ln795_reg_715_pp0_iter6_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln795_fu_277_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_phi_mux_c0_0_i_phi_fu_161_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln795_reg_715 );
    sensitive << ( c0_0_i_reg_157 );
    sensitive << ( select_ln795_reg_724 );

    SC_METHOD(thread_ap_phi_mux_c1_0_i_phi_fu_183_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln795_reg_715 );
    sensitive << ( c1_0_i_reg_179 );
    sensitive << ( select_ln796_2_reg_729 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_c5_fu_652_p2);
    sensitive << ( select_ln808_3_fu_561_p3 );

    SC_METHOD(thread_fifo_C_drain_local_in_V_V_blk_n);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln795_reg_715 );

    SC_METHOD(thread_fifo_C_drain_local_in_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln795_reg_715 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln795_fu_277_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten85_i_reg_146 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln796_fu_295_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten47_i_reg_168 );
    sensitive << ( icmp_ln795_fu_277_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln799_fu_369_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten17_i_reg_190 );
    sensitive << ( icmp_ln795_fu_277_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln801_fu_357_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_i_reg_212 );
    sensitive << ( icmp_ln795_fu_277_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln803_fu_345_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c5_0_i_reg_234 );
    sensitive << ( icmp_ln795_fu_277_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_m_axi_C_V_ARADDR);

    SC_METHOD(thread_m_axi_C_V_ARBURST);

    SC_METHOD(thread_m_axi_C_V_ARCACHE);

    SC_METHOD(thread_m_axi_C_V_ARID);

    SC_METHOD(thread_m_axi_C_V_ARLEN);

    SC_METHOD(thread_m_axi_C_V_ARLOCK);

    SC_METHOD(thread_m_axi_C_V_ARPROT);

    SC_METHOD(thread_m_axi_C_V_ARQOS);

    SC_METHOD(thread_m_axi_C_V_ARREGION);

    SC_METHOD(thread_m_axi_C_V_ARSIZE);

    SC_METHOD(thread_m_axi_C_V_ARUSER);

    SC_METHOD(thread_m_axi_C_V_ARVALID);

    SC_METHOD(thread_m_axi_C_V_AWADDR);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln795_reg_715 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( zext_ln321_1_fu_700_p1 );

    SC_METHOD(thread_m_axi_C_V_AWBURST);

    SC_METHOD(thread_m_axi_C_V_AWCACHE);

    SC_METHOD(thread_m_axi_C_V_AWID);

    SC_METHOD(thread_m_axi_C_V_AWLEN);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln795_reg_715 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_C_V_AWLOCK);

    SC_METHOD(thread_m_axi_C_V_AWPROT);

    SC_METHOD(thread_m_axi_C_V_AWQOS);

    SC_METHOD(thread_m_axi_C_V_AWREGION);

    SC_METHOD(thread_m_axi_C_V_AWSIZE);

    SC_METHOD(thread_m_axi_C_V_AWUSER);

    SC_METHOD(thread_m_axi_C_V_AWVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln795_reg_715 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_C_V_BREADY);
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln795_reg_715_pp0_iter6_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_C_V_RREADY);

    SC_METHOD(thread_m_axi_C_V_WDATA);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln795_reg_715_pp0_iter1_reg );
    sensitive << ( tmp_V_reg_769 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_C_V_WID);

    SC_METHOD(thread_m_axi_C_V_WLAST);

    SC_METHOD(thread_m_axi_C_V_WSTRB);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln795_reg_715_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_C_V_WUSER);

    SC_METHOD(thread_m_axi_C_V_WVALID);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln795_reg_715_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_or_ln799_1_fu_447_p2);
    sensitive << ( icmp_ln796_fu_295_p2 );
    sensitive << ( xor_ln799_fu_441_p2 );

    SC_METHOD(thread_or_ln799_fu_395_p2);
    sensitive << ( icmp_ln796_fu_295_p2 );
    sensitive << ( and_ln796_3_fu_375_p2 );

    SC_METHOD(thread_or_ln808_1_fu_485_p2);
    sensitive << ( icmp_ln796_fu_295_p2 );
    sensitive << ( or_ln808_fu_479_p2 );

    SC_METHOD(thread_or_ln808_1_i_fu_267_p4);
    sensitive << ( trunc_ln808_1_fu_263_p1 );
    sensitive << ( trunc_ln808_fu_259_p1 );

    SC_METHOD(thread_or_ln808_1_mid1_i_fu_573_p4);
    sensitive << ( trunc_ln808_5_fu_421_p1 );
    sensitive << ( trunc_ln808_8_fu_569_p1 );

    SC_METHOD(thread_or_ln808_1_mid3_i_fu_425_p3);
    sensitive << ( trunc_ln808_5_fu_421_p1 );

    SC_METHOD(thread_or_ln808_1_mid_i_fu_329_p3);
    sensitive << ( trunc_ln808_3_fu_325_p1 );

    SC_METHOD(thread_or_ln808_2_fu_549_p2);
    sensitive << ( and_ln799_1_fu_459_p2 );
    sensitive << ( and_ln808_fu_529_p2 );

    SC_METHOD(thread_or_ln808_3_fu_555_p2);
    sensitive << ( or_ln799_fu_395_p2 );
    sensitive << ( or_ln808_2_fu_549_p2 );

    SC_METHOD(thread_or_ln808_fu_479_p2);
    sensitive << ( and_ln796_3_fu_375_p2 );
    sensitive << ( and_ln799_1_fu_459_p2 );

    SC_METHOD(thread_select_ln795_fu_381_p3);
    sensitive << ( ap_phi_mux_c0_0_i_phi_fu_161_p4 );
    sensitive << ( icmp_ln796_fu_295_p2 );
    sensitive << ( add_ln795_1_fu_289_p2 );

    SC_METHOD(thread_select_ln796_1_fu_337_p3);
    sensitive << ( icmp_ln796_fu_295_p2 );
    sensitive << ( or_ln808_1_mid_i_fu_329_p3 );
    sensitive << ( or_ln808_1_i_fu_267_p4 );

    SC_METHOD(thread_select_ln796_2_fu_465_p3);
    sensitive << ( select_ln796_fu_301_p3 );
    sensitive << ( and_ln796_3_fu_375_p2 );
    sensitive << ( add_ln796_fu_389_p2 );

    SC_METHOD(thread_select_ln796_3_fu_692_p3);
    sensitive << ( icmp_ln796_fu_295_p2 );
    sensitive << ( add_ln796_1_fu_686_p2 );

    SC_METHOD(thread_select_ln796_fu_301_p3);
    sensitive << ( ap_phi_mux_c1_0_i_phi_fu_183_p4 );
    sensitive << ( icmp_ln796_fu_295_p2 );

    SC_METHOD(thread_select_ln799_1_fu_413_p3);
    sensitive << ( and_ln796_3_fu_375_p2 );
    sensitive << ( trunc_ln808_4_fu_409_p1 );
    sensitive << ( and_ln796_fu_319_p2 );

    SC_METHOD(thread_select_ln799_2_fu_433_p3);
    sensitive << ( and_ln796_3_fu_375_p2 );
    sensitive << ( or_ln808_1_mid3_i_fu_425_p3 );
    sensitive << ( select_ln796_1_fu_337_p3 );

    SC_METHOD(thread_select_ln799_3_fu_535_p3);
    sensitive << ( select_ln799_fu_401_p3 );
    sensitive << ( and_ln799_1_fu_459_p2 );
    sensitive << ( add_ln799_fu_473_p2 );

    SC_METHOD(thread_select_ln799_4_fu_678_p3);
    sensitive << ( or_ln799_fu_395_p2 );
    sensitive << ( add_ln799_1_fu_672_p2 );

    SC_METHOD(thread_select_ln799_fu_401_p3);
    sensitive << ( c3_0_i_reg_201 );
    sensitive << ( or_ln799_fu_395_p2 );

    SC_METHOD(thread_select_ln801_1_fu_664_p3);
    sensitive << ( or_ln808_1_fu_485_p2 );
    sensitive << ( add_ln801_1_fu_658_p2 );

    SC_METHOD(thread_select_ln801_fu_591_p3);
    sensitive << ( select_ln808_fu_491_p3 );
    sensitive << ( and_ln808_fu_529_p2 );
    sensitive << ( add_ln801_fu_543_p2 );

    SC_METHOD(thread_select_ln808_1_fu_507_p3);
    sensitive << ( and_ln799_1_fu_459_p2 );
    sensitive << ( trunc_ln808_7_fu_503_p1 );
    sensitive << ( select_ln799_1_fu_413_p3 );

    SC_METHOD(thread_select_ln808_2_fu_515_p3);
    sensitive << ( or_ln808_1_mid3_i_fu_425_p3 );
    sensitive << ( and_ln799_1_fu_459_p2 );
    sensitive << ( select_ln799_2_fu_433_p3 );

    SC_METHOD(thread_select_ln808_3_fu_561_p3);
    sensitive << ( c5_0_i_reg_234 );
    sensitive << ( or_ln808_3_fu_555_p2 );

    SC_METHOD(thread_select_ln808_4_fu_583_p3);
    sensitive << ( and_ln808_fu_529_p2 );
    sensitive << ( or_ln808_1_mid1_i_fu_573_p4 );
    sensitive << ( select_ln808_2_fu_515_p3 );

    SC_METHOD(thread_select_ln808_5_fu_625_p3);
    sensitive << ( and_ln799_1_fu_459_p2 );
    sensitive << ( trunc_ln808_6_fu_499_p1 );
    sensitive << ( and_ln799_2_fu_619_p2 );

    SC_METHOD(thread_select_ln808_fu_491_p3);
    sensitive << ( c4_0_i_reg_223 );
    sensitive << ( or_ln808_1_fu_485_p2 );

    SC_METHOD(thread_tmp_fu_245_p4);
    sensitive << ( C_V_offset_dout );

    SC_METHOD(thread_trunc_ln808_1_fu_263_p1);
    sensitive << ( ap_phi_mux_c0_0_i_phi_fu_161_p4 );

    SC_METHOD(thread_trunc_ln808_2_fu_315_p1);
    sensitive << ( ap_phi_mux_c1_0_i_phi_fu_183_p4 );

    SC_METHOD(thread_trunc_ln808_3_fu_325_p1);
    sensitive << ( add_ln795_1_fu_289_p2 );

    SC_METHOD(thread_trunc_ln808_4_fu_409_p1);
    sensitive << ( add_ln796_fu_389_p2 );

    SC_METHOD(thread_trunc_ln808_5_fu_421_p1);
    sensitive << ( select_ln795_fu_381_p3 );

    SC_METHOD(thread_trunc_ln808_6_fu_499_p1);
    sensitive << ( add_ln799_fu_473_p2 );

    SC_METHOD(thread_trunc_ln808_7_fu_503_p1);
    sensitive << ( select_ln796_2_fu_465_p3 );

    SC_METHOD(thread_trunc_ln808_8_fu_569_p1);
    sensitive << ( add_ln801_fu_543_p2 );

    SC_METHOD(thread_trunc_ln808_9_fu_615_p1);
    sensitive << ( c3_0_i_reg_201 );

    SC_METHOD(thread_trunc_ln808_fu_259_p1);
    sensitive << ( c4_0_i_reg_223 );

    SC_METHOD(thread_trunc_ln_i_fu_633_p4);
    sensitive << ( add_ln808_fu_603_p2 );
    sensitive << ( select_ln808_1_fu_507_p3 );
    sensitive << ( select_ln808_5_fu_625_p3 );

    SC_METHOD(thread_xor_ln796_fu_309_p2);
    sensitive << ( icmp_ln796_fu_295_p2 );

    SC_METHOD(thread_xor_ln799_1_fu_609_p2);
    sensitive << ( or_ln799_fu_395_p2 );

    SC_METHOD(thread_xor_ln799_fu_441_p2);
    sensitive << ( icmp_ln799_fu_369_p2 );

    SC_METHOD(thread_xor_ln808_fu_523_p2);
    sensitive << ( and_ln799_1_fu_459_p2 );

    SC_METHOD(thread_zext_ln321_1_fu_700_p1);
    sensitive << ( add_ln321_reg_744 );

    SC_METHOD(thread_zext_ln321_fu_643_p1);
    sensitive << ( trunc_ln_i_fu_633_p4 );

    SC_METHOD(thread_zext_ln795_fu_255_p1);
    sensitive << ( tmp_fu_245_p4 );

    SC_METHOD(thread_zext_ln808_fu_599_p1);
    sensitive << ( select_ln808_3_fu_561_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_V_offset_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln795_fu_277_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "C_drain_IO_L3_out_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_C_V_AWVALID, "(port)m_axi_C_V_AWVALID");
    sc_trace(mVcdFile, m_axi_C_V_AWREADY, "(port)m_axi_C_V_AWREADY");
    sc_trace(mVcdFile, m_axi_C_V_AWADDR, "(port)m_axi_C_V_AWADDR");
    sc_trace(mVcdFile, m_axi_C_V_AWID, "(port)m_axi_C_V_AWID");
    sc_trace(mVcdFile, m_axi_C_V_AWLEN, "(port)m_axi_C_V_AWLEN");
    sc_trace(mVcdFile, m_axi_C_V_AWSIZE, "(port)m_axi_C_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_C_V_AWBURST, "(port)m_axi_C_V_AWBURST");
    sc_trace(mVcdFile, m_axi_C_V_AWLOCK, "(port)m_axi_C_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_C_V_AWCACHE, "(port)m_axi_C_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_C_V_AWPROT, "(port)m_axi_C_V_AWPROT");
    sc_trace(mVcdFile, m_axi_C_V_AWQOS, "(port)m_axi_C_V_AWQOS");
    sc_trace(mVcdFile, m_axi_C_V_AWREGION, "(port)m_axi_C_V_AWREGION");
    sc_trace(mVcdFile, m_axi_C_V_AWUSER, "(port)m_axi_C_V_AWUSER");
    sc_trace(mVcdFile, m_axi_C_V_WVALID, "(port)m_axi_C_V_WVALID");
    sc_trace(mVcdFile, m_axi_C_V_WREADY, "(port)m_axi_C_V_WREADY");
    sc_trace(mVcdFile, m_axi_C_V_WDATA, "(port)m_axi_C_V_WDATA");
    sc_trace(mVcdFile, m_axi_C_V_WSTRB, "(port)m_axi_C_V_WSTRB");
    sc_trace(mVcdFile, m_axi_C_V_WLAST, "(port)m_axi_C_V_WLAST");
    sc_trace(mVcdFile, m_axi_C_V_WID, "(port)m_axi_C_V_WID");
    sc_trace(mVcdFile, m_axi_C_V_WUSER, "(port)m_axi_C_V_WUSER");
    sc_trace(mVcdFile, m_axi_C_V_ARVALID, "(port)m_axi_C_V_ARVALID");
    sc_trace(mVcdFile, m_axi_C_V_ARREADY, "(port)m_axi_C_V_ARREADY");
    sc_trace(mVcdFile, m_axi_C_V_ARADDR, "(port)m_axi_C_V_ARADDR");
    sc_trace(mVcdFile, m_axi_C_V_ARID, "(port)m_axi_C_V_ARID");
    sc_trace(mVcdFile, m_axi_C_V_ARLEN, "(port)m_axi_C_V_ARLEN");
    sc_trace(mVcdFile, m_axi_C_V_ARSIZE, "(port)m_axi_C_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_C_V_ARBURST, "(port)m_axi_C_V_ARBURST");
    sc_trace(mVcdFile, m_axi_C_V_ARLOCK, "(port)m_axi_C_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_C_V_ARCACHE, "(port)m_axi_C_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_C_V_ARPROT, "(port)m_axi_C_V_ARPROT");
    sc_trace(mVcdFile, m_axi_C_V_ARQOS, "(port)m_axi_C_V_ARQOS");
    sc_trace(mVcdFile, m_axi_C_V_ARREGION, "(port)m_axi_C_V_ARREGION");
    sc_trace(mVcdFile, m_axi_C_V_ARUSER, "(port)m_axi_C_V_ARUSER");
    sc_trace(mVcdFile, m_axi_C_V_RVALID, "(port)m_axi_C_V_RVALID");
    sc_trace(mVcdFile, m_axi_C_V_RREADY, "(port)m_axi_C_V_RREADY");
    sc_trace(mVcdFile, m_axi_C_V_RDATA, "(port)m_axi_C_V_RDATA");
    sc_trace(mVcdFile, m_axi_C_V_RLAST, "(port)m_axi_C_V_RLAST");
    sc_trace(mVcdFile, m_axi_C_V_RID, "(port)m_axi_C_V_RID");
    sc_trace(mVcdFile, m_axi_C_V_RUSER, "(port)m_axi_C_V_RUSER");
    sc_trace(mVcdFile, m_axi_C_V_RRESP, "(port)m_axi_C_V_RRESP");
    sc_trace(mVcdFile, m_axi_C_V_BVALID, "(port)m_axi_C_V_BVALID");
    sc_trace(mVcdFile, m_axi_C_V_BREADY, "(port)m_axi_C_V_BREADY");
    sc_trace(mVcdFile, m_axi_C_V_BRESP, "(port)m_axi_C_V_BRESP");
    sc_trace(mVcdFile, m_axi_C_V_BID, "(port)m_axi_C_V_BID");
    sc_trace(mVcdFile, m_axi_C_V_BUSER, "(port)m_axi_C_V_BUSER");
    sc_trace(mVcdFile, C_V_offset_dout, "(port)C_V_offset_dout");
    sc_trace(mVcdFile, C_V_offset_empty_n, "(port)C_V_offset_empty_n");
    sc_trace(mVcdFile, C_V_offset_read, "(port)C_V_offset_read");
    sc_trace(mVcdFile, fifo_C_drain_local_in_V_V_dout, "(port)fifo_C_drain_local_in_V_V_dout");
    sc_trace(mVcdFile, fifo_C_drain_local_in_V_V_empty_n, "(port)fifo_C_drain_local_in_V_V_empty_n");
    sc_trace(mVcdFile, fifo_C_drain_local_in_V_V_read, "(port)fifo_C_drain_local_in_V_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, C_V_blk_n_AW, "C_V_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln795_reg_715, "icmp_ln795_reg_715");
    sc_trace(mVcdFile, C_V_blk_n_W, "C_V_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln795_reg_715_pp0_iter1_reg, "icmp_ln795_reg_715_pp0_iter1_reg");
    sc_trace(mVcdFile, C_V_blk_n_B, "C_V_blk_n_B");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, icmp_ln795_reg_715_pp0_iter6_reg, "icmp_ln795_reg_715_pp0_iter6_reg");
    sc_trace(mVcdFile, C_V_offset_blk_n, "C_V_offset_blk_n");
    sc_trace(mVcdFile, fifo_C_drain_local_in_V_V_blk_n, "fifo_C_drain_local_in_V_V_blk_n");
    sc_trace(mVcdFile, indvar_flatten85_i_reg_146, "indvar_flatten85_i_reg_146");
    sc_trace(mVcdFile, c0_0_i_reg_157, "c0_0_i_reg_157");
    sc_trace(mVcdFile, indvar_flatten47_i_reg_168, "indvar_flatten47_i_reg_168");
    sc_trace(mVcdFile, c1_0_i_reg_179, "c1_0_i_reg_179");
    sc_trace(mVcdFile, indvar_flatten17_i_reg_190, "indvar_flatten17_i_reg_190");
    sc_trace(mVcdFile, c3_0_i_reg_201, "c3_0_i_reg_201");
    sc_trace(mVcdFile, indvar_flatten_i_reg_212, "indvar_flatten_i_reg_212");
    sc_trace(mVcdFile, c4_0_i_reg_223, "c4_0_i_reg_223");
    sc_trace(mVcdFile, c5_0_i_reg_234, "c5_0_i_reg_234");
    sc_trace(mVcdFile, zext_ln795_fu_255_p1, "zext_ln795_fu_255_p1");
    sc_trace(mVcdFile, zext_ln795_reg_710, "zext_ln795_reg_710");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, icmp_ln795_fu_277_p2, "icmp_ln795_fu_277_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln795_reg_715_pp0_iter2_reg, "icmp_ln795_reg_715_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln795_reg_715_pp0_iter3_reg, "icmp_ln795_reg_715_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln795_reg_715_pp0_iter4_reg, "icmp_ln795_reg_715_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln795_reg_715_pp0_iter5_reg, "icmp_ln795_reg_715_pp0_iter5_reg");
    sc_trace(mVcdFile, add_ln795_fu_283_p2, "add_ln795_fu_283_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln795_fu_381_p3, "select_ln795_fu_381_p3");
    sc_trace(mVcdFile, select_ln795_reg_724, "select_ln795_reg_724");
    sc_trace(mVcdFile, select_ln796_2_fu_465_p3, "select_ln796_2_fu_465_p3");
    sc_trace(mVcdFile, select_ln796_2_reg_729, "select_ln796_2_reg_729");
    sc_trace(mVcdFile, select_ln799_3_fu_535_p3, "select_ln799_3_fu_535_p3");
    sc_trace(mVcdFile, select_ln801_fu_591_p3, "select_ln801_fu_591_p3");
    sc_trace(mVcdFile, add_ln321_fu_647_p2, "add_ln321_fu_647_p2");
    sc_trace(mVcdFile, add_ln321_reg_744, "add_ln321_reg_744");
    sc_trace(mVcdFile, c5_fu_652_p2, "c5_fu_652_p2");
    sc_trace(mVcdFile, select_ln801_1_fu_664_p3, "select_ln801_1_fu_664_p3");
    sc_trace(mVcdFile, select_ln799_4_fu_678_p3, "select_ln799_4_fu_678_p3");
    sc_trace(mVcdFile, select_ln796_3_fu_692_p3, "select_ln796_3_fu_692_p3");
    sc_trace(mVcdFile, tmp_V_reg_769, "tmp_V_reg_769");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_phi_mux_c0_0_i_phi_fu_161_p4, "ap_phi_mux_c0_0_i_phi_fu_161_p4");
    sc_trace(mVcdFile, ap_phi_mux_c1_0_i_phi_fu_183_p4, "ap_phi_mux_c1_0_i_phi_fu_183_p4");
    sc_trace(mVcdFile, zext_ln321_1_fu_700_p1, "zext_ln321_1_fu_700_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_fu_245_p4, "tmp_fu_245_p4");
    sc_trace(mVcdFile, trunc_ln808_1_fu_263_p1, "trunc_ln808_1_fu_263_p1");
    sc_trace(mVcdFile, trunc_ln808_fu_259_p1, "trunc_ln808_fu_259_p1");
    sc_trace(mVcdFile, icmp_ln796_fu_295_p2, "icmp_ln796_fu_295_p2");
    sc_trace(mVcdFile, trunc_ln808_2_fu_315_p1, "trunc_ln808_2_fu_315_p1");
    sc_trace(mVcdFile, xor_ln796_fu_309_p2, "xor_ln796_fu_309_p2");
    sc_trace(mVcdFile, add_ln795_1_fu_289_p2, "add_ln795_1_fu_289_p2");
    sc_trace(mVcdFile, trunc_ln808_3_fu_325_p1, "trunc_ln808_3_fu_325_p1");
    sc_trace(mVcdFile, or_ln808_1_mid_i_fu_329_p3, "or_ln808_1_mid_i_fu_329_p3");
    sc_trace(mVcdFile, or_ln808_1_i_fu_267_p4, "or_ln808_1_i_fu_267_p4");
    sc_trace(mVcdFile, icmp_ln803_fu_345_p2, "icmp_ln803_fu_345_p2");
    sc_trace(mVcdFile, icmp_ln801_fu_357_p2, "icmp_ln801_fu_357_p2");
    sc_trace(mVcdFile, icmp_ln799_fu_369_p2, "icmp_ln799_fu_369_p2");
    sc_trace(mVcdFile, select_ln796_fu_301_p3, "select_ln796_fu_301_p3");
    sc_trace(mVcdFile, and_ln796_3_fu_375_p2, "and_ln796_3_fu_375_p2");
    sc_trace(mVcdFile, or_ln799_fu_395_p2, "or_ln799_fu_395_p2");
    sc_trace(mVcdFile, add_ln796_fu_389_p2, "add_ln796_fu_389_p2");
    sc_trace(mVcdFile, trunc_ln808_4_fu_409_p1, "trunc_ln808_4_fu_409_p1");
    sc_trace(mVcdFile, and_ln796_fu_319_p2, "and_ln796_fu_319_p2");
    sc_trace(mVcdFile, trunc_ln808_5_fu_421_p1, "trunc_ln808_5_fu_421_p1");
    sc_trace(mVcdFile, or_ln808_1_mid3_i_fu_425_p3, "or_ln808_1_mid3_i_fu_425_p3");
    sc_trace(mVcdFile, select_ln796_1_fu_337_p3, "select_ln796_1_fu_337_p3");
    sc_trace(mVcdFile, xor_ln799_fu_441_p2, "xor_ln799_fu_441_p2");
    sc_trace(mVcdFile, and_ln796_1_fu_351_p2, "and_ln796_1_fu_351_p2");
    sc_trace(mVcdFile, or_ln799_1_fu_447_p2, "or_ln799_1_fu_447_p2");
    sc_trace(mVcdFile, and_ln796_2_fu_363_p2, "and_ln796_2_fu_363_p2");
    sc_trace(mVcdFile, select_ln799_fu_401_p3, "select_ln799_fu_401_p3");
    sc_trace(mVcdFile, and_ln799_1_fu_459_p2, "and_ln799_1_fu_459_p2");
    sc_trace(mVcdFile, or_ln808_fu_479_p2, "or_ln808_fu_479_p2");
    sc_trace(mVcdFile, or_ln808_1_fu_485_p2, "or_ln808_1_fu_485_p2");
    sc_trace(mVcdFile, add_ln799_fu_473_p2, "add_ln799_fu_473_p2");
    sc_trace(mVcdFile, trunc_ln808_7_fu_503_p1, "trunc_ln808_7_fu_503_p1");
    sc_trace(mVcdFile, select_ln799_1_fu_413_p3, "select_ln799_1_fu_413_p3");
    sc_trace(mVcdFile, select_ln799_2_fu_433_p3, "select_ln799_2_fu_433_p3");
    sc_trace(mVcdFile, and_ln799_fu_453_p2, "and_ln799_fu_453_p2");
    sc_trace(mVcdFile, xor_ln808_fu_523_p2, "xor_ln808_fu_523_p2");
    sc_trace(mVcdFile, select_ln808_fu_491_p3, "select_ln808_fu_491_p3");
    sc_trace(mVcdFile, and_ln808_fu_529_p2, "and_ln808_fu_529_p2");
    sc_trace(mVcdFile, or_ln808_2_fu_549_p2, "or_ln808_2_fu_549_p2");
    sc_trace(mVcdFile, or_ln808_3_fu_555_p2, "or_ln808_3_fu_555_p2");
    sc_trace(mVcdFile, add_ln801_fu_543_p2, "add_ln801_fu_543_p2");
    sc_trace(mVcdFile, trunc_ln808_8_fu_569_p1, "trunc_ln808_8_fu_569_p1");
    sc_trace(mVcdFile, or_ln808_1_mid1_i_fu_573_p4, "or_ln808_1_mid1_i_fu_573_p4");
    sc_trace(mVcdFile, select_ln808_2_fu_515_p3, "select_ln808_2_fu_515_p3");
    sc_trace(mVcdFile, select_ln808_3_fu_561_p3, "select_ln808_3_fu_561_p3");
    sc_trace(mVcdFile, zext_ln808_fu_599_p1, "zext_ln808_fu_599_p1");
    sc_trace(mVcdFile, select_ln808_4_fu_583_p3, "select_ln808_4_fu_583_p3");
    sc_trace(mVcdFile, trunc_ln808_9_fu_615_p1, "trunc_ln808_9_fu_615_p1");
    sc_trace(mVcdFile, xor_ln799_1_fu_609_p2, "xor_ln799_1_fu_609_p2");
    sc_trace(mVcdFile, trunc_ln808_6_fu_499_p1, "trunc_ln808_6_fu_499_p1");
    sc_trace(mVcdFile, and_ln799_2_fu_619_p2, "and_ln799_2_fu_619_p2");
    sc_trace(mVcdFile, add_ln808_fu_603_p2, "add_ln808_fu_603_p2");
    sc_trace(mVcdFile, select_ln808_1_fu_507_p3, "select_ln808_1_fu_507_p3");
    sc_trace(mVcdFile, select_ln808_5_fu_625_p3, "select_ln808_5_fu_625_p3");
    sc_trace(mVcdFile, trunc_ln_i_fu_633_p4, "trunc_ln_i_fu_633_p4");
    sc_trace(mVcdFile, zext_ln321_fu_643_p1, "zext_ln321_fu_643_p1");
    sc_trace(mVcdFile, add_ln801_1_fu_658_p2, "add_ln801_1_fu_658_p2");
    sc_trace(mVcdFile, add_ln799_1_fu_672_p2, "add_ln799_1_fu_672_p2");
    sc_trace(mVcdFile, add_ln796_1_fu_686_p2, "add_ln796_1_fu_686_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

C_drain_IO_L3_out::~C_drain_IO_L3_out() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void C_drain_IO_L3_out::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
            ap_enable_reg_pp0_iter7 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        c0_0_i_reg_157 = select_ln795_reg_724.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        c0_0_i_reg_157 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        c1_0_i_reg_179 = select_ln796_2_reg_729.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        c1_0_i_reg_179 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_fu_277_p2.read()))) {
        c3_0_i_reg_201 = select_ln799_3_fu_535_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        c3_0_i_reg_201 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_fu_277_p2.read()))) {
        c4_0_i_reg_223 = select_ln801_fu_591_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        c4_0_i_reg_223 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_fu_277_p2.read()))) {
        c5_0_i_reg_234 = c5_fu_652_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        c5_0_i_reg_234 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_fu_277_p2.read()))) {
        indvar_flatten17_i_reg_190 = select_ln799_4_fu_678_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        indvar_flatten17_i_reg_190 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_fu_277_p2.read()))) {
        indvar_flatten47_i_reg_168 = select_ln796_3_fu_692_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        indvar_flatten47_i_reg_168 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_fu_277_p2.read()))) {
        indvar_flatten85_i_reg_146 = add_ln795_fu_283_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        indvar_flatten85_i_reg_146 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_fu_277_p2.read()))) {
        indvar_flatten_i_reg_212 = select_ln801_1_fu_664_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        indvar_flatten_i_reg_212 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_fu_277_p2.read()))) {
        add_ln321_reg_744 = add_ln321_fu_647_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln795_reg_715 = icmp_ln795_fu_277_p2.read();
        icmp_ln795_reg_715_pp0_iter1_reg = icmp_ln795_reg_715.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln795_reg_715_pp0_iter2_reg = icmp_ln795_reg_715_pp0_iter1_reg.read();
        icmp_ln795_reg_715_pp0_iter3_reg = icmp_ln795_reg_715_pp0_iter2_reg.read();
        icmp_ln795_reg_715_pp0_iter4_reg = icmp_ln795_reg_715_pp0_iter3_reg.read();
        icmp_ln795_reg_715_pp0_iter5_reg = icmp_ln795_reg_715_pp0_iter4_reg.read();
        icmp_ln795_reg_715_pp0_iter6_reg = icmp_ln795_reg_715_pp0_iter5_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_fu_277_p2.read()))) {
        select_ln795_reg_724 = select_ln795_fu_381_p3.read();
        select_ln796_2_reg_729 = select_ln796_2_fu_465_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_V_reg_769 = fifo_C_drain_local_in_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        zext_ln795_reg_710 = zext_ln795_fu_255_p1.read();
    }
}

void C_drain_IO_L3_out::thread_C_V_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()))) {
        C_V_blk_n_AW = m_axi_C_V_AWREADY.read();
    } else {
        C_V_blk_n_AW = ap_const_logic_1;
    }
}

void C_drain_IO_L3_out::thread_C_V_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715_pp0_iter6_reg.read()))) {
        C_V_blk_n_B = m_axi_C_V_BVALID.read();
    } else {
        C_V_blk_n_B = ap_const_logic_1;
    }
}

void C_drain_IO_L3_out::thread_C_V_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715_pp0_iter1_reg.read()))) {
        C_V_blk_n_W = m_axi_C_V_WREADY.read();
    } else {
        C_V_blk_n_W = ap_const_logic_1;
    }
}

void C_drain_IO_L3_out::thread_C_V_offset_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_V_offset_blk_n = C_V_offset_empty_n.read();
    } else {
        C_V_offset_blk_n = ap_const_logic_1;
    }
}

void C_drain_IO_L3_out::thread_C_V_offset_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        C_V_offset_read = ap_const_logic_1;
    } else {
        C_V_offset_read = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out::thread_add_ln321_fu_647_p2() {
    add_ln321_fu_647_p2 = (!zext_ln321_fu_643_p1.read().is_01() || !zext_ln795_reg_710.read().is_01())? sc_lv<30>(): (sc_biguint<30>(zext_ln321_fu_643_p1.read()) + sc_biguint<30>(zext_ln795_reg_710.read()));
}

void C_drain_IO_L3_out::thread_add_ln795_1_fu_289_p2() {
    add_ln795_1_fu_289_p2 = (!ap_const_lv2_1.is_01() || !ap_phi_mux_c0_0_i_phi_fu_161_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(ap_phi_mux_c0_0_i_phi_fu_161_p4.read()));
}

void C_drain_IO_L3_out::thread_add_ln795_fu_283_p2() {
    add_ln795_fu_283_p2 = (!ap_const_lv6_1.is_01() || !indvar_flatten85_i_reg_146.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(indvar_flatten85_i_reg_146.read()));
}

void C_drain_IO_L3_out::thread_add_ln796_1_fu_686_p2() {
    add_ln796_1_fu_686_p2 = (!ap_const_lv6_1.is_01() || !indvar_flatten47_i_reg_168.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(indvar_flatten47_i_reg_168.read()));
}

void C_drain_IO_L3_out::thread_add_ln796_fu_389_p2() {
    add_ln796_fu_389_p2 = (!ap_const_lv2_1.is_01() || !select_ln796_fu_301_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln796_fu_301_p3.read()));
}

void C_drain_IO_L3_out::thread_add_ln799_1_fu_672_p2() {
    add_ln799_1_fu_672_p2 = (!ap_const_lv5_1.is_01() || !indvar_flatten17_i_reg_190.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(indvar_flatten17_i_reg_190.read()));
}

void C_drain_IO_L3_out::thread_add_ln799_fu_473_p2() {
    add_ln799_fu_473_p2 = (!ap_const_lv2_1.is_01() || !select_ln799_fu_401_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln799_fu_401_p3.read()));
}

void C_drain_IO_L3_out::thread_add_ln801_1_fu_658_p2() {
    add_ln801_1_fu_658_p2 = (!ap_const_lv4_1.is_01() || !indvar_flatten_i_reg_212.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(indvar_flatten_i_reg_212.read()));
}

void C_drain_IO_L3_out::thread_add_ln801_fu_543_p2() {
    add_ln801_fu_543_p2 = (!ap_const_lv2_1.is_01() || !select_ln808_fu_491_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln808_fu_491_p3.read()));
}

void C_drain_IO_L3_out::thread_add_ln808_fu_603_p2() {
    add_ln808_fu_603_p2 = (!zext_ln808_fu_599_p1.read().is_01() || !select_ln808_4_fu_583_p3.read().is_01())? sc_lv<3>(): (sc_biguint<3>(zext_ln808_fu_599_p1.read()) + sc_biguint<3>(select_ln808_4_fu_583_p3.read()));
}

void C_drain_IO_L3_out::thread_and_ln796_1_fu_351_p2() {
    and_ln796_1_fu_351_p2 = (icmp_ln803_fu_345_p2.read() & xor_ln796_fu_309_p2.read());
}

void C_drain_IO_L3_out::thread_and_ln796_2_fu_363_p2() {
    and_ln796_2_fu_363_p2 = (icmp_ln801_fu_357_p2.read() & xor_ln796_fu_309_p2.read());
}

void C_drain_IO_L3_out::thread_and_ln796_3_fu_375_p2() {
    and_ln796_3_fu_375_p2 = (icmp_ln799_fu_369_p2.read() & xor_ln796_fu_309_p2.read());
}

void C_drain_IO_L3_out::thread_and_ln796_fu_319_p2() {
    and_ln796_fu_319_p2 = (trunc_ln808_2_fu_315_p1.read() & xor_ln796_fu_309_p2.read());
}

void C_drain_IO_L3_out::thread_and_ln799_1_fu_459_p2() {
    and_ln799_1_fu_459_p2 = (and_ln796_2_fu_363_p2.read() & or_ln799_1_fu_447_p2.read());
}

void C_drain_IO_L3_out::thread_and_ln799_2_fu_619_p2() {
    and_ln799_2_fu_619_p2 = (trunc_ln808_9_fu_615_p1.read() & xor_ln799_1_fu_609_p2.read());
}

void C_drain_IO_L3_out::thread_and_ln799_fu_453_p2() {
    and_ln799_fu_453_p2 = (and_ln796_1_fu_351_p2.read() & or_ln799_1_fu_447_p2.read());
}

void C_drain_IO_L3_out::thread_and_ln808_fu_529_p2() {
    and_ln808_fu_529_p2 = (and_ln799_fu_453_p2.read() & xor_ln808_fu_523_p2.read());
}

void C_drain_IO_L3_out::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void C_drain_IO_L3_out::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void C_drain_IO_L3_out::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[2];
}

void C_drain_IO_L3_out::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715_pp0_iter6_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_C_V_BVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read())));
}

void C_drain_IO_L3_out::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715_pp0_iter6_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_C_V_BVALID.read())));
}

void C_drain_IO_L3_out::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715_pp0_iter6_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_C_V_BVALID.read())));
}

void C_drain_IO_L3_out::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read()));
}

void C_drain_IO_L3_out::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_C_V_AWREADY.read()));
}

void C_drain_IO_L3_out::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_C_V_WREADY.read()));
}

void C_drain_IO_L3_out::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715_pp0_iter6_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_C_V_BVALID.read()));
}

void C_drain_IO_L3_out::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln795_fu_277_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void C_drain_IO_L3_out::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void C_drain_IO_L3_out::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out::thread_ap_phi_mux_c0_0_i_phi_fu_161_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()))) {
        ap_phi_mux_c0_0_i_phi_fu_161_p4 = select_ln795_reg_724.read();
    } else {
        ap_phi_mux_c0_0_i_phi_fu_161_p4 = c0_0_i_reg_157.read();
    }
}

void C_drain_IO_L3_out::thread_ap_phi_mux_c1_0_i_phi_fu_183_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()))) {
        ap_phi_mux_c1_0_i_phi_fu_183_p4 = select_ln796_2_reg_729.read();
    } else {
        ap_phi_mux_c1_0_i_phi_fu_183_p4 = c1_0_i_reg_179.read();
    }
}

void C_drain_IO_L3_out::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out::thread_c5_fu_652_p2() {
    c5_fu_652_p2 = (!ap_const_lv2_1.is_01() || !select_ln808_3_fu_561_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln808_3_fu_561_p3.read()));
}

void C_drain_IO_L3_out::thread_fifo_C_drain_local_in_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()))) {
        fifo_C_drain_local_in_V_V_blk_n = fifo_C_drain_local_in_V_V_empty_n.read();
    } else {
        fifo_C_drain_local_in_V_V_blk_n = ap_const_logic_1;
    }
}

void C_drain_IO_L3_out::thread_fifo_C_drain_local_in_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_C_drain_local_in_V_V_read = ap_const_logic_1;
    } else {
        fifo_C_drain_local_in_V_V_read = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out::thread_icmp_ln795_fu_277_p2() {
    icmp_ln795_fu_277_p2 = (!indvar_flatten85_i_reg_146.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten85_i_reg_146.read() == ap_const_lv6_20);
}

void C_drain_IO_L3_out::thread_icmp_ln796_fu_295_p2() {
    icmp_ln796_fu_295_p2 = (!indvar_flatten47_i_reg_168.read().is_01() || !ap_const_lv6_10.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten47_i_reg_168.read() == ap_const_lv6_10);
}

void C_drain_IO_L3_out::thread_icmp_ln799_fu_369_p2() {
    icmp_ln799_fu_369_p2 = (!indvar_flatten17_i_reg_190.read().is_01() || !ap_const_lv5_8.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten17_i_reg_190.read() == ap_const_lv5_8);
}

void C_drain_IO_L3_out::thread_icmp_ln801_fu_357_p2() {
    icmp_ln801_fu_357_p2 = (!indvar_flatten_i_reg_212.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_i_reg_212.read() == ap_const_lv4_4);
}

void C_drain_IO_L3_out::thread_icmp_ln803_fu_345_p2() {
    icmp_ln803_fu_345_p2 = (!c5_0_i_reg_234.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(c5_0_i_reg_234.read() == ap_const_lv2_2);
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARADDR() {
    m_axi_C_V_ARADDR = ap_const_lv32_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARBURST() {
    m_axi_C_V_ARBURST = ap_const_lv2_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARCACHE() {
    m_axi_C_V_ARCACHE = ap_const_lv4_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARID() {
    m_axi_C_V_ARID = ap_const_lv1_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARLEN() {
    m_axi_C_V_ARLEN = ap_const_lv32_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARLOCK() {
    m_axi_C_V_ARLOCK = ap_const_lv2_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARPROT() {
    m_axi_C_V_ARPROT = ap_const_lv3_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARQOS() {
    m_axi_C_V_ARQOS = ap_const_lv4_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARREGION() {
    m_axi_C_V_ARREGION = ap_const_lv4_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARSIZE() {
    m_axi_C_V_ARSIZE = ap_const_lv3_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARUSER() {
    m_axi_C_V_ARUSER = ap_const_lv1_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_ARVALID() {
    m_axi_C_V_ARVALID = ap_const_logic_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWADDR() {
    m_axi_C_V_AWADDR =  (sc_lv<32>) (zext_ln321_1_fu_700_p1.read());
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWBURST() {
    m_axi_C_V_AWBURST = ap_const_lv2_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWCACHE() {
    m_axi_C_V_AWCACHE = ap_const_lv4_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWID() {
    m_axi_C_V_AWID = ap_const_lv1_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWLEN() {
    m_axi_C_V_AWLEN = ap_const_lv32_1;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWLOCK() {
    m_axi_C_V_AWLOCK = ap_const_lv2_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWPROT() {
    m_axi_C_V_AWPROT = ap_const_lv3_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWQOS() {
    m_axi_C_V_AWQOS = ap_const_lv4_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWREGION() {
    m_axi_C_V_AWREGION = ap_const_lv4_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWSIZE() {
    m_axi_C_V_AWSIZE = ap_const_lv3_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWUSER() {
    m_axi_C_V_AWUSER = ap_const_lv1_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_C_V_AWVALID = ap_const_logic_1;
    } else {
        m_axi_C_V_AWVALID = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out::thread_m_axi_C_V_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715_pp0_iter6_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_C_V_BREADY = ap_const_logic_1;
    } else {
        m_axi_C_V_BREADY = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out::thread_m_axi_C_V_RREADY() {
    m_axi_C_V_RREADY = ap_const_logic_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_WDATA() {
    m_axi_C_V_WDATA = tmp_V_reg_769.read();
}

void C_drain_IO_L3_out::thread_m_axi_C_V_WID() {
    m_axi_C_V_WID = ap_const_lv1_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_WLAST() {
    m_axi_C_V_WLAST = ap_const_logic_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_WSTRB() {
    m_axi_C_V_WSTRB = ap_const_lv8_FF;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_WUSER() {
    m_axi_C_V_WUSER = ap_const_lv1_0;
}

void C_drain_IO_L3_out::thread_m_axi_C_V_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln795_reg_715_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_C_V_WVALID = ap_const_logic_1;
    } else {
        m_axi_C_V_WVALID = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out::thread_or_ln799_1_fu_447_p2() {
    or_ln799_1_fu_447_p2 = (icmp_ln796_fu_295_p2.read() | xor_ln799_fu_441_p2.read());
}

void C_drain_IO_L3_out::thread_or_ln799_fu_395_p2() {
    or_ln799_fu_395_p2 = (and_ln796_3_fu_375_p2.read() | icmp_ln796_fu_295_p2.read());
}

void C_drain_IO_L3_out::thread_or_ln808_1_fu_485_p2() {
    or_ln808_1_fu_485_p2 = (or_ln808_fu_479_p2.read() | icmp_ln796_fu_295_p2.read());
}

void C_drain_IO_L3_out::thread_or_ln808_1_i_fu_267_p4() {
    or_ln808_1_i_fu_267_p4 = esl_concat<2,1>(esl_concat<1,1>(trunc_ln808_1_fu_263_p1.read(), trunc_ln808_fu_259_p1.read()), ap_const_lv1_0);
}

void C_drain_IO_L3_out::thread_or_ln808_1_mid1_i_fu_573_p4() {
    or_ln808_1_mid1_i_fu_573_p4 = esl_concat<2,1>(esl_concat<1,1>(trunc_ln808_5_fu_421_p1.read(), trunc_ln808_8_fu_569_p1.read()), ap_const_lv1_0);
}

void C_drain_IO_L3_out::thread_or_ln808_1_mid3_i_fu_425_p3() {
    or_ln808_1_mid3_i_fu_425_p3 = esl_concat<1,2>(trunc_ln808_5_fu_421_p1.read(), ap_const_lv2_0);
}

void C_drain_IO_L3_out::thread_or_ln808_1_mid_i_fu_329_p3() {
    or_ln808_1_mid_i_fu_329_p3 = esl_concat<1,2>(trunc_ln808_3_fu_325_p1.read(), ap_const_lv2_0);
}

void C_drain_IO_L3_out::thread_or_ln808_2_fu_549_p2() {
    or_ln808_2_fu_549_p2 = (and_ln808_fu_529_p2.read() | and_ln799_1_fu_459_p2.read());
}

void C_drain_IO_L3_out::thread_or_ln808_3_fu_555_p2() {
    or_ln808_3_fu_555_p2 = (or_ln808_2_fu_549_p2.read() | or_ln799_fu_395_p2.read());
}

void C_drain_IO_L3_out::thread_or_ln808_fu_479_p2() {
    or_ln808_fu_479_p2 = (and_ln799_1_fu_459_p2.read() | and_ln796_3_fu_375_p2.read());
}

void C_drain_IO_L3_out::thread_select_ln795_fu_381_p3() {
    select_ln795_fu_381_p3 = (!icmp_ln796_fu_295_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln796_fu_295_p2.read()[0].to_bool())? add_ln795_1_fu_289_p2.read(): ap_phi_mux_c0_0_i_phi_fu_161_p4.read());
}

void C_drain_IO_L3_out::thread_select_ln796_1_fu_337_p3() {
    select_ln796_1_fu_337_p3 = (!icmp_ln796_fu_295_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln796_fu_295_p2.read()[0].to_bool())? or_ln808_1_mid_i_fu_329_p3.read(): or_ln808_1_i_fu_267_p4.read());
}

void C_drain_IO_L3_out::thread_select_ln796_2_fu_465_p3() {
    select_ln796_2_fu_465_p3 = (!and_ln796_3_fu_375_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln796_3_fu_375_p2.read()[0].to_bool())? add_ln796_fu_389_p2.read(): select_ln796_fu_301_p3.read());
}

void C_drain_IO_L3_out::thread_select_ln796_3_fu_692_p3() {
    select_ln796_3_fu_692_p3 = (!icmp_ln796_fu_295_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln796_fu_295_p2.read()[0].to_bool())? ap_const_lv6_1: add_ln796_1_fu_686_p2.read());
}

void C_drain_IO_L3_out::thread_select_ln796_fu_301_p3() {
    select_ln796_fu_301_p3 = (!icmp_ln796_fu_295_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln796_fu_295_p2.read()[0].to_bool())? ap_const_lv2_0: ap_phi_mux_c1_0_i_phi_fu_183_p4.read());
}

void C_drain_IO_L3_out::thread_select_ln799_1_fu_413_p3() {
    select_ln799_1_fu_413_p3 = (!and_ln796_3_fu_375_p2.read()[0].is_01())? sc_lv<1>(): ((and_ln796_3_fu_375_p2.read()[0].to_bool())? trunc_ln808_4_fu_409_p1.read(): and_ln796_fu_319_p2.read());
}

void C_drain_IO_L3_out::thread_select_ln799_2_fu_433_p3() {
    select_ln799_2_fu_433_p3 = (!and_ln796_3_fu_375_p2.read()[0].is_01())? sc_lv<3>(): ((and_ln796_3_fu_375_p2.read()[0].to_bool())? or_ln808_1_mid3_i_fu_425_p3.read(): select_ln796_1_fu_337_p3.read());
}

void C_drain_IO_L3_out::thread_select_ln799_3_fu_535_p3() {
    select_ln799_3_fu_535_p3 = (!and_ln799_1_fu_459_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln799_1_fu_459_p2.read()[0].to_bool())? add_ln799_fu_473_p2.read(): select_ln799_fu_401_p3.read());
}

void C_drain_IO_L3_out::thread_select_ln799_4_fu_678_p3() {
    select_ln799_4_fu_678_p3 = (!or_ln799_fu_395_p2.read()[0].is_01())? sc_lv<5>(): ((or_ln799_fu_395_p2.read()[0].to_bool())? ap_const_lv5_1: add_ln799_1_fu_672_p2.read());
}

void C_drain_IO_L3_out::thread_select_ln799_fu_401_p3() {
    select_ln799_fu_401_p3 = (!or_ln799_fu_395_p2.read()[0].is_01())? sc_lv<2>(): ((or_ln799_fu_395_p2.read()[0].to_bool())? ap_const_lv2_0: c3_0_i_reg_201.read());
}

void C_drain_IO_L3_out::thread_select_ln801_1_fu_664_p3() {
    select_ln801_1_fu_664_p3 = (!or_ln808_1_fu_485_p2.read()[0].is_01())? sc_lv<4>(): ((or_ln808_1_fu_485_p2.read()[0].to_bool())? ap_const_lv4_1: add_ln801_1_fu_658_p2.read());
}

void C_drain_IO_L3_out::thread_select_ln801_fu_591_p3() {
    select_ln801_fu_591_p3 = (!and_ln808_fu_529_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln808_fu_529_p2.read()[0].to_bool())? add_ln801_fu_543_p2.read(): select_ln808_fu_491_p3.read());
}

void C_drain_IO_L3_out::thread_select_ln808_1_fu_507_p3() {
    select_ln808_1_fu_507_p3 = (!and_ln799_1_fu_459_p2.read()[0].is_01())? sc_lv<1>(): ((and_ln799_1_fu_459_p2.read()[0].to_bool())? trunc_ln808_7_fu_503_p1.read(): select_ln799_1_fu_413_p3.read());
}

void C_drain_IO_L3_out::thread_select_ln808_2_fu_515_p3() {
    select_ln808_2_fu_515_p3 = (!and_ln799_1_fu_459_p2.read()[0].is_01())? sc_lv<3>(): ((and_ln799_1_fu_459_p2.read()[0].to_bool())? or_ln808_1_mid3_i_fu_425_p3.read(): select_ln799_2_fu_433_p3.read());
}

void C_drain_IO_L3_out::thread_select_ln808_3_fu_561_p3() {
    select_ln808_3_fu_561_p3 = (!or_ln808_3_fu_555_p2.read()[0].is_01())? sc_lv<2>(): ((or_ln808_3_fu_555_p2.read()[0].to_bool())? ap_const_lv2_0: c5_0_i_reg_234.read());
}

void C_drain_IO_L3_out::thread_select_ln808_4_fu_583_p3() {
    select_ln808_4_fu_583_p3 = (!and_ln808_fu_529_p2.read()[0].is_01())? sc_lv<3>(): ((and_ln808_fu_529_p2.read()[0].to_bool())? or_ln808_1_mid1_i_fu_573_p4.read(): select_ln808_2_fu_515_p3.read());
}

void C_drain_IO_L3_out::thread_select_ln808_5_fu_625_p3() {
    select_ln808_5_fu_625_p3 = (!and_ln799_1_fu_459_p2.read()[0].is_01())? sc_lv<1>(): ((and_ln799_1_fu_459_p2.read()[0].to_bool())? trunc_ln808_6_fu_499_p1.read(): and_ln799_2_fu_619_p2.read());
}

void C_drain_IO_L3_out::thread_select_ln808_fu_491_p3() {
    select_ln808_fu_491_p3 = (!or_ln808_1_fu_485_p2.read()[0].is_01())? sc_lv<2>(): ((or_ln808_1_fu_485_p2.read()[0].to_bool())? ap_const_lv2_0: c4_0_i_reg_223.read());
}

void C_drain_IO_L3_out::thread_tmp_fu_245_p4() {
    tmp_fu_245_p4 = C_V_offset_dout.read().range(31, 3);
}

void C_drain_IO_L3_out::thread_trunc_ln808_1_fu_263_p1() {
    trunc_ln808_1_fu_263_p1 = ap_phi_mux_c0_0_i_phi_fu_161_p4.read().range(1-1, 0);
}

void C_drain_IO_L3_out::thread_trunc_ln808_2_fu_315_p1() {
    trunc_ln808_2_fu_315_p1 = ap_phi_mux_c1_0_i_phi_fu_183_p4.read().range(1-1, 0);
}

void C_drain_IO_L3_out::thread_trunc_ln808_3_fu_325_p1() {
    trunc_ln808_3_fu_325_p1 = add_ln795_1_fu_289_p2.read().range(1-1, 0);
}

void C_drain_IO_L3_out::thread_trunc_ln808_4_fu_409_p1() {
    trunc_ln808_4_fu_409_p1 = add_ln796_fu_389_p2.read().range(1-1, 0);
}

void C_drain_IO_L3_out::thread_trunc_ln808_5_fu_421_p1() {
    trunc_ln808_5_fu_421_p1 = select_ln795_fu_381_p3.read().range(1-1, 0);
}

void C_drain_IO_L3_out::thread_trunc_ln808_6_fu_499_p1() {
    trunc_ln808_6_fu_499_p1 = add_ln799_fu_473_p2.read().range(1-1, 0);
}

void C_drain_IO_L3_out::thread_trunc_ln808_7_fu_503_p1() {
    trunc_ln808_7_fu_503_p1 = select_ln796_2_fu_465_p3.read().range(1-1, 0);
}

void C_drain_IO_L3_out::thread_trunc_ln808_8_fu_569_p1() {
    trunc_ln808_8_fu_569_p1 = add_ln801_fu_543_p2.read().range(1-1, 0);
}

void C_drain_IO_L3_out::thread_trunc_ln808_9_fu_615_p1() {
    trunc_ln808_9_fu_615_p1 = c3_0_i_reg_201.read().range(1-1, 0);
}

void C_drain_IO_L3_out::thread_trunc_ln808_fu_259_p1() {
    trunc_ln808_fu_259_p1 = c4_0_i_reg_223.read().range(1-1, 0);
}

void C_drain_IO_L3_out::thread_trunc_ln_i_fu_633_p4() {
    trunc_ln_i_fu_633_p4 = esl_concat<4,1>(esl_concat<3,1>(add_ln808_fu_603_p2.read(), select_ln808_1_fu_507_p3.read()), select_ln808_5_fu_625_p3.read());
}

void C_drain_IO_L3_out::thread_xor_ln796_fu_309_p2() {
    xor_ln796_fu_309_p2 = (icmp_ln796_fu_295_p2.read() ^ ap_const_lv1_1);
}

void C_drain_IO_L3_out::thread_xor_ln799_1_fu_609_p2() {
    xor_ln799_1_fu_609_p2 = (or_ln799_fu_395_p2.read() ^ ap_const_lv1_1);
}

void C_drain_IO_L3_out::thread_xor_ln799_fu_441_p2() {
    xor_ln799_fu_441_p2 = (icmp_ln799_fu_369_p2.read() ^ ap_const_lv1_1);
}

void C_drain_IO_L3_out::thread_xor_ln808_fu_523_p2() {
    xor_ln808_fu_523_p2 = (and_ln799_1_fu_459_p2.read() ^ ap_const_lv1_1);
}

void C_drain_IO_L3_out::thread_zext_ln321_1_fu_700_p1() {
    zext_ln321_1_fu_700_p1 = esl_zext<64,30>(add_ln321_reg_744.read());
}

void C_drain_IO_L3_out::thread_zext_ln321_fu_643_p1() {
    zext_ln321_fu_643_p1 = esl_zext<30,5>(trunc_ln_i_fu_633_p4.read());
}

void C_drain_IO_L3_out::thread_zext_ln795_fu_255_p1() {
    zext_ln795_fu_255_p1 = esl_zext<30,29>(tmp_fu_245_p4.read());
}

void C_drain_IO_L3_out::thread_zext_ln808_fu_599_p1() {
    zext_ln808_fu_599_p1 = esl_zext<3,2>(select_ln808_3_fu_561_p3.read());
}

void C_drain_IO_L3_out::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter6.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln795_fu_277_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter6.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln795_fu_277_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

