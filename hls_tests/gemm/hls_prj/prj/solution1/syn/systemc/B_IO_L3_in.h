// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _B_IO_L3_in_HH_
#define _B_IO_L3_in_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct B_IO_L3_in : public sc_module {
    // Port declarations 61
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_logic > m_axi_B_V_AWVALID;
    sc_in< sc_logic > m_axi_B_V_AWREADY;
    sc_out< sc_lv<32> > m_axi_B_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_B_V_AWID;
    sc_out< sc_lv<32> > m_axi_B_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_B_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_B_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_B_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_B_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_B_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_B_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_B_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_B_V_AWUSER;
    sc_out< sc_logic > m_axi_B_V_WVALID;
    sc_in< sc_logic > m_axi_B_V_WREADY;
    sc_out< sc_lv<128> > m_axi_B_V_WDATA;
    sc_out< sc_lv<16> > m_axi_B_V_WSTRB;
    sc_out< sc_logic > m_axi_B_V_WLAST;
    sc_out< sc_lv<1> > m_axi_B_V_WID;
    sc_out< sc_lv<1> > m_axi_B_V_WUSER;
    sc_out< sc_logic > m_axi_B_V_ARVALID;
    sc_in< sc_logic > m_axi_B_V_ARREADY;
    sc_out< sc_lv<32> > m_axi_B_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_B_V_ARID;
    sc_out< sc_lv<32> > m_axi_B_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_B_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_B_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_B_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_B_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_B_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_B_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_B_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_B_V_ARUSER;
    sc_in< sc_logic > m_axi_B_V_RVALID;
    sc_out< sc_logic > m_axi_B_V_RREADY;
    sc_in< sc_lv<128> > m_axi_B_V_RDATA;
    sc_in< sc_logic > m_axi_B_V_RLAST;
    sc_in< sc_lv<1> > m_axi_B_V_RID;
    sc_in< sc_lv<1> > m_axi_B_V_RUSER;
    sc_in< sc_lv<2> > m_axi_B_V_RRESP;
    sc_in< sc_logic > m_axi_B_V_BVALID;
    sc_out< sc_logic > m_axi_B_V_BREADY;
    sc_in< sc_lv<2> > m_axi_B_V_BRESP;
    sc_in< sc_lv<1> > m_axi_B_V_BID;
    sc_in< sc_lv<1> > m_axi_B_V_BUSER;
    sc_in< sc_lv<32> > B_V_offset_dout;
    sc_in< sc_logic > B_V_offset_empty_n;
    sc_out< sc_logic > B_V_offset_read;
    sc_out< sc_lv<128> > fifo_B_local_out_V_V_din;
    sc_in< sc_logic > fifo_B_local_out_V_V_full_n;
    sc_out< sc_logic > fifo_B_local_out_V_V_write;


    // Module declarations
    B_IO_L3_in(sc_module_name name);
    SC_HAS_PROCESS(B_IO_L3_in);

    ~B_IO_L3_in();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > B_V_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln219_reg_647;
    sc_signal< sc_logic > B_V_blk_n_R;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_lv<1> > icmp_ln219_reg_647_pp0_iter7_reg;
    sc_signal< sc_logic > B_V_offset_blk_n;
    sc_signal< sc_logic > fifo_B_local_out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_lv<1> > icmp_ln219_reg_647_pp0_iter8_reg;
    sc_signal< sc_lv<6> > indvar_flatten85_i_reg_139;
    sc_signal< sc_lv<6> > indvar_flatten47_i_reg_150;
    sc_signal< sc_lv<2> > c1_0_i_reg_161;
    sc_signal< sc_lv<5> > indvar_flatten17_i_reg_172;
    sc_signal< sc_lv<2> > c2_0_i_reg_183;
    sc_signal< sc_lv<4> > indvar_flatten_i_reg_194;
    sc_signal< sc_lv<2> > c3_0_i_reg_205;
    sc_signal< sc_lv<2> > c4_0_i_reg_216;
    sc_signal< sc_lv<29> > zext_ln219_fu_237_p1;
    sc_signal< sc_lv<29> > zext_ln219_reg_642;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln219_fu_259_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln219_reg_647_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln219_reg_647_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln219_reg_647_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln219_reg_647_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln219_reg_647_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln219_reg_647_pp0_iter6_reg;
    sc_signal< sc_lv<6> > add_ln219_fu_265_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > select_ln220_2_fu_399_p3;
    sc_signal< sc_lv<2> > select_ln220_2_reg_656;
    sc_signal< sc_lv<2> > select_ln221_2_fu_469_p3;
    sc_signal< sc_lv<2> > select_ln224_2_fu_525_p3;
    sc_signal< sc_lv<29> > add_ln321_fu_579_p2;
    sc_signal< sc_lv<29> > add_ln321_reg_671;
    sc_signal< sc_lv<2> > c4_fu_584_p2;
    sc_signal< sc_lv<4> > select_ln224_4_fu_596_p3;
    sc_signal< sc_lv<5> > select_ln221_3_fu_610_p3;
    sc_signal< sc_lv<6> > select_ln220_3_fu_624_p3;
    sc_signal< sc_lv<128> > fifo_data_V_reg_702;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_lv<2> > ap_phi_mux_c1_0_i_phi_fu_165_p4;
    sc_signal< sc_lv<64> > zext_ln321_2_fu_632_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<28> > tmp_fu_227_p4;
    sc_signal< sc_lv<1> > trunc_ln230_1_fu_245_p1;
    sc_signal< sc_lv<1> > trunc_ln230_fu_241_p1;
    sc_signal< sc_lv<1> > icmp_ln220_fu_271_p2;
    sc_signal< sc_lv<3> > or_ln_i_fu_249_p4;
    sc_signal< sc_lv<1> > icmp_ln226_fu_299_p2;
    sc_signal< sc_lv<1> > xor_ln220_fu_293_p2;
    sc_signal< sc_lv<1> > icmp_ln224_fu_311_p2;
    sc_signal< sc_lv<1> > icmp_ln221_fu_323_p2;
    sc_signal< sc_lv<2> > select_ln220_fu_277_p3;
    sc_signal< sc_lv<1> > and_ln220_2_fu_329_p2;
    sc_signal< sc_lv<1> > or_ln221_fu_341_p2;
    sc_signal< sc_lv<2> > add_ln220_fu_335_p2;
    sc_signal< sc_lv<1> > trunc_ln230_2_fu_355_p1;
    sc_signal< sc_lv<3> > or_ln_mid_i_fu_359_p3;
    sc_signal< sc_lv<3> > select_ln220_1_fu_285_p3;
    sc_signal< sc_lv<1> > xor_ln221_fu_375_p2;
    sc_signal< sc_lv<1> > and_ln220_fu_305_p2;
    sc_signal< sc_lv<1> > or_ln221_1_fu_381_p2;
    sc_signal< sc_lv<1> > and_ln220_1_fu_317_p2;
    sc_signal< sc_lv<2> > select_ln221_fu_347_p3;
    sc_signal< sc_lv<1> > and_ln221_1_fu_393_p2;
    sc_signal< sc_lv<1> > or_ln224_fu_413_p2;
    sc_signal< sc_lv<1> > or_ln224_1_fu_419_p2;
    sc_signal< sc_lv<2> > add_ln221_fu_407_p2;
    sc_signal< sc_lv<1> > trunc_ln230_4_fu_437_p1;
    sc_signal< sc_lv<3> > or_ln_mid3_i_fu_441_p3;
    sc_signal< sc_lv<3> > select_ln221_1_fu_367_p3;
    sc_signal< sc_lv<1> > and_ln221_fu_387_p2;
    sc_signal< sc_lv<1> > xor_ln224_fu_457_p2;
    sc_signal< sc_lv<2> > select_ln224_fu_425_p3;
    sc_signal< sc_lv<1> > and_ln224_fu_463_p2;
    sc_signal< sc_lv<1> > or_ln230_fu_483_p2;
    sc_signal< sc_lv<1> > or_ln230_1_fu_489_p2;
    sc_signal< sc_lv<2> > add_ln224_fu_477_p2;
    sc_signal< sc_lv<1> > trunc_ln230_5_fu_503_p1;
    sc_signal< sc_lv<3> > or_ln_mid1_i_fu_507_p4;
    sc_signal< sc_lv<3> > select_ln224_1_fu_449_p3;
    sc_signal< sc_lv<2> > select_ln230_fu_495_p3;
    sc_signal< sc_lv<3> > select_ln230_1_fu_517_p3;
    sc_signal< sc_lv<3> > zext_ln230_fu_533_p1;
    sc_signal< sc_lv<1> > trunc_ln230_6_fu_549_p1;
    sc_signal< sc_lv<1> > xor_ln221_1_fu_543_p2;
    sc_signal< sc_lv<1> > trunc_ln230_3_fu_433_p1;
    sc_signal< sc_lv<1> > and_ln221_2_fu_553_p2;
    sc_signal< sc_lv<3> > add_ln230_fu_537_p2;
    sc_signal< sc_lv<1> > select_ln224_3_fu_559_p3;
    sc_signal< sc_lv<4> > trunc_ln_i_fu_567_p3;
    sc_signal< sc_lv<29> > zext_ln321_fu_575_p1;
    sc_signal< sc_lv<4> > add_ln224_1_fu_590_p2;
    sc_signal< sc_lv<5> > add_ln221_1_fu_604_p2;
    sc_signal< sc_lv<6> > add_ln220_1_fu_618_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state12;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_10;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_B_V_blk_n_AR();
    void thread_B_V_blk_n_R();
    void thread_B_V_offset_blk_n();
    void thread_B_V_offset_read();
    void thread_add_ln219_fu_265_p2();
    void thread_add_ln220_1_fu_618_p2();
    void thread_add_ln220_fu_335_p2();
    void thread_add_ln221_1_fu_604_p2();
    void thread_add_ln221_fu_407_p2();
    void thread_add_ln224_1_fu_590_p2();
    void thread_add_ln224_fu_477_p2();
    void thread_add_ln230_fu_537_p2();
    void thread_add_ln321_fu_579_p2();
    void thread_and_ln220_1_fu_317_p2();
    void thread_and_ln220_2_fu_329_p2();
    void thread_and_ln220_fu_305_p2();
    void thread_and_ln221_1_fu_393_p2();
    void thread_and_ln221_2_fu_553_p2();
    void thread_and_ln221_fu_387_p2();
    void thread_and_ln224_fu_463_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c1_0_i_phi_fu_165_p4();
    void thread_ap_ready();
    void thread_c4_fu_584_p2();
    void thread_fifo_B_local_out_V_V_blk_n();
    void thread_fifo_B_local_out_V_V_din();
    void thread_fifo_B_local_out_V_V_write();
    void thread_icmp_ln219_fu_259_p2();
    void thread_icmp_ln220_fu_271_p2();
    void thread_icmp_ln221_fu_323_p2();
    void thread_icmp_ln224_fu_311_p2();
    void thread_icmp_ln226_fu_299_p2();
    void thread_internal_ap_ready();
    void thread_m_axi_B_V_ARADDR();
    void thread_m_axi_B_V_ARBURST();
    void thread_m_axi_B_V_ARCACHE();
    void thread_m_axi_B_V_ARID();
    void thread_m_axi_B_V_ARLEN();
    void thread_m_axi_B_V_ARLOCK();
    void thread_m_axi_B_V_ARPROT();
    void thread_m_axi_B_V_ARQOS();
    void thread_m_axi_B_V_ARREGION();
    void thread_m_axi_B_V_ARSIZE();
    void thread_m_axi_B_V_ARUSER();
    void thread_m_axi_B_V_ARVALID();
    void thread_m_axi_B_V_AWADDR();
    void thread_m_axi_B_V_AWBURST();
    void thread_m_axi_B_V_AWCACHE();
    void thread_m_axi_B_V_AWID();
    void thread_m_axi_B_V_AWLEN();
    void thread_m_axi_B_V_AWLOCK();
    void thread_m_axi_B_V_AWPROT();
    void thread_m_axi_B_V_AWQOS();
    void thread_m_axi_B_V_AWREGION();
    void thread_m_axi_B_V_AWSIZE();
    void thread_m_axi_B_V_AWUSER();
    void thread_m_axi_B_V_AWVALID();
    void thread_m_axi_B_V_BREADY();
    void thread_m_axi_B_V_RREADY();
    void thread_m_axi_B_V_WDATA();
    void thread_m_axi_B_V_WID();
    void thread_m_axi_B_V_WLAST();
    void thread_m_axi_B_V_WSTRB();
    void thread_m_axi_B_V_WUSER();
    void thread_m_axi_B_V_WVALID();
    void thread_or_ln221_1_fu_381_p2();
    void thread_or_ln221_fu_341_p2();
    void thread_or_ln224_1_fu_419_p2();
    void thread_or_ln224_fu_413_p2();
    void thread_or_ln230_1_fu_489_p2();
    void thread_or_ln230_fu_483_p2();
    void thread_or_ln_i_fu_249_p4();
    void thread_or_ln_mid1_i_fu_507_p4();
    void thread_or_ln_mid3_i_fu_441_p3();
    void thread_or_ln_mid_i_fu_359_p3();
    void thread_real_start();
    void thread_select_ln220_1_fu_285_p3();
    void thread_select_ln220_2_fu_399_p3();
    void thread_select_ln220_3_fu_624_p3();
    void thread_select_ln220_fu_277_p3();
    void thread_select_ln221_1_fu_367_p3();
    void thread_select_ln221_2_fu_469_p3();
    void thread_select_ln221_3_fu_610_p3();
    void thread_select_ln221_fu_347_p3();
    void thread_select_ln224_1_fu_449_p3();
    void thread_select_ln224_2_fu_525_p3();
    void thread_select_ln224_3_fu_559_p3();
    void thread_select_ln224_4_fu_596_p3();
    void thread_select_ln224_fu_425_p3();
    void thread_select_ln230_1_fu_517_p3();
    void thread_select_ln230_fu_495_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_fu_227_p4();
    void thread_trunc_ln230_1_fu_245_p1();
    void thread_trunc_ln230_2_fu_355_p1();
    void thread_trunc_ln230_3_fu_433_p1();
    void thread_trunc_ln230_4_fu_437_p1();
    void thread_trunc_ln230_5_fu_503_p1();
    void thread_trunc_ln230_6_fu_549_p1();
    void thread_trunc_ln230_fu_241_p1();
    void thread_trunc_ln_i_fu_567_p3();
    void thread_xor_ln220_fu_293_p2();
    void thread_xor_ln221_1_fu_543_p2();
    void thread_xor_ln221_fu_375_p2();
    void thread_xor_ln224_fu_457_p2();
    void thread_zext_ln219_fu_237_p1();
    void thread_zext_ln230_fu_533_p1();
    void thread_zext_ln321_2_fu_632_p1();
    void thread_zext_ln321_fu_575_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
