// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "B_IO_L3_in.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic B_IO_L3_in::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic B_IO_L3_in::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> B_IO_L3_in::ap_ST_fsm_state1 = "1";
const sc_lv<3> B_IO_L3_in::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> B_IO_L3_in::ap_ST_fsm_state12 = "100";
const bool B_IO_L3_in::ap_const_boolean_1 = true;
const sc_lv<32> B_IO_L3_in::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> B_IO_L3_in::ap_const_lv1_0 = "0";
const sc_lv<3> B_IO_L3_in::ap_const_lv3_0 = "000";
const sc_lv<2> B_IO_L3_in::ap_const_lv2_0 = "00";
const sc_lv<4> B_IO_L3_in::ap_const_lv4_0 = "0000";
const sc_lv<128> B_IO_L3_in::ap_const_lv128_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<16> B_IO_L3_in::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> B_IO_L3_in::ap_const_lv32_1 = "1";
const bool B_IO_L3_in::ap_const_boolean_0 = false;
const sc_lv<1> B_IO_L3_in::ap_const_lv1_1 = "1";
const sc_lv<6> B_IO_L3_in::ap_const_lv6_0 = "000000";
const sc_lv<5> B_IO_L3_in::ap_const_lv5_0 = "00000";
const sc_lv<32> B_IO_L3_in::ap_const_lv32_4 = "100";
const sc_lv<32> B_IO_L3_in::ap_const_lv32_1F = "11111";
const sc_lv<6> B_IO_L3_in::ap_const_lv6_20 = "100000";
const sc_lv<6> B_IO_L3_in::ap_const_lv6_1 = "1";
const sc_lv<6> B_IO_L3_in::ap_const_lv6_10 = "10000";
const sc_lv<2> B_IO_L3_in::ap_const_lv2_2 = "10";
const sc_lv<4> B_IO_L3_in::ap_const_lv4_4 = "100";
const sc_lv<5> B_IO_L3_in::ap_const_lv5_8 = "1000";
const sc_lv<2> B_IO_L3_in::ap_const_lv2_1 = "1";
const sc_lv<4> B_IO_L3_in::ap_const_lv4_1 = "1";
const sc_lv<5> B_IO_L3_in::ap_const_lv5_1 = "1";
const sc_lv<32> B_IO_L3_in::ap_const_lv32_2 = "10";

B_IO_L3_in::B_IO_L3_in(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_B_V_blk_n_AR);
    sensitive << ( m_axi_B_V_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln219_reg_647 );

    SC_METHOD(thread_B_V_blk_n_R);
    sensitive << ( m_axi_B_V_RVALID );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter7_reg );

    SC_METHOD(thread_B_V_offset_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( B_V_offset_empty_n );

    SC_METHOD(thread_B_V_offset_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( B_V_offset_empty_n );

    SC_METHOD(thread_add_ln219_fu_265_p2);
    sensitive << ( indvar_flatten85_i_reg_139 );

    SC_METHOD(thread_add_ln220_1_fu_618_p2);
    sensitive << ( indvar_flatten47_i_reg_150 );

    SC_METHOD(thread_add_ln220_fu_335_p2);
    sensitive << ( select_ln220_fu_277_p3 );

    SC_METHOD(thread_add_ln221_1_fu_604_p2);
    sensitive << ( indvar_flatten17_i_reg_172 );

    SC_METHOD(thread_add_ln221_fu_407_p2);
    sensitive << ( select_ln221_fu_347_p3 );

    SC_METHOD(thread_add_ln224_1_fu_590_p2);
    sensitive << ( indvar_flatten_i_reg_194 );

    SC_METHOD(thread_add_ln224_fu_477_p2);
    sensitive << ( select_ln224_fu_425_p3 );

    SC_METHOD(thread_add_ln230_fu_537_p2);
    sensitive << ( select_ln230_1_fu_517_p3 );
    sensitive << ( zext_ln230_fu_533_p1 );

    SC_METHOD(thread_add_ln321_fu_579_p2);
    sensitive << ( zext_ln219_reg_642 );
    sensitive << ( zext_ln321_fu_575_p1 );

    SC_METHOD(thread_and_ln220_1_fu_317_p2);
    sensitive << ( xor_ln220_fu_293_p2 );
    sensitive << ( icmp_ln224_fu_311_p2 );

    SC_METHOD(thread_and_ln220_2_fu_329_p2);
    sensitive << ( xor_ln220_fu_293_p2 );
    sensitive << ( icmp_ln221_fu_323_p2 );

    SC_METHOD(thread_and_ln220_fu_305_p2);
    sensitive << ( icmp_ln226_fu_299_p2 );
    sensitive << ( xor_ln220_fu_293_p2 );

    SC_METHOD(thread_and_ln221_1_fu_393_p2);
    sensitive << ( or_ln221_1_fu_381_p2 );
    sensitive << ( and_ln220_1_fu_317_p2 );

    SC_METHOD(thread_and_ln221_2_fu_553_p2);
    sensitive << ( trunc_ln230_6_fu_549_p1 );
    sensitive << ( xor_ln221_1_fu_543_p2 );

    SC_METHOD(thread_and_ln221_fu_387_p2);
    sensitive << ( and_ln220_fu_305_p2 );
    sensitive << ( or_ln221_1_fu_381_p2 );

    SC_METHOD(thread_and_ln224_fu_463_p2);
    sensitive << ( and_ln221_fu_387_p2 );
    sensitive << ( xor_ln224_fu_457_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( m_axi_B_V_RVALID );
    sensitive << ( fifo_B_local_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter8_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_B_V_RVALID );
    sensitive << ( fifo_B_local_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter8_reg );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_B_V_RVALID );
    sensitive << ( fifo_B_local_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter8_reg );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( B_V_offset_empty_n );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);
    sensitive << ( m_axi_B_V_RVALID );
    sensitive << ( icmp_ln219_reg_647_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);
    sensitive << ( fifo_B_local_out_V_V_full_n );
    sensitive << ( icmp_ln219_reg_647_pp0_iter8_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( m_axi_B_V_ARREADY );
    sensitive << ( icmp_ln219_reg_647 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln219_fu_259_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_phi_mux_c1_0_i_phi_fu_165_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln219_reg_647 );
    sensitive << ( c1_0_i_reg_161 );
    sensitive << ( select_ln220_2_reg_656 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_c4_fu_584_p2);
    sensitive << ( select_ln230_fu_495_p3 );

    SC_METHOD(thread_fifo_B_local_out_V_V_blk_n);
    sensitive << ( fifo_B_local_out_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter8_reg );

    SC_METHOD(thread_fifo_B_local_out_V_V_din);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter8_reg );
    sensitive << ( fifo_data_V_reg_702 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_fifo_B_local_out_V_V_write);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter8_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln219_fu_259_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten85_i_reg_139 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln220_fu_271_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten47_i_reg_150 );
    sensitive << ( icmp_ln219_fu_259_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln221_fu_323_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten17_i_reg_172 );
    sensitive << ( icmp_ln219_fu_259_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln224_fu_311_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_i_reg_194 );
    sensitive << ( icmp_ln219_fu_259_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln226_fu_299_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c4_0_i_reg_216 );
    sensitive << ( icmp_ln219_fu_259_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_m_axi_B_V_ARADDR);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln219_reg_647 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( zext_ln321_2_fu_632_p1 );

    SC_METHOD(thread_m_axi_B_V_ARBURST);

    SC_METHOD(thread_m_axi_B_V_ARCACHE);

    SC_METHOD(thread_m_axi_B_V_ARID);

    SC_METHOD(thread_m_axi_B_V_ARLEN);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln219_reg_647 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_B_V_ARLOCK);

    SC_METHOD(thread_m_axi_B_V_ARPROT);

    SC_METHOD(thread_m_axi_B_V_ARQOS);

    SC_METHOD(thread_m_axi_B_V_ARREGION);

    SC_METHOD(thread_m_axi_B_V_ARSIZE);

    SC_METHOD(thread_m_axi_B_V_ARUSER);

    SC_METHOD(thread_m_axi_B_V_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln219_reg_647 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_B_V_AWADDR);

    SC_METHOD(thread_m_axi_B_V_AWBURST);

    SC_METHOD(thread_m_axi_B_V_AWCACHE);

    SC_METHOD(thread_m_axi_B_V_AWID);

    SC_METHOD(thread_m_axi_B_V_AWLEN);

    SC_METHOD(thread_m_axi_B_V_AWLOCK);

    SC_METHOD(thread_m_axi_B_V_AWPROT);

    SC_METHOD(thread_m_axi_B_V_AWQOS);

    SC_METHOD(thread_m_axi_B_V_AWREGION);

    SC_METHOD(thread_m_axi_B_V_AWSIZE);

    SC_METHOD(thread_m_axi_B_V_AWUSER);

    SC_METHOD(thread_m_axi_B_V_AWVALID);

    SC_METHOD(thread_m_axi_B_V_BREADY);

    SC_METHOD(thread_m_axi_B_V_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln219_reg_647_pp0_iter7_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_B_V_WDATA);

    SC_METHOD(thread_m_axi_B_V_WID);

    SC_METHOD(thread_m_axi_B_V_WLAST);

    SC_METHOD(thread_m_axi_B_V_WSTRB);

    SC_METHOD(thread_m_axi_B_V_WUSER);

    SC_METHOD(thread_m_axi_B_V_WVALID);

    SC_METHOD(thread_or_ln221_1_fu_381_p2);
    sensitive << ( icmp_ln220_fu_271_p2 );
    sensitive << ( xor_ln221_fu_375_p2 );

    SC_METHOD(thread_or_ln221_fu_341_p2);
    sensitive << ( icmp_ln220_fu_271_p2 );
    sensitive << ( and_ln220_2_fu_329_p2 );

    SC_METHOD(thread_or_ln224_1_fu_419_p2);
    sensitive << ( icmp_ln220_fu_271_p2 );
    sensitive << ( or_ln224_fu_413_p2 );

    SC_METHOD(thread_or_ln224_fu_413_p2);
    sensitive << ( and_ln220_2_fu_329_p2 );
    sensitive << ( and_ln221_1_fu_393_p2 );

    SC_METHOD(thread_or_ln230_1_fu_489_p2);
    sensitive << ( or_ln221_fu_341_p2 );
    sensitive << ( or_ln230_fu_483_p2 );

    SC_METHOD(thread_or_ln230_fu_483_p2);
    sensitive << ( and_ln221_1_fu_393_p2 );
    sensitive << ( and_ln224_fu_463_p2 );

    SC_METHOD(thread_or_ln_i_fu_249_p4);
    sensitive << ( trunc_ln230_1_fu_245_p1 );
    sensitive << ( trunc_ln230_fu_241_p1 );

    SC_METHOD(thread_or_ln_mid1_i_fu_507_p4);
    sensitive << ( trunc_ln230_4_fu_437_p1 );
    sensitive << ( trunc_ln230_5_fu_503_p1 );

    SC_METHOD(thread_or_ln_mid3_i_fu_441_p3);
    sensitive << ( trunc_ln230_4_fu_437_p1 );

    SC_METHOD(thread_or_ln_mid_i_fu_359_p3);
    sensitive << ( trunc_ln230_2_fu_355_p1 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_select_ln220_1_fu_285_p3);
    sensitive << ( icmp_ln220_fu_271_p2 );
    sensitive << ( or_ln_i_fu_249_p4 );

    SC_METHOD(thread_select_ln220_2_fu_399_p3);
    sensitive << ( select_ln220_fu_277_p3 );
    sensitive << ( and_ln220_2_fu_329_p2 );
    sensitive << ( add_ln220_fu_335_p2 );

    SC_METHOD(thread_select_ln220_3_fu_624_p3);
    sensitive << ( icmp_ln220_fu_271_p2 );
    sensitive << ( add_ln220_1_fu_618_p2 );

    SC_METHOD(thread_select_ln220_fu_277_p3);
    sensitive << ( ap_phi_mux_c1_0_i_phi_fu_165_p4 );
    sensitive << ( icmp_ln220_fu_271_p2 );

    SC_METHOD(thread_select_ln221_1_fu_367_p3);
    sensitive << ( and_ln220_2_fu_329_p2 );
    sensitive << ( or_ln_mid_i_fu_359_p3 );
    sensitive << ( select_ln220_1_fu_285_p3 );

    SC_METHOD(thread_select_ln221_2_fu_469_p3);
    sensitive << ( select_ln221_fu_347_p3 );
    sensitive << ( and_ln221_1_fu_393_p2 );
    sensitive << ( add_ln221_fu_407_p2 );

    SC_METHOD(thread_select_ln221_3_fu_610_p3);
    sensitive << ( or_ln221_fu_341_p2 );
    sensitive << ( add_ln221_1_fu_604_p2 );

    SC_METHOD(thread_select_ln221_fu_347_p3);
    sensitive << ( c2_0_i_reg_183 );
    sensitive << ( or_ln221_fu_341_p2 );

    SC_METHOD(thread_select_ln224_1_fu_449_p3);
    sensitive << ( and_ln221_1_fu_393_p2 );
    sensitive << ( or_ln_mid3_i_fu_441_p3 );
    sensitive << ( select_ln221_1_fu_367_p3 );

    SC_METHOD(thread_select_ln224_2_fu_525_p3);
    sensitive << ( select_ln224_fu_425_p3 );
    sensitive << ( and_ln224_fu_463_p2 );
    sensitive << ( add_ln224_fu_477_p2 );

    SC_METHOD(thread_select_ln224_3_fu_559_p3);
    sensitive << ( and_ln221_1_fu_393_p2 );
    sensitive << ( trunc_ln230_3_fu_433_p1 );
    sensitive << ( and_ln221_2_fu_553_p2 );

    SC_METHOD(thread_select_ln224_4_fu_596_p3);
    sensitive << ( or_ln224_1_fu_419_p2 );
    sensitive << ( add_ln224_1_fu_590_p2 );

    SC_METHOD(thread_select_ln224_fu_425_p3);
    sensitive << ( c3_0_i_reg_205 );
    sensitive << ( or_ln224_1_fu_419_p2 );

    SC_METHOD(thread_select_ln230_1_fu_517_p3);
    sensitive << ( and_ln224_fu_463_p2 );
    sensitive << ( or_ln_mid1_i_fu_507_p4 );
    sensitive << ( select_ln224_1_fu_449_p3 );

    SC_METHOD(thread_select_ln230_fu_495_p3);
    sensitive << ( c4_0_i_reg_216 );
    sensitive << ( or_ln230_1_fu_489_p2 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_fu_227_p4);
    sensitive << ( B_V_offset_dout );

    SC_METHOD(thread_trunc_ln230_1_fu_245_p1);
    sensitive << ( ap_phi_mux_c1_0_i_phi_fu_165_p4 );

    SC_METHOD(thread_trunc_ln230_2_fu_355_p1);
    sensitive << ( add_ln220_fu_335_p2 );

    SC_METHOD(thread_trunc_ln230_3_fu_433_p1);
    sensitive << ( add_ln221_fu_407_p2 );

    SC_METHOD(thread_trunc_ln230_4_fu_437_p1);
    sensitive << ( select_ln220_2_fu_399_p3 );

    SC_METHOD(thread_trunc_ln230_5_fu_503_p1);
    sensitive << ( add_ln224_fu_477_p2 );

    SC_METHOD(thread_trunc_ln230_6_fu_549_p1);
    sensitive << ( c2_0_i_reg_183 );

    SC_METHOD(thread_trunc_ln230_fu_241_p1);
    sensitive << ( c3_0_i_reg_205 );

    SC_METHOD(thread_trunc_ln_i_fu_567_p3);
    sensitive << ( add_ln230_fu_537_p2 );
    sensitive << ( select_ln224_3_fu_559_p3 );

    SC_METHOD(thread_xor_ln220_fu_293_p2);
    sensitive << ( icmp_ln220_fu_271_p2 );

    SC_METHOD(thread_xor_ln221_1_fu_543_p2);
    sensitive << ( or_ln221_fu_341_p2 );

    SC_METHOD(thread_xor_ln221_fu_375_p2);
    sensitive << ( icmp_ln221_fu_323_p2 );

    SC_METHOD(thread_xor_ln224_fu_457_p2);
    sensitive << ( and_ln221_1_fu_393_p2 );

    SC_METHOD(thread_zext_ln219_fu_237_p1);
    sensitive << ( tmp_fu_227_p4 );

    SC_METHOD(thread_zext_ln230_fu_533_p1);
    sensitive << ( select_ln230_fu_495_p3 );

    SC_METHOD(thread_zext_ln321_2_fu_632_p1);
    sensitive << ( add_ln321_reg_671 );

    SC_METHOD(thread_zext_ln321_fu_575_p1);
    sensitive << ( trunc_ln_i_fu_567_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( B_V_offset_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln219_fu_259_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "B_IO_L3_in_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, m_axi_B_V_AWVALID, "(port)m_axi_B_V_AWVALID");
    sc_trace(mVcdFile, m_axi_B_V_AWREADY, "(port)m_axi_B_V_AWREADY");
    sc_trace(mVcdFile, m_axi_B_V_AWADDR, "(port)m_axi_B_V_AWADDR");
    sc_trace(mVcdFile, m_axi_B_V_AWID, "(port)m_axi_B_V_AWID");
    sc_trace(mVcdFile, m_axi_B_V_AWLEN, "(port)m_axi_B_V_AWLEN");
    sc_trace(mVcdFile, m_axi_B_V_AWSIZE, "(port)m_axi_B_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_B_V_AWBURST, "(port)m_axi_B_V_AWBURST");
    sc_trace(mVcdFile, m_axi_B_V_AWLOCK, "(port)m_axi_B_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_B_V_AWCACHE, "(port)m_axi_B_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_B_V_AWPROT, "(port)m_axi_B_V_AWPROT");
    sc_trace(mVcdFile, m_axi_B_V_AWQOS, "(port)m_axi_B_V_AWQOS");
    sc_trace(mVcdFile, m_axi_B_V_AWREGION, "(port)m_axi_B_V_AWREGION");
    sc_trace(mVcdFile, m_axi_B_V_AWUSER, "(port)m_axi_B_V_AWUSER");
    sc_trace(mVcdFile, m_axi_B_V_WVALID, "(port)m_axi_B_V_WVALID");
    sc_trace(mVcdFile, m_axi_B_V_WREADY, "(port)m_axi_B_V_WREADY");
    sc_trace(mVcdFile, m_axi_B_V_WDATA, "(port)m_axi_B_V_WDATA");
    sc_trace(mVcdFile, m_axi_B_V_WSTRB, "(port)m_axi_B_V_WSTRB");
    sc_trace(mVcdFile, m_axi_B_V_WLAST, "(port)m_axi_B_V_WLAST");
    sc_trace(mVcdFile, m_axi_B_V_WID, "(port)m_axi_B_V_WID");
    sc_trace(mVcdFile, m_axi_B_V_WUSER, "(port)m_axi_B_V_WUSER");
    sc_trace(mVcdFile, m_axi_B_V_ARVALID, "(port)m_axi_B_V_ARVALID");
    sc_trace(mVcdFile, m_axi_B_V_ARREADY, "(port)m_axi_B_V_ARREADY");
    sc_trace(mVcdFile, m_axi_B_V_ARADDR, "(port)m_axi_B_V_ARADDR");
    sc_trace(mVcdFile, m_axi_B_V_ARID, "(port)m_axi_B_V_ARID");
    sc_trace(mVcdFile, m_axi_B_V_ARLEN, "(port)m_axi_B_V_ARLEN");
    sc_trace(mVcdFile, m_axi_B_V_ARSIZE, "(port)m_axi_B_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_B_V_ARBURST, "(port)m_axi_B_V_ARBURST");
    sc_trace(mVcdFile, m_axi_B_V_ARLOCK, "(port)m_axi_B_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_B_V_ARCACHE, "(port)m_axi_B_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_B_V_ARPROT, "(port)m_axi_B_V_ARPROT");
    sc_trace(mVcdFile, m_axi_B_V_ARQOS, "(port)m_axi_B_V_ARQOS");
    sc_trace(mVcdFile, m_axi_B_V_ARREGION, "(port)m_axi_B_V_ARREGION");
    sc_trace(mVcdFile, m_axi_B_V_ARUSER, "(port)m_axi_B_V_ARUSER");
    sc_trace(mVcdFile, m_axi_B_V_RVALID, "(port)m_axi_B_V_RVALID");
    sc_trace(mVcdFile, m_axi_B_V_RREADY, "(port)m_axi_B_V_RREADY");
    sc_trace(mVcdFile, m_axi_B_V_RDATA, "(port)m_axi_B_V_RDATA");
    sc_trace(mVcdFile, m_axi_B_V_RLAST, "(port)m_axi_B_V_RLAST");
    sc_trace(mVcdFile, m_axi_B_V_RID, "(port)m_axi_B_V_RID");
    sc_trace(mVcdFile, m_axi_B_V_RUSER, "(port)m_axi_B_V_RUSER");
    sc_trace(mVcdFile, m_axi_B_V_RRESP, "(port)m_axi_B_V_RRESP");
    sc_trace(mVcdFile, m_axi_B_V_BVALID, "(port)m_axi_B_V_BVALID");
    sc_trace(mVcdFile, m_axi_B_V_BREADY, "(port)m_axi_B_V_BREADY");
    sc_trace(mVcdFile, m_axi_B_V_BRESP, "(port)m_axi_B_V_BRESP");
    sc_trace(mVcdFile, m_axi_B_V_BID, "(port)m_axi_B_V_BID");
    sc_trace(mVcdFile, m_axi_B_V_BUSER, "(port)m_axi_B_V_BUSER");
    sc_trace(mVcdFile, B_V_offset_dout, "(port)B_V_offset_dout");
    sc_trace(mVcdFile, B_V_offset_empty_n, "(port)B_V_offset_empty_n");
    sc_trace(mVcdFile, B_V_offset_read, "(port)B_V_offset_read");
    sc_trace(mVcdFile, fifo_B_local_out_V_V_din, "(port)fifo_B_local_out_V_V_din");
    sc_trace(mVcdFile, fifo_B_local_out_V_V_full_n, "(port)fifo_B_local_out_V_V_full_n");
    sc_trace(mVcdFile, fifo_B_local_out_V_V_write, "(port)fifo_B_local_out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, B_V_blk_n_AR, "B_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln219_reg_647, "icmp_ln219_reg_647");
    sc_trace(mVcdFile, B_V_blk_n_R, "B_V_blk_n_R");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, icmp_ln219_reg_647_pp0_iter7_reg, "icmp_ln219_reg_647_pp0_iter7_reg");
    sc_trace(mVcdFile, B_V_offset_blk_n, "B_V_offset_blk_n");
    sc_trace(mVcdFile, fifo_B_local_out_V_V_blk_n, "fifo_B_local_out_V_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, icmp_ln219_reg_647_pp0_iter8_reg, "icmp_ln219_reg_647_pp0_iter8_reg");
    sc_trace(mVcdFile, indvar_flatten85_i_reg_139, "indvar_flatten85_i_reg_139");
    sc_trace(mVcdFile, indvar_flatten47_i_reg_150, "indvar_flatten47_i_reg_150");
    sc_trace(mVcdFile, c1_0_i_reg_161, "c1_0_i_reg_161");
    sc_trace(mVcdFile, indvar_flatten17_i_reg_172, "indvar_flatten17_i_reg_172");
    sc_trace(mVcdFile, c2_0_i_reg_183, "c2_0_i_reg_183");
    sc_trace(mVcdFile, indvar_flatten_i_reg_194, "indvar_flatten_i_reg_194");
    sc_trace(mVcdFile, c3_0_i_reg_205, "c3_0_i_reg_205");
    sc_trace(mVcdFile, c4_0_i_reg_216, "c4_0_i_reg_216");
    sc_trace(mVcdFile, zext_ln219_fu_237_p1, "zext_ln219_fu_237_p1");
    sc_trace(mVcdFile, zext_ln219_reg_642, "zext_ln219_reg_642");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, icmp_ln219_fu_259_p2, "icmp_ln219_fu_259_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln219_reg_647_pp0_iter1_reg, "icmp_ln219_reg_647_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln219_reg_647_pp0_iter2_reg, "icmp_ln219_reg_647_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln219_reg_647_pp0_iter3_reg, "icmp_ln219_reg_647_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln219_reg_647_pp0_iter4_reg, "icmp_ln219_reg_647_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln219_reg_647_pp0_iter5_reg, "icmp_ln219_reg_647_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln219_reg_647_pp0_iter6_reg, "icmp_ln219_reg_647_pp0_iter6_reg");
    sc_trace(mVcdFile, add_ln219_fu_265_p2, "add_ln219_fu_265_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln220_2_fu_399_p3, "select_ln220_2_fu_399_p3");
    sc_trace(mVcdFile, select_ln220_2_reg_656, "select_ln220_2_reg_656");
    sc_trace(mVcdFile, select_ln221_2_fu_469_p3, "select_ln221_2_fu_469_p3");
    sc_trace(mVcdFile, select_ln224_2_fu_525_p3, "select_ln224_2_fu_525_p3");
    sc_trace(mVcdFile, add_ln321_fu_579_p2, "add_ln321_fu_579_p2");
    sc_trace(mVcdFile, add_ln321_reg_671, "add_ln321_reg_671");
    sc_trace(mVcdFile, c4_fu_584_p2, "c4_fu_584_p2");
    sc_trace(mVcdFile, select_ln224_4_fu_596_p3, "select_ln224_4_fu_596_p3");
    sc_trace(mVcdFile, select_ln221_3_fu_610_p3, "select_ln221_3_fu_610_p3");
    sc_trace(mVcdFile, select_ln220_3_fu_624_p3, "select_ln220_3_fu_624_p3");
    sc_trace(mVcdFile, fifo_data_V_reg_702, "fifo_data_V_reg_702");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_phi_mux_c1_0_i_phi_fu_165_p4, "ap_phi_mux_c1_0_i_phi_fu_165_p4");
    sc_trace(mVcdFile, zext_ln321_2_fu_632_p1, "zext_ln321_2_fu_632_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_fu_227_p4, "tmp_fu_227_p4");
    sc_trace(mVcdFile, trunc_ln230_1_fu_245_p1, "trunc_ln230_1_fu_245_p1");
    sc_trace(mVcdFile, trunc_ln230_fu_241_p1, "trunc_ln230_fu_241_p1");
    sc_trace(mVcdFile, icmp_ln220_fu_271_p2, "icmp_ln220_fu_271_p2");
    sc_trace(mVcdFile, or_ln_i_fu_249_p4, "or_ln_i_fu_249_p4");
    sc_trace(mVcdFile, icmp_ln226_fu_299_p2, "icmp_ln226_fu_299_p2");
    sc_trace(mVcdFile, xor_ln220_fu_293_p2, "xor_ln220_fu_293_p2");
    sc_trace(mVcdFile, icmp_ln224_fu_311_p2, "icmp_ln224_fu_311_p2");
    sc_trace(mVcdFile, icmp_ln221_fu_323_p2, "icmp_ln221_fu_323_p2");
    sc_trace(mVcdFile, select_ln220_fu_277_p3, "select_ln220_fu_277_p3");
    sc_trace(mVcdFile, and_ln220_2_fu_329_p2, "and_ln220_2_fu_329_p2");
    sc_trace(mVcdFile, or_ln221_fu_341_p2, "or_ln221_fu_341_p2");
    sc_trace(mVcdFile, add_ln220_fu_335_p2, "add_ln220_fu_335_p2");
    sc_trace(mVcdFile, trunc_ln230_2_fu_355_p1, "trunc_ln230_2_fu_355_p1");
    sc_trace(mVcdFile, or_ln_mid_i_fu_359_p3, "or_ln_mid_i_fu_359_p3");
    sc_trace(mVcdFile, select_ln220_1_fu_285_p3, "select_ln220_1_fu_285_p3");
    sc_trace(mVcdFile, xor_ln221_fu_375_p2, "xor_ln221_fu_375_p2");
    sc_trace(mVcdFile, and_ln220_fu_305_p2, "and_ln220_fu_305_p2");
    sc_trace(mVcdFile, or_ln221_1_fu_381_p2, "or_ln221_1_fu_381_p2");
    sc_trace(mVcdFile, and_ln220_1_fu_317_p2, "and_ln220_1_fu_317_p2");
    sc_trace(mVcdFile, select_ln221_fu_347_p3, "select_ln221_fu_347_p3");
    sc_trace(mVcdFile, and_ln221_1_fu_393_p2, "and_ln221_1_fu_393_p2");
    sc_trace(mVcdFile, or_ln224_fu_413_p2, "or_ln224_fu_413_p2");
    sc_trace(mVcdFile, or_ln224_1_fu_419_p2, "or_ln224_1_fu_419_p2");
    sc_trace(mVcdFile, add_ln221_fu_407_p2, "add_ln221_fu_407_p2");
    sc_trace(mVcdFile, trunc_ln230_4_fu_437_p1, "trunc_ln230_4_fu_437_p1");
    sc_trace(mVcdFile, or_ln_mid3_i_fu_441_p3, "or_ln_mid3_i_fu_441_p3");
    sc_trace(mVcdFile, select_ln221_1_fu_367_p3, "select_ln221_1_fu_367_p3");
    sc_trace(mVcdFile, and_ln221_fu_387_p2, "and_ln221_fu_387_p2");
    sc_trace(mVcdFile, xor_ln224_fu_457_p2, "xor_ln224_fu_457_p2");
    sc_trace(mVcdFile, select_ln224_fu_425_p3, "select_ln224_fu_425_p3");
    sc_trace(mVcdFile, and_ln224_fu_463_p2, "and_ln224_fu_463_p2");
    sc_trace(mVcdFile, or_ln230_fu_483_p2, "or_ln230_fu_483_p2");
    sc_trace(mVcdFile, or_ln230_1_fu_489_p2, "or_ln230_1_fu_489_p2");
    sc_trace(mVcdFile, add_ln224_fu_477_p2, "add_ln224_fu_477_p2");
    sc_trace(mVcdFile, trunc_ln230_5_fu_503_p1, "trunc_ln230_5_fu_503_p1");
    sc_trace(mVcdFile, or_ln_mid1_i_fu_507_p4, "or_ln_mid1_i_fu_507_p4");
    sc_trace(mVcdFile, select_ln224_1_fu_449_p3, "select_ln224_1_fu_449_p3");
    sc_trace(mVcdFile, select_ln230_fu_495_p3, "select_ln230_fu_495_p3");
    sc_trace(mVcdFile, select_ln230_1_fu_517_p3, "select_ln230_1_fu_517_p3");
    sc_trace(mVcdFile, zext_ln230_fu_533_p1, "zext_ln230_fu_533_p1");
    sc_trace(mVcdFile, trunc_ln230_6_fu_549_p1, "trunc_ln230_6_fu_549_p1");
    sc_trace(mVcdFile, xor_ln221_1_fu_543_p2, "xor_ln221_1_fu_543_p2");
    sc_trace(mVcdFile, trunc_ln230_3_fu_433_p1, "trunc_ln230_3_fu_433_p1");
    sc_trace(mVcdFile, and_ln221_2_fu_553_p2, "and_ln221_2_fu_553_p2");
    sc_trace(mVcdFile, add_ln230_fu_537_p2, "add_ln230_fu_537_p2");
    sc_trace(mVcdFile, select_ln224_3_fu_559_p3, "select_ln224_3_fu_559_p3");
    sc_trace(mVcdFile, trunc_ln_i_fu_567_p3, "trunc_ln_i_fu_567_p3");
    sc_trace(mVcdFile, zext_ln321_fu_575_p1, "zext_ln321_fu_575_p1");
    sc_trace(mVcdFile, add_ln224_1_fu_590_p2, "add_ln224_1_fu_590_p2");
    sc_trace(mVcdFile, add_ln221_1_fu_604_p2, "add_ln221_1_fu_604_p2");
    sc_trace(mVcdFile, add_ln220_1_fu_618_p2, "add_ln220_1_fu_618_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

B_IO_L3_in::~B_IO_L3_in() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void B_IO_L3_in::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
            ap_enable_reg_pp0_iter9 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        c1_0_i_reg_161 = select_ln220_2_reg_656.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
        c1_0_i_reg_161 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_fu_259_p2.read()))) {
        c2_0_i_reg_183 = select_ln221_2_fu_469_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
        c2_0_i_reg_183 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_fu_259_p2.read()))) {
        c3_0_i_reg_205 = select_ln224_2_fu_525_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
        c3_0_i_reg_205 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_fu_259_p2.read()))) {
        c4_0_i_reg_216 = c4_fu_584_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
        c4_0_i_reg_216 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_fu_259_p2.read()))) {
        indvar_flatten17_i_reg_172 = select_ln221_3_fu_610_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
        indvar_flatten17_i_reg_172 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_fu_259_p2.read()))) {
        indvar_flatten47_i_reg_150 = select_ln220_3_fu_624_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
        indvar_flatten47_i_reg_150 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_fu_259_p2.read()))) {
        indvar_flatten85_i_reg_139 = add_ln219_fu_265_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
        indvar_flatten85_i_reg_139 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_fu_259_p2.read()))) {
        indvar_flatten_i_reg_194 = select_ln224_4_fu_596_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
        indvar_flatten_i_reg_194 = ap_const_lv4_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_fu_259_p2.read()))) {
        add_ln321_reg_671 = add_ln321_fu_579_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_data_V_reg_702 = m_axi_B_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln219_reg_647 = icmp_ln219_fu_259_p2.read();
        icmp_ln219_reg_647_pp0_iter1_reg = icmp_ln219_reg_647.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln219_reg_647_pp0_iter2_reg = icmp_ln219_reg_647_pp0_iter1_reg.read();
        icmp_ln219_reg_647_pp0_iter3_reg = icmp_ln219_reg_647_pp0_iter2_reg.read();
        icmp_ln219_reg_647_pp0_iter4_reg = icmp_ln219_reg_647_pp0_iter3_reg.read();
        icmp_ln219_reg_647_pp0_iter5_reg = icmp_ln219_reg_647_pp0_iter4_reg.read();
        icmp_ln219_reg_647_pp0_iter6_reg = icmp_ln219_reg_647_pp0_iter5_reg.read();
        icmp_ln219_reg_647_pp0_iter7_reg = icmp_ln219_reg_647_pp0_iter6_reg.read();
        icmp_ln219_reg_647_pp0_iter8_reg = icmp_ln219_reg_647_pp0_iter7_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_fu_259_p2.read()))) {
        select_ln220_2_reg_656 = select_ln220_2_fu_399_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
        zext_ln219_reg_642 = zext_ln219_fu_237_p1.read();
    }
}

void B_IO_L3_in::thread_B_V_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647.read()))) {
        B_V_blk_n_AR = m_axi_B_V_ARREADY.read();
    } else {
        B_V_blk_n_AR = ap_const_logic_1;
    }
}

void B_IO_L3_in::thread_B_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter7_reg.read()))) {
        B_V_blk_n_R = m_axi_B_V_RVALID.read();
    } else {
        B_V_blk_n_R = ap_const_logic_1;
    }
}

void B_IO_L3_in::thread_B_V_offset_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        B_V_offset_blk_n = B_V_offset_empty_n.read();
    } else {
        B_V_offset_blk_n = ap_const_logic_1;
    }
}

void B_IO_L3_in::thread_B_V_offset_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
        B_V_offset_read = ap_const_logic_1;
    } else {
        B_V_offset_read = ap_const_logic_0;
    }
}

void B_IO_L3_in::thread_add_ln219_fu_265_p2() {
    add_ln219_fu_265_p2 = (!ap_const_lv6_1.is_01() || !indvar_flatten85_i_reg_139.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(indvar_flatten85_i_reg_139.read()));
}

void B_IO_L3_in::thread_add_ln220_1_fu_618_p2() {
    add_ln220_1_fu_618_p2 = (!ap_const_lv6_1.is_01() || !indvar_flatten47_i_reg_150.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(indvar_flatten47_i_reg_150.read()));
}

void B_IO_L3_in::thread_add_ln220_fu_335_p2() {
    add_ln220_fu_335_p2 = (!ap_const_lv2_1.is_01() || !select_ln220_fu_277_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln220_fu_277_p3.read()));
}

void B_IO_L3_in::thread_add_ln221_1_fu_604_p2() {
    add_ln221_1_fu_604_p2 = (!ap_const_lv5_1.is_01() || !indvar_flatten17_i_reg_172.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(indvar_flatten17_i_reg_172.read()));
}

void B_IO_L3_in::thread_add_ln221_fu_407_p2() {
    add_ln221_fu_407_p2 = (!ap_const_lv2_1.is_01() || !select_ln221_fu_347_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln221_fu_347_p3.read()));
}

void B_IO_L3_in::thread_add_ln224_1_fu_590_p2() {
    add_ln224_1_fu_590_p2 = (!ap_const_lv4_1.is_01() || !indvar_flatten_i_reg_194.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(indvar_flatten_i_reg_194.read()));
}

void B_IO_L3_in::thread_add_ln224_fu_477_p2() {
    add_ln224_fu_477_p2 = (!ap_const_lv2_1.is_01() || !select_ln224_fu_425_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln224_fu_425_p3.read()));
}

void B_IO_L3_in::thread_add_ln230_fu_537_p2() {
    add_ln230_fu_537_p2 = (!select_ln230_1_fu_517_p3.read().is_01() || !zext_ln230_fu_533_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(select_ln230_1_fu_517_p3.read()) + sc_biguint<3>(zext_ln230_fu_533_p1.read()));
}

void B_IO_L3_in::thread_add_ln321_fu_579_p2() {
    add_ln321_fu_579_p2 = (!zext_ln321_fu_575_p1.read().is_01() || !zext_ln219_reg_642.read().is_01())? sc_lv<29>(): (sc_biguint<29>(zext_ln321_fu_575_p1.read()) + sc_biguint<29>(zext_ln219_reg_642.read()));
}

void B_IO_L3_in::thread_and_ln220_1_fu_317_p2() {
    and_ln220_1_fu_317_p2 = (icmp_ln224_fu_311_p2.read() & xor_ln220_fu_293_p2.read());
}

void B_IO_L3_in::thread_and_ln220_2_fu_329_p2() {
    and_ln220_2_fu_329_p2 = (icmp_ln221_fu_323_p2.read() & xor_ln220_fu_293_p2.read());
}

void B_IO_L3_in::thread_and_ln220_fu_305_p2() {
    and_ln220_fu_305_p2 = (icmp_ln226_fu_299_p2.read() & xor_ln220_fu_293_p2.read());
}

void B_IO_L3_in::thread_and_ln221_1_fu_393_p2() {
    and_ln221_1_fu_393_p2 = (and_ln220_1_fu_317_p2.read() & or_ln221_1_fu_381_p2.read());
}

void B_IO_L3_in::thread_and_ln221_2_fu_553_p2() {
    and_ln221_2_fu_553_p2 = (trunc_ln230_6_fu_549_p1.read() & xor_ln221_1_fu_543_p2.read());
}

void B_IO_L3_in::thread_and_ln221_fu_387_p2() {
    and_ln221_fu_387_p2 = (and_ln220_fu_305_p2.read() & or_ln221_1_fu_381_p2.read());
}

void B_IO_L3_in::thread_and_ln224_fu_463_p2() {
    and_ln224_fu_463_p2 = (and_ln221_fu_387_p2.read() & xor_ln224_fu_457_p2.read());
}

void B_IO_L3_in::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void B_IO_L3_in::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void B_IO_L3_in::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[2];
}

void B_IO_L3_in::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void B_IO_L3_in::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_B_V_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_B_local_out_V_V_full_n.read())));
}

void B_IO_L3_in::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_B_V_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_B_local_out_V_V_full_n.read())));
}

void B_IO_L3_in::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_B_V_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_B_local_out_V_V_full_n.read())));
}

void B_IO_L3_in::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read()));
}

void B_IO_L3_in::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_B_V_RVALID.read()));
}

void B_IO_L3_in::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter8_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_B_local_out_V_V_full_n.read()));
}

void B_IO_L3_in::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void B_IO_L3_in::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_B_V_ARREADY.read()));
}

void B_IO_L3_in::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void B_IO_L3_in::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void B_IO_L3_in::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void B_IO_L3_in::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void B_IO_L3_in::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void B_IO_L3_in::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void B_IO_L3_in::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void B_IO_L3_in::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln219_fu_259_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void B_IO_L3_in::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void B_IO_L3_in::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void B_IO_L3_in::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void B_IO_L3_in::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void B_IO_L3_in::thread_ap_phi_mux_c1_0_i_phi_fu_165_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647.read()))) {
        ap_phi_mux_c1_0_i_phi_fu_165_p4 = select_ln220_2_reg_656.read();
    } else {
        ap_phi_mux_c1_0_i_phi_fu_165_p4 = c1_0_i_reg_161.read();
    }
}

void B_IO_L3_in::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void B_IO_L3_in::thread_c4_fu_584_p2() {
    c4_fu_584_p2 = (!ap_const_lv2_1.is_01() || !select_ln230_fu_495_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln230_fu_495_p3.read()));
}

void B_IO_L3_in::thread_fifo_B_local_out_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter8_reg.read()))) {
        fifo_B_local_out_V_V_blk_n = fifo_B_local_out_V_V_full_n.read();
    } else {
        fifo_B_local_out_V_V_blk_n = ap_const_logic_1;
    }
}

void B_IO_L3_in::thread_fifo_B_local_out_V_V_din() {
    fifo_B_local_out_V_V_din = fifo_data_V_reg_702.read();
}

void B_IO_L3_in::thread_fifo_B_local_out_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter8_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_B_local_out_V_V_write = ap_const_logic_1;
    } else {
        fifo_B_local_out_V_V_write = ap_const_logic_0;
    }
}

void B_IO_L3_in::thread_icmp_ln219_fu_259_p2() {
    icmp_ln219_fu_259_p2 = (!indvar_flatten85_i_reg_139.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten85_i_reg_139.read() == ap_const_lv6_20);
}

void B_IO_L3_in::thread_icmp_ln220_fu_271_p2() {
    icmp_ln220_fu_271_p2 = (!indvar_flatten47_i_reg_150.read().is_01() || !ap_const_lv6_10.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten47_i_reg_150.read() == ap_const_lv6_10);
}

void B_IO_L3_in::thread_icmp_ln221_fu_323_p2() {
    icmp_ln221_fu_323_p2 = (!indvar_flatten17_i_reg_172.read().is_01() || !ap_const_lv5_8.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten17_i_reg_172.read() == ap_const_lv5_8);
}

void B_IO_L3_in::thread_icmp_ln224_fu_311_p2() {
    icmp_ln224_fu_311_p2 = (!indvar_flatten_i_reg_194.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_i_reg_194.read() == ap_const_lv4_4);
}

void B_IO_L3_in::thread_icmp_ln226_fu_299_p2() {
    icmp_ln226_fu_299_p2 = (!c4_0_i_reg_216.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(c4_0_i_reg_216.read() == ap_const_lv2_2);
}

void B_IO_L3_in::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void B_IO_L3_in::thread_m_axi_B_V_ARADDR() {
    m_axi_B_V_ARADDR =  (sc_lv<32>) (zext_ln321_2_fu_632_p1.read());
}

void B_IO_L3_in::thread_m_axi_B_V_ARBURST() {
    m_axi_B_V_ARBURST = ap_const_lv2_0;
}

void B_IO_L3_in::thread_m_axi_B_V_ARCACHE() {
    m_axi_B_V_ARCACHE = ap_const_lv4_0;
}

void B_IO_L3_in::thread_m_axi_B_V_ARID() {
    m_axi_B_V_ARID = ap_const_lv1_0;
}

void B_IO_L3_in::thread_m_axi_B_V_ARLEN() {
    m_axi_B_V_ARLEN = ap_const_lv32_1;
}

void B_IO_L3_in::thread_m_axi_B_V_ARLOCK() {
    m_axi_B_V_ARLOCK = ap_const_lv2_0;
}

void B_IO_L3_in::thread_m_axi_B_V_ARPROT() {
    m_axi_B_V_ARPROT = ap_const_lv3_0;
}

void B_IO_L3_in::thread_m_axi_B_V_ARQOS() {
    m_axi_B_V_ARQOS = ap_const_lv4_0;
}

void B_IO_L3_in::thread_m_axi_B_V_ARREGION() {
    m_axi_B_V_ARREGION = ap_const_lv4_0;
}

void B_IO_L3_in::thread_m_axi_B_V_ARSIZE() {
    m_axi_B_V_ARSIZE = ap_const_lv3_0;
}

void B_IO_L3_in::thread_m_axi_B_V_ARUSER() {
    m_axi_B_V_ARUSER = ap_const_lv1_0;
}

void B_IO_L3_in::thread_m_axi_B_V_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_B_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_B_V_ARVALID = ap_const_logic_0;
    }
}

void B_IO_L3_in::thread_m_axi_B_V_AWADDR() {
    m_axi_B_V_AWADDR = ap_const_lv32_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWBURST() {
    m_axi_B_V_AWBURST = ap_const_lv2_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWCACHE() {
    m_axi_B_V_AWCACHE = ap_const_lv4_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWID() {
    m_axi_B_V_AWID = ap_const_lv1_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWLEN() {
    m_axi_B_V_AWLEN = ap_const_lv32_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWLOCK() {
    m_axi_B_V_AWLOCK = ap_const_lv2_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWPROT() {
    m_axi_B_V_AWPROT = ap_const_lv3_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWQOS() {
    m_axi_B_V_AWQOS = ap_const_lv4_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWREGION() {
    m_axi_B_V_AWREGION = ap_const_lv4_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWSIZE() {
    m_axi_B_V_AWSIZE = ap_const_lv3_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWUSER() {
    m_axi_B_V_AWUSER = ap_const_lv1_0;
}

void B_IO_L3_in::thread_m_axi_B_V_AWVALID() {
    m_axi_B_V_AWVALID = ap_const_logic_0;
}

void B_IO_L3_in::thread_m_axi_B_V_BREADY() {
    m_axi_B_V_BREADY = ap_const_logic_0;
}

void B_IO_L3_in::thread_m_axi_B_V_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln219_reg_647_pp0_iter7_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_B_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_B_V_RREADY = ap_const_logic_0;
    }
}

void B_IO_L3_in::thread_m_axi_B_V_WDATA() {
    m_axi_B_V_WDATA = ap_const_lv128_lc_1;
}

void B_IO_L3_in::thread_m_axi_B_V_WID() {
    m_axi_B_V_WID = ap_const_lv1_0;
}

void B_IO_L3_in::thread_m_axi_B_V_WLAST() {
    m_axi_B_V_WLAST = ap_const_logic_0;
}

void B_IO_L3_in::thread_m_axi_B_V_WSTRB() {
    m_axi_B_V_WSTRB = ap_const_lv16_0;
}

void B_IO_L3_in::thread_m_axi_B_V_WUSER() {
    m_axi_B_V_WUSER = ap_const_lv1_0;
}

void B_IO_L3_in::thread_m_axi_B_V_WVALID() {
    m_axi_B_V_WVALID = ap_const_logic_0;
}

void B_IO_L3_in::thread_or_ln221_1_fu_381_p2() {
    or_ln221_1_fu_381_p2 = (icmp_ln220_fu_271_p2.read() | xor_ln221_fu_375_p2.read());
}

void B_IO_L3_in::thread_or_ln221_fu_341_p2() {
    or_ln221_fu_341_p2 = (and_ln220_2_fu_329_p2.read() | icmp_ln220_fu_271_p2.read());
}

void B_IO_L3_in::thread_or_ln224_1_fu_419_p2() {
    or_ln224_1_fu_419_p2 = (or_ln224_fu_413_p2.read() | icmp_ln220_fu_271_p2.read());
}

void B_IO_L3_in::thread_or_ln224_fu_413_p2() {
    or_ln224_fu_413_p2 = (and_ln221_1_fu_393_p2.read() | and_ln220_2_fu_329_p2.read());
}

void B_IO_L3_in::thread_or_ln230_1_fu_489_p2() {
    or_ln230_1_fu_489_p2 = (or_ln230_fu_483_p2.read() | or_ln221_fu_341_p2.read());
}

void B_IO_L3_in::thread_or_ln230_fu_483_p2() {
    or_ln230_fu_483_p2 = (and_ln224_fu_463_p2.read() | and_ln221_1_fu_393_p2.read());
}

void B_IO_L3_in::thread_or_ln_i_fu_249_p4() {
    or_ln_i_fu_249_p4 = esl_concat<2,1>(esl_concat<1,1>(trunc_ln230_1_fu_245_p1.read(), trunc_ln230_fu_241_p1.read()), ap_const_lv1_0);
}

void B_IO_L3_in::thread_or_ln_mid1_i_fu_507_p4() {
    or_ln_mid1_i_fu_507_p4 = esl_concat<2,1>(esl_concat<1,1>(trunc_ln230_4_fu_437_p1.read(), trunc_ln230_5_fu_503_p1.read()), ap_const_lv1_0);
}

void B_IO_L3_in::thread_or_ln_mid3_i_fu_441_p3() {
    or_ln_mid3_i_fu_441_p3 = esl_concat<1,2>(trunc_ln230_4_fu_437_p1.read(), ap_const_lv2_0);
}

void B_IO_L3_in::thread_or_ln_mid_i_fu_359_p3() {
    or_ln_mid_i_fu_359_p3 = esl_concat<1,2>(trunc_ln230_2_fu_355_p1.read(), ap_const_lv2_0);
}

void B_IO_L3_in::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void B_IO_L3_in::thread_select_ln220_1_fu_285_p3() {
    select_ln220_1_fu_285_p3 = (!icmp_ln220_fu_271_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln220_fu_271_p2.read()[0].to_bool())? ap_const_lv3_0: or_ln_i_fu_249_p4.read());
}

void B_IO_L3_in::thread_select_ln220_2_fu_399_p3() {
    select_ln220_2_fu_399_p3 = (!and_ln220_2_fu_329_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln220_2_fu_329_p2.read()[0].to_bool())? add_ln220_fu_335_p2.read(): select_ln220_fu_277_p3.read());
}

void B_IO_L3_in::thread_select_ln220_3_fu_624_p3() {
    select_ln220_3_fu_624_p3 = (!icmp_ln220_fu_271_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln220_fu_271_p2.read()[0].to_bool())? ap_const_lv6_1: add_ln220_1_fu_618_p2.read());
}

void B_IO_L3_in::thread_select_ln220_fu_277_p3() {
    select_ln220_fu_277_p3 = (!icmp_ln220_fu_271_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln220_fu_271_p2.read()[0].to_bool())? ap_const_lv2_0: ap_phi_mux_c1_0_i_phi_fu_165_p4.read());
}

void B_IO_L3_in::thread_select_ln221_1_fu_367_p3() {
    select_ln221_1_fu_367_p3 = (!and_ln220_2_fu_329_p2.read()[0].is_01())? sc_lv<3>(): ((and_ln220_2_fu_329_p2.read()[0].to_bool())? or_ln_mid_i_fu_359_p3.read(): select_ln220_1_fu_285_p3.read());
}

void B_IO_L3_in::thread_select_ln221_2_fu_469_p3() {
    select_ln221_2_fu_469_p3 = (!and_ln221_1_fu_393_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln221_1_fu_393_p2.read()[0].to_bool())? add_ln221_fu_407_p2.read(): select_ln221_fu_347_p3.read());
}

void B_IO_L3_in::thread_select_ln221_3_fu_610_p3() {
    select_ln221_3_fu_610_p3 = (!or_ln221_fu_341_p2.read()[0].is_01())? sc_lv<5>(): ((or_ln221_fu_341_p2.read()[0].to_bool())? ap_const_lv5_1: add_ln221_1_fu_604_p2.read());
}

void B_IO_L3_in::thread_select_ln221_fu_347_p3() {
    select_ln221_fu_347_p3 = (!or_ln221_fu_341_p2.read()[0].is_01())? sc_lv<2>(): ((or_ln221_fu_341_p2.read()[0].to_bool())? ap_const_lv2_0: c2_0_i_reg_183.read());
}

void B_IO_L3_in::thread_select_ln224_1_fu_449_p3() {
    select_ln224_1_fu_449_p3 = (!and_ln221_1_fu_393_p2.read()[0].is_01())? sc_lv<3>(): ((and_ln221_1_fu_393_p2.read()[0].to_bool())? or_ln_mid3_i_fu_441_p3.read(): select_ln221_1_fu_367_p3.read());
}

void B_IO_L3_in::thread_select_ln224_2_fu_525_p3() {
    select_ln224_2_fu_525_p3 = (!and_ln224_fu_463_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln224_fu_463_p2.read()[0].to_bool())? add_ln224_fu_477_p2.read(): select_ln224_fu_425_p3.read());
}

void B_IO_L3_in::thread_select_ln224_3_fu_559_p3() {
    select_ln224_3_fu_559_p3 = (!and_ln221_1_fu_393_p2.read()[0].is_01())? sc_lv<1>(): ((and_ln221_1_fu_393_p2.read()[0].to_bool())? trunc_ln230_3_fu_433_p1.read(): and_ln221_2_fu_553_p2.read());
}

void B_IO_L3_in::thread_select_ln224_4_fu_596_p3() {
    select_ln224_4_fu_596_p3 = (!or_ln224_1_fu_419_p2.read()[0].is_01())? sc_lv<4>(): ((or_ln224_1_fu_419_p2.read()[0].to_bool())? ap_const_lv4_1: add_ln224_1_fu_590_p2.read());
}

void B_IO_L3_in::thread_select_ln224_fu_425_p3() {
    select_ln224_fu_425_p3 = (!or_ln224_1_fu_419_p2.read()[0].is_01())? sc_lv<2>(): ((or_ln224_1_fu_419_p2.read()[0].to_bool())? ap_const_lv2_0: c3_0_i_reg_205.read());
}

void B_IO_L3_in::thread_select_ln230_1_fu_517_p3() {
    select_ln230_1_fu_517_p3 = (!and_ln224_fu_463_p2.read()[0].is_01())? sc_lv<3>(): ((and_ln224_fu_463_p2.read()[0].to_bool())? or_ln_mid1_i_fu_507_p4.read(): select_ln224_1_fu_449_p3.read());
}

void B_IO_L3_in::thread_select_ln230_fu_495_p3() {
    select_ln230_fu_495_p3 = (!or_ln230_1_fu_489_p2.read()[0].is_01())? sc_lv<2>(): ((or_ln230_1_fu_489_p2.read()[0].to_bool())? ap_const_lv2_0: c4_0_i_reg_216.read());
}

void B_IO_L3_in::thread_start_out() {
    start_out = real_start.read();
}

void B_IO_L3_in::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void B_IO_L3_in::thread_tmp_fu_227_p4() {
    tmp_fu_227_p4 = B_V_offset_dout.read().range(31, 4);
}

void B_IO_L3_in::thread_trunc_ln230_1_fu_245_p1() {
    trunc_ln230_1_fu_245_p1 = ap_phi_mux_c1_0_i_phi_fu_165_p4.read().range(1-1, 0);
}

void B_IO_L3_in::thread_trunc_ln230_2_fu_355_p1() {
    trunc_ln230_2_fu_355_p1 = add_ln220_fu_335_p2.read().range(1-1, 0);
}

void B_IO_L3_in::thread_trunc_ln230_3_fu_433_p1() {
    trunc_ln230_3_fu_433_p1 = add_ln221_fu_407_p2.read().range(1-1, 0);
}

void B_IO_L3_in::thread_trunc_ln230_4_fu_437_p1() {
    trunc_ln230_4_fu_437_p1 = select_ln220_2_fu_399_p3.read().range(1-1, 0);
}

void B_IO_L3_in::thread_trunc_ln230_5_fu_503_p1() {
    trunc_ln230_5_fu_503_p1 = add_ln224_fu_477_p2.read().range(1-1, 0);
}

void B_IO_L3_in::thread_trunc_ln230_6_fu_549_p1() {
    trunc_ln230_6_fu_549_p1 = c2_0_i_reg_183.read().range(1-1, 0);
}

void B_IO_L3_in::thread_trunc_ln230_fu_241_p1() {
    trunc_ln230_fu_241_p1 = c3_0_i_reg_205.read().range(1-1, 0);
}

void B_IO_L3_in::thread_trunc_ln_i_fu_567_p3() {
    trunc_ln_i_fu_567_p3 = esl_concat<3,1>(add_ln230_fu_537_p2.read(), select_ln224_3_fu_559_p3.read());
}

void B_IO_L3_in::thread_xor_ln220_fu_293_p2() {
    xor_ln220_fu_293_p2 = (icmp_ln220_fu_271_p2.read() ^ ap_const_lv1_1);
}

void B_IO_L3_in::thread_xor_ln221_1_fu_543_p2() {
    xor_ln221_1_fu_543_p2 = (or_ln221_fu_341_p2.read() ^ ap_const_lv1_1);
}

void B_IO_L3_in::thread_xor_ln221_fu_375_p2() {
    xor_ln221_fu_375_p2 = (icmp_ln221_fu_323_p2.read() ^ ap_const_lv1_1);
}

void B_IO_L3_in::thread_xor_ln224_fu_457_p2() {
    xor_ln224_fu_457_p2 = (and_ln221_1_fu_393_p2.read() ^ ap_const_lv1_1);
}

void B_IO_L3_in::thread_zext_ln219_fu_237_p1() {
    zext_ln219_fu_237_p1 = esl_zext<29,28>(tmp_fu_227_p4.read());
}

void B_IO_L3_in::thread_zext_ln230_fu_533_p1() {
    zext_ln230_fu_533_p1 = esl_zext<3,2>(select_ln230_fu_495_p3.read());
}

void B_IO_L3_in::thread_zext_ln321_2_fu_632_p1() {
    zext_ln321_2_fu_632_p1 = esl_zext<64,29>(add_ln321_reg_671.read());
}

void B_IO_L3_in::thread_zext_ln321_fu_575_p1() {
    zext_ln321_fu_575_p1 = esl_zext<29,4>(trunc_ln_i_fu_567_p3.read());
}

void B_IO_L3_in::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, B_V_offset_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln219_fu_259_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln219_fu_259_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

