// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _C_drain_IO_L1_out_he_HH_
#define _C_drain_IO_L1_out_he_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "C_drain_IO_L1_out_in.h"
#include "C_drain_IO_L1_out_in_1.h"
#include "C_drain_IO_L1_outjbC.h"

namespace ap_rtl {

struct C_drain_IO_L1_out_he : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<64> > fifo_C_drain_out_V_V_din;
    sc_in< sc_logic > fifo_C_drain_out_V_V_full_n;
    sc_out< sc_logic > fifo_C_drain_out_V_V_write;
    sc_in< sc_lv<32> > fifo_C_drain_local_in_V_dout;
    sc_in< sc_logic > fifo_C_drain_local_in_V_empty_n;
    sc_out< sc_logic > fifo_C_drain_local_in_V_read;


    // Module declarations
    C_drain_IO_L1_out_he(sc_module_name name);
    SC_HAS_PROCESS(C_drain_IO_L1_out_he);

    ~C_drain_IO_L1_out_he();

    sc_trace_file* mVcdFile;

    C_drain_IO_L1_outjbC* local_C_ping_0_V_U;
    C_drain_IO_L1_outjbC* local_C_pong_0_V_U;
    C_drain_IO_L1_out_in* grp_C_drain_IO_L1_out_in_fu_106;
    C_drain_IO_L1_out_in_1* grp_C_drain_IO_L1_out_in_1_fu_113;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > c0_fu_136_p2;
    sc_signal< sc_lv<2> > c0_reg_175;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > inter_trans_en_0_loa_2_reg_180;
    sc_signal< sc_lv<1> > icmp_ln664_fu_130_p2;
    sc_signal< sc_lv<2> > c1_fu_148_p2;
    sc_signal< sc_lv<2> > c1_reg_188;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > inter_trans_en_0_loa_reg_193;
    sc_signal< sc_lv<1> > icmp_ln665_fu_142_p2;
    sc_signal< sc_lv<1> > xor_ln678_fu_154_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_fu_106_ap_ready;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_fu_106_ap_done;
    sc_signal< sc_lv<1> > arb_1_reg_83;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_1_fu_113_ap_ready;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_1_fu_113_ap_done;
    sc_signal< bool > ap_block_state4_on_subcall_done;
    sc_signal< sc_lv<1> > local_C_ping_0_V_address0;
    sc_signal< sc_logic > local_C_ping_0_V_ce0;
    sc_signal< sc_lv<64> > local_C_ping_0_V_q0;
    sc_signal< sc_logic > local_C_ping_0_V_ce1;
    sc_signal< sc_logic > local_C_ping_0_V_we1;
    sc_signal< sc_lv<1> > local_C_pong_0_V_address0;
    sc_signal< sc_logic > local_C_pong_0_V_ce0;
    sc_signal< sc_lv<64> > local_C_pong_0_V_q0;
    sc_signal< sc_logic > local_C_pong_0_V_ce1;
    sc_signal< sc_logic > local_C_pong_0_V_we1;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_fu_106_ap_start;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_fu_106_ap_idle;
    sc_signal< sc_lv<1> > grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_address0;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_ce0;
    sc_signal< sc_lv<64> > grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_q0;
    sc_signal< sc_lv<1> > grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_address1;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_ce1;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_we1;
    sc_signal< sc_lv<64> > grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_d1;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_fu_106_fifo_C_drain_local_in_V_read;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_1_fu_113_ap_start;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_1_fu_113_ap_idle;
    sc_signal< sc_lv<1> > grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_address0;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_ce0;
    sc_signal< sc_lv<64> > grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_q0;
    sc_signal< sc_lv<64> > grp_C_drain_IO_L1_out_in_1_fu_113_fifo_C_drain_out_V_V_din;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_1_fu_113_fifo_C_drain_out_V_V_write;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_1_fu_113_en;
    sc_signal< sc_lv<2> > c0_prev_reg_72;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > ap_phi_mux_arb_1_phi_fu_87_p4;
    sc_signal< sc_lv<2> > c1_prev_reg_95;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_fu_106_ap_start_reg;
    sc_signal< sc_logic > grp_C_drain_IO_L1_out_in_1_fu_113_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > inter_trans_en_0_fu_60;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_state1();
    void thread_ap_block_state4_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_arb_1_phi_fu_87_p4();
    void thread_ap_ready();
    void thread_c0_fu_136_p2();
    void thread_c1_fu_148_p2();
    void thread_fifo_C_drain_local_in_V_read();
    void thread_fifo_C_drain_out_V_V_din();
    void thread_fifo_C_drain_out_V_V_write();
    void thread_grp_C_drain_IO_L1_out_in_1_fu_113_ap_start();
    void thread_grp_C_drain_IO_L1_out_in_1_fu_113_en();
    void thread_grp_C_drain_IO_L1_out_in_1_fu_113_local_C_0_V_q0();
    void thread_grp_C_drain_IO_L1_out_in_fu_106_ap_start();
    void thread_grp_C_drain_IO_L1_out_in_fu_106_local_C_0_V_q0();
    void thread_icmp_ln664_fu_130_p2();
    void thread_icmp_ln665_fu_142_p2();
    void thread_local_C_ping_0_V_address0();
    void thread_local_C_ping_0_V_ce0();
    void thread_local_C_ping_0_V_ce1();
    void thread_local_C_ping_0_V_we1();
    void thread_local_C_pong_0_V_address0();
    void thread_local_C_pong_0_V_ce0();
    void thread_local_C_pong_0_V_ce1();
    void thread_local_C_pong_0_V_we1();
    void thread_xor_ln678_fu_154_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
